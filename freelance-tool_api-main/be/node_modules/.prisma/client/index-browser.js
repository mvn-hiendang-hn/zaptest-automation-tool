
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.5.0
 * Query Engine version: a9055b89e58b4b5bfb59600785423b1db3d0e75d
 */
Prisma.prismaVersion = {
  client: "6.5.0",
  engine: "a9055b89e58b4b5bfb59600785423b1db3d0e75d"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  token: 'token'
};

exports.Prisma.Test_schedulesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  collection_id: 'collection_id',
  active: 'active',
  frequency: 'frequency',
  selected_days: 'selected_days',
  timer_type: 'timer_type',
  minute_interval: 'minute_interval',
  hour_interval: 'hour_interval',
  day_time: 'day_time',
  week_day: 'week_day',
  week_time: 'week_time',
  send_email: 'send_email',
  recipient_email: 'recipient_email',
  user_id: 'user_id',
  created_at: 'created_at'
};

exports.Prisma.Api_testsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  method: 'method',
  url: 'url',
  headers: 'headers',
  body: 'body',
  response: 'response',
  status_code: 'status_code',
  user_id: 'user_id',
  collection_id: 'collection_id'
};

exports.Prisma.Api_collectionsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  user_id: 'user_id'
};

exports.Prisma.Collection_runsScalarFieldEnum = {
  id: 'id',
  collection_id: 'collection_id',
  status: 'status',
  total_tests: 'total_tests',
  success_count: 'success_count',
  failure_count: 'failure_count',
  total_duration: 'total_duration',
  user_id: 'user_id',
  test_schedules_id: 'test_schedules_id',
  created_at: 'created_at',
  completed_at: 'completed_at'
};

exports.Prisma.Test_resultsScalarFieldEnum = {
  id: 'id',
  test_id: 'test_id',
  collection_run_id: 'collection_run_id',
  status_code: 'status_code',
  duration: 'duration',
  error: 'error',
  response: 'response',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  token: 'token'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.test_schedulesOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  collection_id: 'collection_id',
  frequency: 'frequency',
  timer_type: 'timer_type',
  day_time: 'day_time',
  week_time: 'week_time',
  recipient_email: 'recipient_email',
  user_id: 'user_id'
};

exports.Prisma.api_testsOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  method: 'method',
  url: 'url',
  body: 'body',
  user_id: 'user_id',
  collection_id: 'collection_id'
};

exports.Prisma.api_collectionsOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  user_id: 'user_id'
};

exports.Prisma.collection_runsOrderByRelevanceFieldEnum = {
  id: 'id',
  collection_id: 'collection_id',
  status: 'status',
  user_id: 'user_id',
  test_schedules_id: 'test_schedules_id'
};

exports.Prisma.test_resultsOrderByRelevanceFieldEnum = {
  id: 'id',
  test_id: 'test_id',
  collection_run_id: 'collection_run_id',
  error: 'error',
  response: 'response'
};


exports.Prisma.ModelName = {
  User: 'User',
  test_schedules: 'test_schedules',
  api_tests: 'api_tests',
  api_collections: 'api_collections',
  collection_runs: 'collection_runs',
  test_results: 'test_results'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
