
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model test_schedules
 * 
 */
export type test_schedules = $Result.DefaultSelection<Prisma.$test_schedulesPayload>
/**
 * Model api_tests
 * 
 */
export type api_tests = $Result.DefaultSelection<Prisma.$api_testsPayload>
/**
 * Model api_collections
 * 
 */
export type api_collections = $Result.DefaultSelection<Prisma.$api_collectionsPayload>
/**
 * Model collection_runs
 * 
 */
export type collection_runs = $Result.DefaultSelection<Prisma.$collection_runsPayload>
/**
 * Model test_results
 * 
 */
export type test_results = $Result.DefaultSelection<Prisma.$test_resultsPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.test_schedules`: Exposes CRUD operations for the **test_schedules** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Test_schedules
    * const test_schedules = await prisma.test_schedules.findMany()
    * ```
    */
  get test_schedules(): Prisma.test_schedulesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.api_tests`: Exposes CRUD operations for the **api_tests** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Api_tests
    * const api_tests = await prisma.api_tests.findMany()
    * ```
    */
  get api_tests(): Prisma.api_testsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.api_collections`: Exposes CRUD operations for the **api_collections** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Api_collections
    * const api_collections = await prisma.api_collections.findMany()
    * ```
    */
  get api_collections(): Prisma.api_collectionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.collection_runs`: Exposes CRUD operations for the **collection_runs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Collection_runs
    * const collection_runs = await prisma.collection_runs.findMany()
    * ```
    */
  get collection_runs(): Prisma.collection_runsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.test_results`: Exposes CRUD operations for the **test_results** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Test_results
    * const test_results = await prisma.test_results.findMany()
    * ```
    */
  get test_results(): Prisma.test_resultsDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.5.0
   * Query Engine version: a9055b89e58b4b5bfb59600785423b1db3d0e75d
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    test_schedules: 'test_schedules',
    api_tests: 'api_tests',
    api_collections: 'api_collections',
    collection_runs: 'collection_runs',
    test_results: 'test_results'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "user" | "test_schedules" | "api_tests" | "api_collections" | "collection_runs" | "test_results"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      test_schedules: {
        payload: Prisma.$test_schedulesPayload<ExtArgs>
        fields: Prisma.test_schedulesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.test_schedulesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_schedulesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.test_schedulesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_schedulesPayload>
          }
          findFirst: {
            args: Prisma.test_schedulesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_schedulesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.test_schedulesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_schedulesPayload>
          }
          findMany: {
            args: Prisma.test_schedulesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_schedulesPayload>[]
          }
          create: {
            args: Prisma.test_schedulesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_schedulesPayload>
          }
          createMany: {
            args: Prisma.test_schedulesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.test_schedulesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_schedulesPayload>
          }
          update: {
            args: Prisma.test_schedulesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_schedulesPayload>
          }
          deleteMany: {
            args: Prisma.test_schedulesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.test_schedulesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.test_schedulesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_schedulesPayload>
          }
          aggregate: {
            args: Prisma.Test_schedulesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTest_schedules>
          }
          groupBy: {
            args: Prisma.test_schedulesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Test_schedulesGroupByOutputType>[]
          }
          count: {
            args: Prisma.test_schedulesCountArgs<ExtArgs>
            result: $Utils.Optional<Test_schedulesCountAggregateOutputType> | number
          }
        }
      }
      api_tests: {
        payload: Prisma.$api_testsPayload<ExtArgs>
        fields: Prisma.api_testsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.api_testsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$api_testsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.api_testsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$api_testsPayload>
          }
          findFirst: {
            args: Prisma.api_testsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$api_testsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.api_testsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$api_testsPayload>
          }
          findMany: {
            args: Prisma.api_testsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$api_testsPayload>[]
          }
          create: {
            args: Prisma.api_testsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$api_testsPayload>
          }
          createMany: {
            args: Prisma.api_testsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.api_testsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$api_testsPayload>
          }
          update: {
            args: Prisma.api_testsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$api_testsPayload>
          }
          deleteMany: {
            args: Prisma.api_testsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.api_testsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.api_testsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$api_testsPayload>
          }
          aggregate: {
            args: Prisma.Api_testsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateApi_tests>
          }
          groupBy: {
            args: Prisma.api_testsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Api_testsGroupByOutputType>[]
          }
          count: {
            args: Prisma.api_testsCountArgs<ExtArgs>
            result: $Utils.Optional<Api_testsCountAggregateOutputType> | number
          }
        }
      }
      api_collections: {
        payload: Prisma.$api_collectionsPayload<ExtArgs>
        fields: Prisma.api_collectionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.api_collectionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$api_collectionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.api_collectionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$api_collectionsPayload>
          }
          findFirst: {
            args: Prisma.api_collectionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$api_collectionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.api_collectionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$api_collectionsPayload>
          }
          findMany: {
            args: Prisma.api_collectionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$api_collectionsPayload>[]
          }
          create: {
            args: Prisma.api_collectionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$api_collectionsPayload>
          }
          createMany: {
            args: Prisma.api_collectionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.api_collectionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$api_collectionsPayload>
          }
          update: {
            args: Prisma.api_collectionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$api_collectionsPayload>
          }
          deleteMany: {
            args: Prisma.api_collectionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.api_collectionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.api_collectionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$api_collectionsPayload>
          }
          aggregate: {
            args: Prisma.Api_collectionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateApi_collections>
          }
          groupBy: {
            args: Prisma.api_collectionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Api_collectionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.api_collectionsCountArgs<ExtArgs>
            result: $Utils.Optional<Api_collectionsCountAggregateOutputType> | number
          }
        }
      }
      collection_runs: {
        payload: Prisma.$collection_runsPayload<ExtArgs>
        fields: Prisma.collection_runsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.collection_runsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$collection_runsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.collection_runsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$collection_runsPayload>
          }
          findFirst: {
            args: Prisma.collection_runsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$collection_runsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.collection_runsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$collection_runsPayload>
          }
          findMany: {
            args: Prisma.collection_runsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$collection_runsPayload>[]
          }
          create: {
            args: Prisma.collection_runsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$collection_runsPayload>
          }
          createMany: {
            args: Prisma.collection_runsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.collection_runsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$collection_runsPayload>
          }
          update: {
            args: Prisma.collection_runsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$collection_runsPayload>
          }
          deleteMany: {
            args: Prisma.collection_runsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.collection_runsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.collection_runsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$collection_runsPayload>
          }
          aggregate: {
            args: Prisma.Collection_runsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCollection_runs>
          }
          groupBy: {
            args: Prisma.collection_runsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Collection_runsGroupByOutputType>[]
          }
          count: {
            args: Prisma.collection_runsCountArgs<ExtArgs>
            result: $Utils.Optional<Collection_runsCountAggregateOutputType> | number
          }
        }
      }
      test_results: {
        payload: Prisma.$test_resultsPayload<ExtArgs>
        fields: Prisma.test_resultsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.test_resultsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_resultsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.test_resultsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_resultsPayload>
          }
          findFirst: {
            args: Prisma.test_resultsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_resultsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.test_resultsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_resultsPayload>
          }
          findMany: {
            args: Prisma.test_resultsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_resultsPayload>[]
          }
          create: {
            args: Prisma.test_resultsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_resultsPayload>
          }
          createMany: {
            args: Prisma.test_resultsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.test_resultsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_resultsPayload>
          }
          update: {
            args: Prisma.test_resultsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_resultsPayload>
          }
          deleteMany: {
            args: Prisma.test_resultsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.test_resultsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.test_resultsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$test_resultsPayload>
          }
          aggregate: {
            args: Prisma.Test_resultsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTest_results>
          }
          groupBy: {
            args: Prisma.test_resultsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Test_resultsGroupByOutputType>[]
          }
          count: {
            args: Prisma.test_resultsCountArgs<ExtArgs>
            result: $Utils.Optional<Test_resultsCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    user?: UserOmit
    test_schedules?: test_schedulesOmit
    api_tests?: api_testsOmit
    api_collections?: api_collectionsOmit
    collection_runs?: collection_runsOmit
    test_results?: test_resultsOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    test_schedules: number
    api_tests: number
    api_collections: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    test_schedules?: boolean | UserCountOutputTypeCountTest_schedulesArgs
    api_tests?: boolean | UserCountOutputTypeCountApi_testsArgs
    api_collections?: boolean | UserCountOutputTypeCountApi_collectionsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTest_schedulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: test_schedulesWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountApi_testsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: api_testsWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountApi_collectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: api_collectionsWhereInput
  }


  /**
   * Count Type Test_schedulesCountOutputType
   */

  export type Test_schedulesCountOutputType = {
    collection_runs: number
  }

  export type Test_schedulesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collection_runs?: boolean | Test_schedulesCountOutputTypeCountCollection_runsArgs
  }

  // Custom InputTypes
  /**
   * Test_schedulesCountOutputType without action
   */
  export type Test_schedulesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Test_schedulesCountOutputType
     */
    select?: Test_schedulesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Test_schedulesCountOutputType without action
   */
  export type Test_schedulesCountOutputTypeCountCollection_runsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: collection_runsWhereInput
  }


  /**
   * Count Type Api_testsCountOutputType
   */

  export type Api_testsCountOutputType = {
    test_results: number
  }

  export type Api_testsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    test_results?: boolean | Api_testsCountOutputTypeCountTest_resultsArgs
  }

  // Custom InputTypes
  /**
   * Api_testsCountOutputType without action
   */
  export type Api_testsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Api_testsCountOutputType
     */
    select?: Api_testsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Api_testsCountOutputType without action
   */
  export type Api_testsCountOutputTypeCountTest_resultsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: test_resultsWhereInput
  }


  /**
   * Count Type Api_collectionsCountOutputType
   */

  export type Api_collectionsCountOutputType = {
    api_tests: number
    collection_runs: number
  }

  export type Api_collectionsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    api_tests?: boolean | Api_collectionsCountOutputTypeCountApi_testsArgs
    collection_runs?: boolean | Api_collectionsCountOutputTypeCountCollection_runsArgs
  }

  // Custom InputTypes
  /**
   * Api_collectionsCountOutputType without action
   */
  export type Api_collectionsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Api_collectionsCountOutputType
     */
    select?: Api_collectionsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Api_collectionsCountOutputType without action
   */
  export type Api_collectionsCountOutputTypeCountApi_testsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: api_testsWhereInput
  }

  /**
   * Api_collectionsCountOutputType without action
   */
  export type Api_collectionsCountOutputTypeCountCollection_runsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: collection_runsWhereInput
  }


  /**
   * Count Type Collection_runsCountOutputType
   */

  export type Collection_runsCountOutputType = {
    test_results: number
  }

  export type Collection_runsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    test_results?: boolean | Collection_runsCountOutputTypeCountTest_resultsArgs
  }

  // Custom InputTypes
  /**
   * Collection_runsCountOutputType without action
   */
  export type Collection_runsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Collection_runsCountOutputType
     */
    select?: Collection_runsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Collection_runsCountOutputType without action
   */
  export type Collection_runsCountOutputTypeCountTest_resultsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: test_resultsWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    username: string | null
    password: string | null
    token: string | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    username: string | null
    password: string | null
    token: string | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    username: number
    password: number
    token: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    username?: true
    password?: true
    token?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    username?: true
    password?: true
    token?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    username?: true
    password?: true
    token?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    username: string
    password: string
    token: string | null
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    token?: boolean
    test_schedules?: boolean | User$test_schedulesArgs<ExtArgs>
    api_tests?: boolean | User$api_testsArgs<ExtArgs>
    api_collections?: boolean | User$api_collectionsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>



  export type UserSelectScalar = {
    id?: boolean
    username?: boolean
    password?: boolean
    token?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "password" | "token", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    test_schedules?: boolean | User$test_schedulesArgs<ExtArgs>
    api_tests?: boolean | User$api_testsArgs<ExtArgs>
    api_collections?: boolean | User$api_collectionsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      test_schedules: Prisma.$test_schedulesPayload<ExtArgs>[]
      api_tests: Prisma.$api_testsPayload<ExtArgs>[]
      api_collections: Prisma.$api_collectionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      username: string
      password: string
      token: string | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    test_schedules<T extends User$test_schedulesArgs<ExtArgs> = {}>(args?: Subset<T, User$test_schedulesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$test_schedulesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    api_tests<T extends User$api_testsArgs<ExtArgs> = {}>(args?: Subset<T, User$api_testsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$api_testsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    api_collections<T extends User$api_collectionsArgs<ExtArgs> = {}>(args?: Subset<T, User$api_collectionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$api_collectionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly username: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly token: FieldRef<"User", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.test_schedules
   */
  export type User$test_schedulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_schedules
     */
    select?: test_schedulesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_schedules
     */
    omit?: test_schedulesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: test_schedulesInclude<ExtArgs> | null
    where?: test_schedulesWhereInput
    orderBy?: test_schedulesOrderByWithRelationInput | test_schedulesOrderByWithRelationInput[]
    cursor?: test_schedulesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Test_schedulesScalarFieldEnum | Test_schedulesScalarFieldEnum[]
  }

  /**
   * User.api_tests
   */
  export type User$api_testsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_tests
     */
    select?: api_testsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the api_tests
     */
    omit?: api_testsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: api_testsInclude<ExtArgs> | null
    where?: api_testsWhereInput
    orderBy?: api_testsOrderByWithRelationInput | api_testsOrderByWithRelationInput[]
    cursor?: api_testsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Api_testsScalarFieldEnum | Api_testsScalarFieldEnum[]
  }

  /**
   * User.api_collections
   */
  export type User$api_collectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_collections
     */
    select?: api_collectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the api_collections
     */
    omit?: api_collectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: api_collectionsInclude<ExtArgs> | null
    where?: api_collectionsWhereInput
    orderBy?: api_collectionsOrderByWithRelationInput | api_collectionsOrderByWithRelationInput[]
    cursor?: api_collectionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Api_collectionsScalarFieldEnum | Api_collectionsScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model test_schedules
   */

  export type AggregateTest_schedules = {
    _count: Test_schedulesCountAggregateOutputType | null
    _avg: Test_schedulesAvgAggregateOutputType | null
    _sum: Test_schedulesSumAggregateOutputType | null
    _min: Test_schedulesMinAggregateOutputType | null
    _max: Test_schedulesMaxAggregateOutputType | null
  }

  export type Test_schedulesAvgAggregateOutputType = {
    minute_interval: number | null
    hour_interval: number | null
    week_day: number | null
  }

  export type Test_schedulesSumAggregateOutputType = {
    minute_interval: number | null
    hour_interval: number | null
    week_day: number | null
  }

  export type Test_schedulesMinAggregateOutputType = {
    id: string | null
    name: string | null
    collection_id: string | null
    active: boolean | null
    frequency: string | null
    timer_type: string | null
    minute_interval: number | null
    hour_interval: number | null
    day_time: string | null
    week_day: number | null
    week_time: string | null
    send_email: boolean | null
    recipient_email: string | null
    user_id: string | null
    created_at: Date | null
  }

  export type Test_schedulesMaxAggregateOutputType = {
    id: string | null
    name: string | null
    collection_id: string | null
    active: boolean | null
    frequency: string | null
    timer_type: string | null
    minute_interval: number | null
    hour_interval: number | null
    day_time: string | null
    week_day: number | null
    week_time: string | null
    send_email: boolean | null
    recipient_email: string | null
    user_id: string | null
    created_at: Date | null
  }

  export type Test_schedulesCountAggregateOutputType = {
    id: number
    name: number
    collection_id: number
    active: number
    frequency: number
    selected_days: number
    timer_type: number
    minute_interval: number
    hour_interval: number
    day_time: number
    week_day: number
    week_time: number
    send_email: number
    recipient_email: number
    user_id: number
    created_at: number
    _all: number
  }


  export type Test_schedulesAvgAggregateInputType = {
    minute_interval?: true
    hour_interval?: true
    week_day?: true
  }

  export type Test_schedulesSumAggregateInputType = {
    minute_interval?: true
    hour_interval?: true
    week_day?: true
  }

  export type Test_schedulesMinAggregateInputType = {
    id?: true
    name?: true
    collection_id?: true
    active?: true
    frequency?: true
    timer_type?: true
    minute_interval?: true
    hour_interval?: true
    day_time?: true
    week_day?: true
    week_time?: true
    send_email?: true
    recipient_email?: true
    user_id?: true
    created_at?: true
  }

  export type Test_schedulesMaxAggregateInputType = {
    id?: true
    name?: true
    collection_id?: true
    active?: true
    frequency?: true
    timer_type?: true
    minute_interval?: true
    hour_interval?: true
    day_time?: true
    week_day?: true
    week_time?: true
    send_email?: true
    recipient_email?: true
    user_id?: true
    created_at?: true
  }

  export type Test_schedulesCountAggregateInputType = {
    id?: true
    name?: true
    collection_id?: true
    active?: true
    frequency?: true
    selected_days?: true
    timer_type?: true
    minute_interval?: true
    hour_interval?: true
    day_time?: true
    week_day?: true
    week_time?: true
    send_email?: true
    recipient_email?: true
    user_id?: true
    created_at?: true
    _all?: true
  }

  export type Test_schedulesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which test_schedules to aggregate.
     */
    where?: test_schedulesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of test_schedules to fetch.
     */
    orderBy?: test_schedulesOrderByWithRelationInput | test_schedulesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: test_schedulesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` test_schedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` test_schedules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned test_schedules
    **/
    _count?: true | Test_schedulesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Test_schedulesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Test_schedulesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Test_schedulesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Test_schedulesMaxAggregateInputType
  }

  export type GetTest_schedulesAggregateType<T extends Test_schedulesAggregateArgs> = {
        [P in keyof T & keyof AggregateTest_schedules]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTest_schedules[P]>
      : GetScalarType<T[P], AggregateTest_schedules[P]>
  }




  export type test_schedulesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: test_schedulesWhereInput
    orderBy?: test_schedulesOrderByWithAggregationInput | test_schedulesOrderByWithAggregationInput[]
    by: Test_schedulesScalarFieldEnum[] | Test_schedulesScalarFieldEnum
    having?: test_schedulesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Test_schedulesCountAggregateInputType | true
    _avg?: Test_schedulesAvgAggregateInputType
    _sum?: Test_schedulesSumAggregateInputType
    _min?: Test_schedulesMinAggregateInputType
    _max?: Test_schedulesMaxAggregateInputType
  }

  export type Test_schedulesGroupByOutputType = {
    id: string
    name: string
    collection_id: string | null
    active: boolean
    frequency: string
    selected_days: JsonValue
    timer_type: string
    minute_interval: number
    hour_interval: number | null
    day_time: string | null
    week_day: number | null
    week_time: string | null
    send_email: boolean
    recipient_email: string
    user_id: string
    created_at: Date
    _count: Test_schedulesCountAggregateOutputType | null
    _avg: Test_schedulesAvgAggregateOutputType | null
    _sum: Test_schedulesSumAggregateOutputType | null
    _min: Test_schedulesMinAggregateOutputType | null
    _max: Test_schedulesMaxAggregateOutputType | null
  }

  type GetTest_schedulesGroupByPayload<T extends test_schedulesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Test_schedulesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Test_schedulesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Test_schedulesGroupByOutputType[P]>
            : GetScalarType<T[P], Test_schedulesGroupByOutputType[P]>
        }
      >
    >


  export type test_schedulesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    collection_id?: boolean
    active?: boolean
    frequency?: boolean
    selected_days?: boolean
    timer_type?: boolean
    minute_interval?: boolean
    hour_interval?: boolean
    day_time?: boolean
    week_day?: boolean
    week_time?: boolean
    send_email?: boolean
    recipient_email?: boolean
    user_id?: boolean
    created_at?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
    collection_runs?: boolean | test_schedules$collection_runsArgs<ExtArgs>
    api_collection?: boolean | test_schedules$api_collectionArgs<ExtArgs>
    _count?: boolean | Test_schedulesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["test_schedules"]>



  export type test_schedulesSelectScalar = {
    id?: boolean
    name?: boolean
    collection_id?: boolean
    active?: boolean
    frequency?: boolean
    selected_days?: boolean
    timer_type?: boolean
    minute_interval?: boolean
    hour_interval?: boolean
    day_time?: boolean
    week_day?: boolean
    week_time?: boolean
    send_email?: boolean
    recipient_email?: boolean
    user_id?: boolean
    created_at?: boolean
  }

  export type test_schedulesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "collection_id" | "active" | "frequency" | "selected_days" | "timer_type" | "minute_interval" | "hour_interval" | "day_time" | "week_day" | "week_time" | "send_email" | "recipient_email" | "user_id" | "created_at", ExtArgs["result"]["test_schedules"]>
  export type test_schedulesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
    collection_runs?: boolean | test_schedules$collection_runsArgs<ExtArgs>
    api_collection?: boolean | test_schedules$api_collectionArgs<ExtArgs>
    _count?: boolean | Test_schedulesCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $test_schedulesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "test_schedules"
    objects: {
      User: Prisma.$UserPayload<ExtArgs>
      collection_runs: Prisma.$collection_runsPayload<ExtArgs>[]
      api_collection: Prisma.$api_collectionsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      collection_id: string | null
      active: boolean
      frequency: string
      selected_days: Prisma.JsonValue
      timer_type: string
      minute_interval: number
      hour_interval: number | null
      day_time: string | null
      week_day: number | null
      week_time: string | null
      send_email: boolean
      recipient_email: string
      user_id: string
      created_at: Date
    }, ExtArgs["result"]["test_schedules"]>
    composites: {}
  }

  type test_schedulesGetPayload<S extends boolean | null | undefined | test_schedulesDefaultArgs> = $Result.GetResult<Prisma.$test_schedulesPayload, S>

  type test_schedulesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<test_schedulesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Test_schedulesCountAggregateInputType | true
    }

  export interface test_schedulesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['test_schedules'], meta: { name: 'test_schedules' } }
    /**
     * Find zero or one Test_schedules that matches the filter.
     * @param {test_schedulesFindUniqueArgs} args - Arguments to find a Test_schedules
     * @example
     * // Get one Test_schedules
     * const test_schedules = await prisma.test_schedules.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends test_schedulesFindUniqueArgs>(args: SelectSubset<T, test_schedulesFindUniqueArgs<ExtArgs>>): Prisma__test_schedulesClient<$Result.GetResult<Prisma.$test_schedulesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Test_schedules that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {test_schedulesFindUniqueOrThrowArgs} args - Arguments to find a Test_schedules
     * @example
     * // Get one Test_schedules
     * const test_schedules = await prisma.test_schedules.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends test_schedulesFindUniqueOrThrowArgs>(args: SelectSubset<T, test_schedulesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__test_schedulesClient<$Result.GetResult<Prisma.$test_schedulesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Test_schedules that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {test_schedulesFindFirstArgs} args - Arguments to find a Test_schedules
     * @example
     * // Get one Test_schedules
     * const test_schedules = await prisma.test_schedules.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends test_schedulesFindFirstArgs>(args?: SelectSubset<T, test_schedulesFindFirstArgs<ExtArgs>>): Prisma__test_schedulesClient<$Result.GetResult<Prisma.$test_schedulesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Test_schedules that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {test_schedulesFindFirstOrThrowArgs} args - Arguments to find a Test_schedules
     * @example
     * // Get one Test_schedules
     * const test_schedules = await prisma.test_schedules.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends test_schedulesFindFirstOrThrowArgs>(args?: SelectSubset<T, test_schedulesFindFirstOrThrowArgs<ExtArgs>>): Prisma__test_schedulesClient<$Result.GetResult<Prisma.$test_schedulesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Test_schedules that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {test_schedulesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Test_schedules
     * const test_schedules = await prisma.test_schedules.findMany()
     * 
     * // Get first 10 Test_schedules
     * const test_schedules = await prisma.test_schedules.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const test_schedulesWithIdOnly = await prisma.test_schedules.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends test_schedulesFindManyArgs>(args?: SelectSubset<T, test_schedulesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$test_schedulesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Test_schedules.
     * @param {test_schedulesCreateArgs} args - Arguments to create a Test_schedules.
     * @example
     * // Create one Test_schedules
     * const Test_schedules = await prisma.test_schedules.create({
     *   data: {
     *     // ... data to create a Test_schedules
     *   }
     * })
     * 
     */
    create<T extends test_schedulesCreateArgs>(args: SelectSubset<T, test_schedulesCreateArgs<ExtArgs>>): Prisma__test_schedulesClient<$Result.GetResult<Prisma.$test_schedulesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Test_schedules.
     * @param {test_schedulesCreateManyArgs} args - Arguments to create many Test_schedules.
     * @example
     * // Create many Test_schedules
     * const test_schedules = await prisma.test_schedules.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends test_schedulesCreateManyArgs>(args?: SelectSubset<T, test_schedulesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Test_schedules.
     * @param {test_schedulesDeleteArgs} args - Arguments to delete one Test_schedules.
     * @example
     * // Delete one Test_schedules
     * const Test_schedules = await prisma.test_schedules.delete({
     *   where: {
     *     // ... filter to delete one Test_schedules
     *   }
     * })
     * 
     */
    delete<T extends test_schedulesDeleteArgs>(args: SelectSubset<T, test_schedulesDeleteArgs<ExtArgs>>): Prisma__test_schedulesClient<$Result.GetResult<Prisma.$test_schedulesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Test_schedules.
     * @param {test_schedulesUpdateArgs} args - Arguments to update one Test_schedules.
     * @example
     * // Update one Test_schedules
     * const test_schedules = await prisma.test_schedules.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends test_schedulesUpdateArgs>(args: SelectSubset<T, test_schedulesUpdateArgs<ExtArgs>>): Prisma__test_schedulesClient<$Result.GetResult<Prisma.$test_schedulesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Test_schedules.
     * @param {test_schedulesDeleteManyArgs} args - Arguments to filter Test_schedules to delete.
     * @example
     * // Delete a few Test_schedules
     * const { count } = await prisma.test_schedules.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends test_schedulesDeleteManyArgs>(args?: SelectSubset<T, test_schedulesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Test_schedules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {test_schedulesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Test_schedules
     * const test_schedules = await prisma.test_schedules.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends test_schedulesUpdateManyArgs>(args: SelectSubset<T, test_schedulesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Test_schedules.
     * @param {test_schedulesUpsertArgs} args - Arguments to update or create a Test_schedules.
     * @example
     * // Update or create a Test_schedules
     * const test_schedules = await prisma.test_schedules.upsert({
     *   create: {
     *     // ... data to create a Test_schedules
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Test_schedules we want to update
     *   }
     * })
     */
    upsert<T extends test_schedulesUpsertArgs>(args: SelectSubset<T, test_schedulesUpsertArgs<ExtArgs>>): Prisma__test_schedulesClient<$Result.GetResult<Prisma.$test_schedulesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Test_schedules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {test_schedulesCountArgs} args - Arguments to filter Test_schedules to count.
     * @example
     * // Count the number of Test_schedules
     * const count = await prisma.test_schedules.count({
     *   where: {
     *     // ... the filter for the Test_schedules we want to count
     *   }
     * })
    **/
    count<T extends test_schedulesCountArgs>(
      args?: Subset<T, test_schedulesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Test_schedulesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Test_schedules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Test_schedulesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Test_schedulesAggregateArgs>(args: Subset<T, Test_schedulesAggregateArgs>): Prisma.PrismaPromise<GetTest_schedulesAggregateType<T>>

    /**
     * Group by Test_schedules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {test_schedulesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends test_schedulesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: test_schedulesGroupByArgs['orderBy'] }
        : { orderBy?: test_schedulesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, test_schedulesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTest_schedulesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the test_schedules model
   */
  readonly fields: test_schedulesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for test_schedules.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__test_schedulesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    collection_runs<T extends test_schedules$collection_runsArgs<ExtArgs> = {}>(args?: Subset<T, test_schedules$collection_runsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$collection_runsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    api_collection<T extends test_schedules$api_collectionArgs<ExtArgs> = {}>(args?: Subset<T, test_schedules$api_collectionArgs<ExtArgs>>): Prisma__api_collectionsClient<$Result.GetResult<Prisma.$api_collectionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the test_schedules model
   */ 
  interface test_schedulesFieldRefs {
    readonly id: FieldRef<"test_schedules", 'String'>
    readonly name: FieldRef<"test_schedules", 'String'>
    readonly collection_id: FieldRef<"test_schedules", 'String'>
    readonly active: FieldRef<"test_schedules", 'Boolean'>
    readonly frequency: FieldRef<"test_schedules", 'String'>
    readonly selected_days: FieldRef<"test_schedules", 'Json'>
    readonly timer_type: FieldRef<"test_schedules", 'String'>
    readonly minute_interval: FieldRef<"test_schedules", 'Int'>
    readonly hour_interval: FieldRef<"test_schedules", 'Int'>
    readonly day_time: FieldRef<"test_schedules", 'String'>
    readonly week_day: FieldRef<"test_schedules", 'Int'>
    readonly week_time: FieldRef<"test_schedules", 'String'>
    readonly send_email: FieldRef<"test_schedules", 'Boolean'>
    readonly recipient_email: FieldRef<"test_schedules", 'String'>
    readonly user_id: FieldRef<"test_schedules", 'String'>
    readonly created_at: FieldRef<"test_schedules", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * test_schedules findUnique
   */
  export type test_schedulesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_schedules
     */
    select?: test_schedulesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_schedules
     */
    omit?: test_schedulesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: test_schedulesInclude<ExtArgs> | null
    /**
     * Filter, which test_schedules to fetch.
     */
    where: test_schedulesWhereUniqueInput
  }

  /**
   * test_schedules findUniqueOrThrow
   */
  export type test_schedulesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_schedules
     */
    select?: test_schedulesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_schedules
     */
    omit?: test_schedulesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: test_schedulesInclude<ExtArgs> | null
    /**
     * Filter, which test_schedules to fetch.
     */
    where: test_schedulesWhereUniqueInput
  }

  /**
   * test_schedules findFirst
   */
  export type test_schedulesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_schedules
     */
    select?: test_schedulesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_schedules
     */
    omit?: test_schedulesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: test_schedulesInclude<ExtArgs> | null
    /**
     * Filter, which test_schedules to fetch.
     */
    where?: test_schedulesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of test_schedules to fetch.
     */
    orderBy?: test_schedulesOrderByWithRelationInput | test_schedulesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for test_schedules.
     */
    cursor?: test_schedulesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` test_schedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` test_schedules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of test_schedules.
     */
    distinct?: Test_schedulesScalarFieldEnum | Test_schedulesScalarFieldEnum[]
  }

  /**
   * test_schedules findFirstOrThrow
   */
  export type test_schedulesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_schedules
     */
    select?: test_schedulesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_schedules
     */
    omit?: test_schedulesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: test_schedulesInclude<ExtArgs> | null
    /**
     * Filter, which test_schedules to fetch.
     */
    where?: test_schedulesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of test_schedules to fetch.
     */
    orderBy?: test_schedulesOrderByWithRelationInput | test_schedulesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for test_schedules.
     */
    cursor?: test_schedulesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` test_schedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` test_schedules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of test_schedules.
     */
    distinct?: Test_schedulesScalarFieldEnum | Test_schedulesScalarFieldEnum[]
  }

  /**
   * test_schedules findMany
   */
  export type test_schedulesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_schedules
     */
    select?: test_schedulesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_schedules
     */
    omit?: test_schedulesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: test_schedulesInclude<ExtArgs> | null
    /**
     * Filter, which test_schedules to fetch.
     */
    where?: test_schedulesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of test_schedules to fetch.
     */
    orderBy?: test_schedulesOrderByWithRelationInput | test_schedulesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing test_schedules.
     */
    cursor?: test_schedulesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` test_schedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` test_schedules.
     */
    skip?: number
    distinct?: Test_schedulesScalarFieldEnum | Test_schedulesScalarFieldEnum[]
  }

  /**
   * test_schedules create
   */
  export type test_schedulesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_schedules
     */
    select?: test_schedulesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_schedules
     */
    omit?: test_schedulesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: test_schedulesInclude<ExtArgs> | null
    /**
     * The data needed to create a test_schedules.
     */
    data: XOR<test_schedulesCreateInput, test_schedulesUncheckedCreateInput>
  }

  /**
   * test_schedules createMany
   */
  export type test_schedulesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many test_schedules.
     */
    data: test_schedulesCreateManyInput | test_schedulesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * test_schedules update
   */
  export type test_schedulesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_schedules
     */
    select?: test_schedulesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_schedules
     */
    omit?: test_schedulesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: test_schedulesInclude<ExtArgs> | null
    /**
     * The data needed to update a test_schedules.
     */
    data: XOR<test_schedulesUpdateInput, test_schedulesUncheckedUpdateInput>
    /**
     * Choose, which test_schedules to update.
     */
    where: test_schedulesWhereUniqueInput
  }

  /**
   * test_schedules updateMany
   */
  export type test_schedulesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update test_schedules.
     */
    data: XOR<test_schedulesUpdateManyMutationInput, test_schedulesUncheckedUpdateManyInput>
    /**
     * Filter which test_schedules to update
     */
    where?: test_schedulesWhereInput
    /**
     * Limit how many test_schedules to update.
     */
    limit?: number
  }

  /**
   * test_schedules upsert
   */
  export type test_schedulesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_schedules
     */
    select?: test_schedulesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_schedules
     */
    omit?: test_schedulesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: test_schedulesInclude<ExtArgs> | null
    /**
     * The filter to search for the test_schedules to update in case it exists.
     */
    where: test_schedulesWhereUniqueInput
    /**
     * In case the test_schedules found by the `where` argument doesn't exist, create a new test_schedules with this data.
     */
    create: XOR<test_schedulesCreateInput, test_schedulesUncheckedCreateInput>
    /**
     * In case the test_schedules was found with the provided `where` argument, update it with this data.
     */
    update: XOR<test_schedulesUpdateInput, test_schedulesUncheckedUpdateInput>
  }

  /**
   * test_schedules delete
   */
  export type test_schedulesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_schedules
     */
    select?: test_schedulesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_schedules
     */
    omit?: test_schedulesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: test_schedulesInclude<ExtArgs> | null
    /**
     * Filter which test_schedules to delete.
     */
    where: test_schedulesWhereUniqueInput
  }

  /**
   * test_schedules deleteMany
   */
  export type test_schedulesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which test_schedules to delete
     */
    where?: test_schedulesWhereInput
    /**
     * Limit how many test_schedules to delete.
     */
    limit?: number
  }

  /**
   * test_schedules.collection_runs
   */
  export type test_schedules$collection_runsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collection_runs
     */
    select?: collection_runsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the collection_runs
     */
    omit?: collection_runsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: collection_runsInclude<ExtArgs> | null
    where?: collection_runsWhereInput
    orderBy?: collection_runsOrderByWithRelationInput | collection_runsOrderByWithRelationInput[]
    cursor?: collection_runsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Collection_runsScalarFieldEnum | Collection_runsScalarFieldEnum[]
  }

  /**
   * test_schedules.api_collection
   */
  export type test_schedules$api_collectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_collections
     */
    select?: api_collectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the api_collections
     */
    omit?: api_collectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: api_collectionsInclude<ExtArgs> | null
    where?: api_collectionsWhereInput
  }

  /**
   * test_schedules without action
   */
  export type test_schedulesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_schedules
     */
    select?: test_schedulesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_schedules
     */
    omit?: test_schedulesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: test_schedulesInclude<ExtArgs> | null
  }


  /**
   * Model api_tests
   */

  export type AggregateApi_tests = {
    _count: Api_testsCountAggregateOutputType | null
    _avg: Api_testsAvgAggregateOutputType | null
    _sum: Api_testsSumAggregateOutputType | null
    _min: Api_testsMinAggregateOutputType | null
    _max: Api_testsMaxAggregateOutputType | null
  }

  export type Api_testsAvgAggregateOutputType = {
    status_code: number | null
  }

  export type Api_testsSumAggregateOutputType = {
    status_code: number | null
  }

  export type Api_testsMinAggregateOutputType = {
    id: string | null
    name: string | null
    method: string | null
    url: string | null
    body: string | null
    status_code: number | null
    user_id: string | null
    collection_id: string | null
  }

  export type Api_testsMaxAggregateOutputType = {
    id: string | null
    name: string | null
    method: string | null
    url: string | null
    body: string | null
    status_code: number | null
    user_id: string | null
    collection_id: string | null
  }

  export type Api_testsCountAggregateOutputType = {
    id: number
    name: number
    method: number
    url: number
    headers: number
    body: number
    response: number
    status_code: number
    user_id: number
    collection_id: number
    _all: number
  }


  export type Api_testsAvgAggregateInputType = {
    status_code?: true
  }

  export type Api_testsSumAggregateInputType = {
    status_code?: true
  }

  export type Api_testsMinAggregateInputType = {
    id?: true
    name?: true
    method?: true
    url?: true
    body?: true
    status_code?: true
    user_id?: true
    collection_id?: true
  }

  export type Api_testsMaxAggregateInputType = {
    id?: true
    name?: true
    method?: true
    url?: true
    body?: true
    status_code?: true
    user_id?: true
    collection_id?: true
  }

  export type Api_testsCountAggregateInputType = {
    id?: true
    name?: true
    method?: true
    url?: true
    headers?: true
    body?: true
    response?: true
    status_code?: true
    user_id?: true
    collection_id?: true
    _all?: true
  }

  export type Api_testsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which api_tests to aggregate.
     */
    where?: api_testsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of api_tests to fetch.
     */
    orderBy?: api_testsOrderByWithRelationInput | api_testsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: api_testsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` api_tests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` api_tests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned api_tests
    **/
    _count?: true | Api_testsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Api_testsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Api_testsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Api_testsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Api_testsMaxAggregateInputType
  }

  export type GetApi_testsAggregateType<T extends Api_testsAggregateArgs> = {
        [P in keyof T & keyof AggregateApi_tests]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateApi_tests[P]>
      : GetScalarType<T[P], AggregateApi_tests[P]>
  }




  export type api_testsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: api_testsWhereInput
    orderBy?: api_testsOrderByWithAggregationInput | api_testsOrderByWithAggregationInput[]
    by: Api_testsScalarFieldEnum[] | Api_testsScalarFieldEnum
    having?: api_testsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Api_testsCountAggregateInputType | true
    _avg?: Api_testsAvgAggregateInputType
    _sum?: Api_testsSumAggregateInputType
    _min?: Api_testsMinAggregateInputType
    _max?: Api_testsMaxAggregateInputType
  }

  export type Api_testsGroupByOutputType = {
    id: string
    name: string
    method: string
    url: string
    headers: JsonValue
    body: string | null
    response: JsonValue
    status_code: number
    user_id: string
    collection_id: string | null
    _count: Api_testsCountAggregateOutputType | null
    _avg: Api_testsAvgAggregateOutputType | null
    _sum: Api_testsSumAggregateOutputType | null
    _min: Api_testsMinAggregateOutputType | null
    _max: Api_testsMaxAggregateOutputType | null
  }

  type GetApi_testsGroupByPayload<T extends api_testsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Api_testsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Api_testsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Api_testsGroupByOutputType[P]>
            : GetScalarType<T[P], Api_testsGroupByOutputType[P]>
        }
      >
    >


  export type api_testsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    method?: boolean
    url?: boolean
    headers?: boolean
    body?: boolean
    response?: boolean
    status_code?: boolean
    user_id?: boolean
    collection_id?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
    api_collection?: boolean | api_tests$api_collectionArgs<ExtArgs>
    test_results?: boolean | api_tests$test_resultsArgs<ExtArgs>
    _count?: boolean | Api_testsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["api_tests"]>



  export type api_testsSelectScalar = {
    id?: boolean
    name?: boolean
    method?: boolean
    url?: boolean
    headers?: boolean
    body?: boolean
    response?: boolean
    status_code?: boolean
    user_id?: boolean
    collection_id?: boolean
  }

  export type api_testsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "method" | "url" | "headers" | "body" | "response" | "status_code" | "user_id" | "collection_id", ExtArgs["result"]["api_tests"]>
  export type api_testsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
    api_collection?: boolean | api_tests$api_collectionArgs<ExtArgs>
    test_results?: boolean | api_tests$test_resultsArgs<ExtArgs>
    _count?: boolean | Api_testsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $api_testsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "api_tests"
    objects: {
      User: Prisma.$UserPayload<ExtArgs>
      api_collection: Prisma.$api_collectionsPayload<ExtArgs> | null
      test_results: Prisma.$test_resultsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      method: string
      url: string
      headers: Prisma.JsonValue
      body: string | null
      response: Prisma.JsonValue
      status_code: number
      user_id: string
      collection_id: string | null
    }, ExtArgs["result"]["api_tests"]>
    composites: {}
  }

  type api_testsGetPayload<S extends boolean | null | undefined | api_testsDefaultArgs> = $Result.GetResult<Prisma.$api_testsPayload, S>

  type api_testsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<api_testsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Api_testsCountAggregateInputType | true
    }

  export interface api_testsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['api_tests'], meta: { name: 'api_tests' } }
    /**
     * Find zero or one Api_tests that matches the filter.
     * @param {api_testsFindUniqueArgs} args - Arguments to find a Api_tests
     * @example
     * // Get one Api_tests
     * const api_tests = await prisma.api_tests.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends api_testsFindUniqueArgs>(args: SelectSubset<T, api_testsFindUniqueArgs<ExtArgs>>): Prisma__api_testsClient<$Result.GetResult<Prisma.$api_testsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Api_tests that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {api_testsFindUniqueOrThrowArgs} args - Arguments to find a Api_tests
     * @example
     * // Get one Api_tests
     * const api_tests = await prisma.api_tests.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends api_testsFindUniqueOrThrowArgs>(args: SelectSubset<T, api_testsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__api_testsClient<$Result.GetResult<Prisma.$api_testsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Api_tests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {api_testsFindFirstArgs} args - Arguments to find a Api_tests
     * @example
     * // Get one Api_tests
     * const api_tests = await prisma.api_tests.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends api_testsFindFirstArgs>(args?: SelectSubset<T, api_testsFindFirstArgs<ExtArgs>>): Prisma__api_testsClient<$Result.GetResult<Prisma.$api_testsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Api_tests that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {api_testsFindFirstOrThrowArgs} args - Arguments to find a Api_tests
     * @example
     * // Get one Api_tests
     * const api_tests = await prisma.api_tests.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends api_testsFindFirstOrThrowArgs>(args?: SelectSubset<T, api_testsFindFirstOrThrowArgs<ExtArgs>>): Prisma__api_testsClient<$Result.GetResult<Prisma.$api_testsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Api_tests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {api_testsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Api_tests
     * const api_tests = await prisma.api_tests.findMany()
     * 
     * // Get first 10 Api_tests
     * const api_tests = await prisma.api_tests.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const api_testsWithIdOnly = await prisma.api_tests.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends api_testsFindManyArgs>(args?: SelectSubset<T, api_testsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$api_testsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Api_tests.
     * @param {api_testsCreateArgs} args - Arguments to create a Api_tests.
     * @example
     * // Create one Api_tests
     * const Api_tests = await prisma.api_tests.create({
     *   data: {
     *     // ... data to create a Api_tests
     *   }
     * })
     * 
     */
    create<T extends api_testsCreateArgs>(args: SelectSubset<T, api_testsCreateArgs<ExtArgs>>): Prisma__api_testsClient<$Result.GetResult<Prisma.$api_testsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Api_tests.
     * @param {api_testsCreateManyArgs} args - Arguments to create many Api_tests.
     * @example
     * // Create many Api_tests
     * const api_tests = await prisma.api_tests.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends api_testsCreateManyArgs>(args?: SelectSubset<T, api_testsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Api_tests.
     * @param {api_testsDeleteArgs} args - Arguments to delete one Api_tests.
     * @example
     * // Delete one Api_tests
     * const Api_tests = await prisma.api_tests.delete({
     *   where: {
     *     // ... filter to delete one Api_tests
     *   }
     * })
     * 
     */
    delete<T extends api_testsDeleteArgs>(args: SelectSubset<T, api_testsDeleteArgs<ExtArgs>>): Prisma__api_testsClient<$Result.GetResult<Prisma.$api_testsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Api_tests.
     * @param {api_testsUpdateArgs} args - Arguments to update one Api_tests.
     * @example
     * // Update one Api_tests
     * const api_tests = await prisma.api_tests.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends api_testsUpdateArgs>(args: SelectSubset<T, api_testsUpdateArgs<ExtArgs>>): Prisma__api_testsClient<$Result.GetResult<Prisma.$api_testsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Api_tests.
     * @param {api_testsDeleteManyArgs} args - Arguments to filter Api_tests to delete.
     * @example
     * // Delete a few Api_tests
     * const { count } = await prisma.api_tests.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends api_testsDeleteManyArgs>(args?: SelectSubset<T, api_testsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Api_tests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {api_testsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Api_tests
     * const api_tests = await prisma.api_tests.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends api_testsUpdateManyArgs>(args: SelectSubset<T, api_testsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Api_tests.
     * @param {api_testsUpsertArgs} args - Arguments to update or create a Api_tests.
     * @example
     * // Update or create a Api_tests
     * const api_tests = await prisma.api_tests.upsert({
     *   create: {
     *     // ... data to create a Api_tests
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Api_tests we want to update
     *   }
     * })
     */
    upsert<T extends api_testsUpsertArgs>(args: SelectSubset<T, api_testsUpsertArgs<ExtArgs>>): Prisma__api_testsClient<$Result.GetResult<Prisma.$api_testsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Api_tests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {api_testsCountArgs} args - Arguments to filter Api_tests to count.
     * @example
     * // Count the number of Api_tests
     * const count = await prisma.api_tests.count({
     *   where: {
     *     // ... the filter for the Api_tests we want to count
     *   }
     * })
    **/
    count<T extends api_testsCountArgs>(
      args?: Subset<T, api_testsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Api_testsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Api_tests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Api_testsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Api_testsAggregateArgs>(args: Subset<T, Api_testsAggregateArgs>): Prisma.PrismaPromise<GetApi_testsAggregateType<T>>

    /**
     * Group by Api_tests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {api_testsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends api_testsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: api_testsGroupByArgs['orderBy'] }
        : { orderBy?: api_testsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, api_testsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetApi_testsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the api_tests model
   */
  readonly fields: api_testsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for api_tests.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__api_testsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    api_collection<T extends api_tests$api_collectionArgs<ExtArgs> = {}>(args?: Subset<T, api_tests$api_collectionArgs<ExtArgs>>): Prisma__api_collectionsClient<$Result.GetResult<Prisma.$api_collectionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    test_results<T extends api_tests$test_resultsArgs<ExtArgs> = {}>(args?: Subset<T, api_tests$test_resultsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$test_resultsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the api_tests model
   */ 
  interface api_testsFieldRefs {
    readonly id: FieldRef<"api_tests", 'String'>
    readonly name: FieldRef<"api_tests", 'String'>
    readonly method: FieldRef<"api_tests", 'String'>
    readonly url: FieldRef<"api_tests", 'String'>
    readonly headers: FieldRef<"api_tests", 'Json'>
    readonly body: FieldRef<"api_tests", 'String'>
    readonly response: FieldRef<"api_tests", 'Json'>
    readonly status_code: FieldRef<"api_tests", 'Int'>
    readonly user_id: FieldRef<"api_tests", 'String'>
    readonly collection_id: FieldRef<"api_tests", 'String'>
  }
    

  // Custom InputTypes
  /**
   * api_tests findUnique
   */
  export type api_testsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_tests
     */
    select?: api_testsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the api_tests
     */
    omit?: api_testsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: api_testsInclude<ExtArgs> | null
    /**
     * Filter, which api_tests to fetch.
     */
    where: api_testsWhereUniqueInput
  }

  /**
   * api_tests findUniqueOrThrow
   */
  export type api_testsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_tests
     */
    select?: api_testsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the api_tests
     */
    omit?: api_testsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: api_testsInclude<ExtArgs> | null
    /**
     * Filter, which api_tests to fetch.
     */
    where: api_testsWhereUniqueInput
  }

  /**
   * api_tests findFirst
   */
  export type api_testsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_tests
     */
    select?: api_testsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the api_tests
     */
    omit?: api_testsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: api_testsInclude<ExtArgs> | null
    /**
     * Filter, which api_tests to fetch.
     */
    where?: api_testsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of api_tests to fetch.
     */
    orderBy?: api_testsOrderByWithRelationInput | api_testsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for api_tests.
     */
    cursor?: api_testsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` api_tests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` api_tests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of api_tests.
     */
    distinct?: Api_testsScalarFieldEnum | Api_testsScalarFieldEnum[]
  }

  /**
   * api_tests findFirstOrThrow
   */
  export type api_testsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_tests
     */
    select?: api_testsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the api_tests
     */
    omit?: api_testsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: api_testsInclude<ExtArgs> | null
    /**
     * Filter, which api_tests to fetch.
     */
    where?: api_testsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of api_tests to fetch.
     */
    orderBy?: api_testsOrderByWithRelationInput | api_testsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for api_tests.
     */
    cursor?: api_testsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` api_tests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` api_tests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of api_tests.
     */
    distinct?: Api_testsScalarFieldEnum | Api_testsScalarFieldEnum[]
  }

  /**
   * api_tests findMany
   */
  export type api_testsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_tests
     */
    select?: api_testsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the api_tests
     */
    omit?: api_testsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: api_testsInclude<ExtArgs> | null
    /**
     * Filter, which api_tests to fetch.
     */
    where?: api_testsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of api_tests to fetch.
     */
    orderBy?: api_testsOrderByWithRelationInput | api_testsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing api_tests.
     */
    cursor?: api_testsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` api_tests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` api_tests.
     */
    skip?: number
    distinct?: Api_testsScalarFieldEnum | Api_testsScalarFieldEnum[]
  }

  /**
   * api_tests create
   */
  export type api_testsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_tests
     */
    select?: api_testsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the api_tests
     */
    omit?: api_testsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: api_testsInclude<ExtArgs> | null
    /**
     * The data needed to create a api_tests.
     */
    data: XOR<api_testsCreateInput, api_testsUncheckedCreateInput>
  }

  /**
   * api_tests createMany
   */
  export type api_testsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many api_tests.
     */
    data: api_testsCreateManyInput | api_testsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * api_tests update
   */
  export type api_testsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_tests
     */
    select?: api_testsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the api_tests
     */
    omit?: api_testsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: api_testsInclude<ExtArgs> | null
    /**
     * The data needed to update a api_tests.
     */
    data: XOR<api_testsUpdateInput, api_testsUncheckedUpdateInput>
    /**
     * Choose, which api_tests to update.
     */
    where: api_testsWhereUniqueInput
  }

  /**
   * api_tests updateMany
   */
  export type api_testsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update api_tests.
     */
    data: XOR<api_testsUpdateManyMutationInput, api_testsUncheckedUpdateManyInput>
    /**
     * Filter which api_tests to update
     */
    where?: api_testsWhereInput
    /**
     * Limit how many api_tests to update.
     */
    limit?: number
  }

  /**
   * api_tests upsert
   */
  export type api_testsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_tests
     */
    select?: api_testsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the api_tests
     */
    omit?: api_testsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: api_testsInclude<ExtArgs> | null
    /**
     * The filter to search for the api_tests to update in case it exists.
     */
    where: api_testsWhereUniqueInput
    /**
     * In case the api_tests found by the `where` argument doesn't exist, create a new api_tests with this data.
     */
    create: XOR<api_testsCreateInput, api_testsUncheckedCreateInput>
    /**
     * In case the api_tests was found with the provided `where` argument, update it with this data.
     */
    update: XOR<api_testsUpdateInput, api_testsUncheckedUpdateInput>
  }

  /**
   * api_tests delete
   */
  export type api_testsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_tests
     */
    select?: api_testsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the api_tests
     */
    omit?: api_testsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: api_testsInclude<ExtArgs> | null
    /**
     * Filter which api_tests to delete.
     */
    where: api_testsWhereUniqueInput
  }

  /**
   * api_tests deleteMany
   */
  export type api_testsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which api_tests to delete
     */
    where?: api_testsWhereInput
    /**
     * Limit how many api_tests to delete.
     */
    limit?: number
  }

  /**
   * api_tests.api_collection
   */
  export type api_tests$api_collectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_collections
     */
    select?: api_collectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the api_collections
     */
    omit?: api_collectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: api_collectionsInclude<ExtArgs> | null
    where?: api_collectionsWhereInput
  }

  /**
   * api_tests.test_results
   */
  export type api_tests$test_resultsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_results
     */
    select?: test_resultsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_results
     */
    omit?: test_resultsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: test_resultsInclude<ExtArgs> | null
    where?: test_resultsWhereInput
    orderBy?: test_resultsOrderByWithRelationInput | test_resultsOrderByWithRelationInput[]
    cursor?: test_resultsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Test_resultsScalarFieldEnum | Test_resultsScalarFieldEnum[]
  }

  /**
   * api_tests without action
   */
  export type api_testsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_tests
     */
    select?: api_testsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the api_tests
     */
    omit?: api_testsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: api_testsInclude<ExtArgs> | null
  }


  /**
   * Model api_collections
   */

  export type AggregateApi_collections = {
    _count: Api_collectionsCountAggregateOutputType | null
    _min: Api_collectionsMinAggregateOutputType | null
    _max: Api_collectionsMaxAggregateOutputType | null
  }

  export type Api_collectionsMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    user_id: string | null
  }

  export type Api_collectionsMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    user_id: string | null
  }

  export type Api_collectionsCountAggregateOutputType = {
    id: number
    name: number
    description: number
    user_id: number
    _all: number
  }


  export type Api_collectionsMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    user_id?: true
  }

  export type Api_collectionsMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    user_id?: true
  }

  export type Api_collectionsCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    user_id?: true
    _all?: true
  }

  export type Api_collectionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which api_collections to aggregate.
     */
    where?: api_collectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of api_collections to fetch.
     */
    orderBy?: api_collectionsOrderByWithRelationInput | api_collectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: api_collectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` api_collections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` api_collections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned api_collections
    **/
    _count?: true | Api_collectionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Api_collectionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Api_collectionsMaxAggregateInputType
  }

  export type GetApi_collectionsAggregateType<T extends Api_collectionsAggregateArgs> = {
        [P in keyof T & keyof AggregateApi_collections]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateApi_collections[P]>
      : GetScalarType<T[P], AggregateApi_collections[P]>
  }




  export type api_collectionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: api_collectionsWhereInput
    orderBy?: api_collectionsOrderByWithAggregationInput | api_collectionsOrderByWithAggregationInput[]
    by: Api_collectionsScalarFieldEnum[] | Api_collectionsScalarFieldEnum
    having?: api_collectionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Api_collectionsCountAggregateInputType | true
    _min?: Api_collectionsMinAggregateInputType
    _max?: Api_collectionsMaxAggregateInputType
  }

  export type Api_collectionsGroupByOutputType = {
    id: string
    name: string
    description: string
    user_id: string
    _count: Api_collectionsCountAggregateOutputType | null
    _min: Api_collectionsMinAggregateOutputType | null
    _max: Api_collectionsMaxAggregateOutputType | null
  }

  type GetApi_collectionsGroupByPayload<T extends api_collectionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Api_collectionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Api_collectionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Api_collectionsGroupByOutputType[P]>
            : GetScalarType<T[P], Api_collectionsGroupByOutputType[P]>
        }
      >
    >


  export type api_collectionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    user_id?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
    api_tests?: boolean | api_collections$api_testsArgs<ExtArgs>
    collection_runs?: boolean | api_collections$collection_runsArgs<ExtArgs>
    test_schedule?: boolean | api_collections$test_scheduleArgs<ExtArgs>
    _count?: boolean | Api_collectionsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["api_collections"]>



  export type api_collectionsSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    user_id?: boolean
  }

  export type api_collectionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "user_id", ExtArgs["result"]["api_collections"]>
  export type api_collectionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
    api_tests?: boolean | api_collections$api_testsArgs<ExtArgs>
    collection_runs?: boolean | api_collections$collection_runsArgs<ExtArgs>
    test_schedule?: boolean | api_collections$test_scheduleArgs<ExtArgs>
    _count?: boolean | Api_collectionsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $api_collectionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "api_collections"
    objects: {
      User: Prisma.$UserPayload<ExtArgs>
      api_tests: Prisma.$api_testsPayload<ExtArgs>[]
      collection_runs: Prisma.$collection_runsPayload<ExtArgs>[]
      test_schedule: Prisma.$test_schedulesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string
      user_id: string
    }, ExtArgs["result"]["api_collections"]>
    composites: {}
  }

  type api_collectionsGetPayload<S extends boolean | null | undefined | api_collectionsDefaultArgs> = $Result.GetResult<Prisma.$api_collectionsPayload, S>

  type api_collectionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<api_collectionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Api_collectionsCountAggregateInputType | true
    }

  export interface api_collectionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['api_collections'], meta: { name: 'api_collections' } }
    /**
     * Find zero or one Api_collections that matches the filter.
     * @param {api_collectionsFindUniqueArgs} args - Arguments to find a Api_collections
     * @example
     * // Get one Api_collections
     * const api_collections = await prisma.api_collections.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends api_collectionsFindUniqueArgs>(args: SelectSubset<T, api_collectionsFindUniqueArgs<ExtArgs>>): Prisma__api_collectionsClient<$Result.GetResult<Prisma.$api_collectionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Api_collections that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {api_collectionsFindUniqueOrThrowArgs} args - Arguments to find a Api_collections
     * @example
     * // Get one Api_collections
     * const api_collections = await prisma.api_collections.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends api_collectionsFindUniqueOrThrowArgs>(args: SelectSubset<T, api_collectionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__api_collectionsClient<$Result.GetResult<Prisma.$api_collectionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Api_collections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {api_collectionsFindFirstArgs} args - Arguments to find a Api_collections
     * @example
     * // Get one Api_collections
     * const api_collections = await prisma.api_collections.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends api_collectionsFindFirstArgs>(args?: SelectSubset<T, api_collectionsFindFirstArgs<ExtArgs>>): Prisma__api_collectionsClient<$Result.GetResult<Prisma.$api_collectionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Api_collections that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {api_collectionsFindFirstOrThrowArgs} args - Arguments to find a Api_collections
     * @example
     * // Get one Api_collections
     * const api_collections = await prisma.api_collections.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends api_collectionsFindFirstOrThrowArgs>(args?: SelectSubset<T, api_collectionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__api_collectionsClient<$Result.GetResult<Prisma.$api_collectionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Api_collections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {api_collectionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Api_collections
     * const api_collections = await prisma.api_collections.findMany()
     * 
     * // Get first 10 Api_collections
     * const api_collections = await prisma.api_collections.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const api_collectionsWithIdOnly = await prisma.api_collections.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends api_collectionsFindManyArgs>(args?: SelectSubset<T, api_collectionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$api_collectionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Api_collections.
     * @param {api_collectionsCreateArgs} args - Arguments to create a Api_collections.
     * @example
     * // Create one Api_collections
     * const Api_collections = await prisma.api_collections.create({
     *   data: {
     *     // ... data to create a Api_collections
     *   }
     * })
     * 
     */
    create<T extends api_collectionsCreateArgs>(args: SelectSubset<T, api_collectionsCreateArgs<ExtArgs>>): Prisma__api_collectionsClient<$Result.GetResult<Prisma.$api_collectionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Api_collections.
     * @param {api_collectionsCreateManyArgs} args - Arguments to create many Api_collections.
     * @example
     * // Create many Api_collections
     * const api_collections = await prisma.api_collections.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends api_collectionsCreateManyArgs>(args?: SelectSubset<T, api_collectionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Api_collections.
     * @param {api_collectionsDeleteArgs} args - Arguments to delete one Api_collections.
     * @example
     * // Delete one Api_collections
     * const Api_collections = await prisma.api_collections.delete({
     *   where: {
     *     // ... filter to delete one Api_collections
     *   }
     * })
     * 
     */
    delete<T extends api_collectionsDeleteArgs>(args: SelectSubset<T, api_collectionsDeleteArgs<ExtArgs>>): Prisma__api_collectionsClient<$Result.GetResult<Prisma.$api_collectionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Api_collections.
     * @param {api_collectionsUpdateArgs} args - Arguments to update one Api_collections.
     * @example
     * // Update one Api_collections
     * const api_collections = await prisma.api_collections.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends api_collectionsUpdateArgs>(args: SelectSubset<T, api_collectionsUpdateArgs<ExtArgs>>): Prisma__api_collectionsClient<$Result.GetResult<Prisma.$api_collectionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Api_collections.
     * @param {api_collectionsDeleteManyArgs} args - Arguments to filter Api_collections to delete.
     * @example
     * // Delete a few Api_collections
     * const { count } = await prisma.api_collections.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends api_collectionsDeleteManyArgs>(args?: SelectSubset<T, api_collectionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Api_collections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {api_collectionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Api_collections
     * const api_collections = await prisma.api_collections.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends api_collectionsUpdateManyArgs>(args: SelectSubset<T, api_collectionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Api_collections.
     * @param {api_collectionsUpsertArgs} args - Arguments to update or create a Api_collections.
     * @example
     * // Update or create a Api_collections
     * const api_collections = await prisma.api_collections.upsert({
     *   create: {
     *     // ... data to create a Api_collections
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Api_collections we want to update
     *   }
     * })
     */
    upsert<T extends api_collectionsUpsertArgs>(args: SelectSubset<T, api_collectionsUpsertArgs<ExtArgs>>): Prisma__api_collectionsClient<$Result.GetResult<Prisma.$api_collectionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Api_collections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {api_collectionsCountArgs} args - Arguments to filter Api_collections to count.
     * @example
     * // Count the number of Api_collections
     * const count = await prisma.api_collections.count({
     *   where: {
     *     // ... the filter for the Api_collections we want to count
     *   }
     * })
    **/
    count<T extends api_collectionsCountArgs>(
      args?: Subset<T, api_collectionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Api_collectionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Api_collections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Api_collectionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Api_collectionsAggregateArgs>(args: Subset<T, Api_collectionsAggregateArgs>): Prisma.PrismaPromise<GetApi_collectionsAggregateType<T>>

    /**
     * Group by Api_collections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {api_collectionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends api_collectionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: api_collectionsGroupByArgs['orderBy'] }
        : { orderBy?: api_collectionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, api_collectionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetApi_collectionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the api_collections model
   */
  readonly fields: api_collectionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for api_collections.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__api_collectionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    api_tests<T extends api_collections$api_testsArgs<ExtArgs> = {}>(args?: Subset<T, api_collections$api_testsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$api_testsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    collection_runs<T extends api_collections$collection_runsArgs<ExtArgs> = {}>(args?: Subset<T, api_collections$collection_runsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$collection_runsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    test_schedule<T extends api_collections$test_scheduleArgs<ExtArgs> = {}>(args?: Subset<T, api_collections$test_scheduleArgs<ExtArgs>>): Prisma__test_schedulesClient<$Result.GetResult<Prisma.$test_schedulesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the api_collections model
   */ 
  interface api_collectionsFieldRefs {
    readonly id: FieldRef<"api_collections", 'String'>
    readonly name: FieldRef<"api_collections", 'String'>
    readonly description: FieldRef<"api_collections", 'String'>
    readonly user_id: FieldRef<"api_collections", 'String'>
  }
    

  // Custom InputTypes
  /**
   * api_collections findUnique
   */
  export type api_collectionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_collections
     */
    select?: api_collectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the api_collections
     */
    omit?: api_collectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: api_collectionsInclude<ExtArgs> | null
    /**
     * Filter, which api_collections to fetch.
     */
    where: api_collectionsWhereUniqueInput
  }

  /**
   * api_collections findUniqueOrThrow
   */
  export type api_collectionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_collections
     */
    select?: api_collectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the api_collections
     */
    omit?: api_collectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: api_collectionsInclude<ExtArgs> | null
    /**
     * Filter, which api_collections to fetch.
     */
    where: api_collectionsWhereUniqueInput
  }

  /**
   * api_collections findFirst
   */
  export type api_collectionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_collections
     */
    select?: api_collectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the api_collections
     */
    omit?: api_collectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: api_collectionsInclude<ExtArgs> | null
    /**
     * Filter, which api_collections to fetch.
     */
    where?: api_collectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of api_collections to fetch.
     */
    orderBy?: api_collectionsOrderByWithRelationInput | api_collectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for api_collections.
     */
    cursor?: api_collectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` api_collections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` api_collections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of api_collections.
     */
    distinct?: Api_collectionsScalarFieldEnum | Api_collectionsScalarFieldEnum[]
  }

  /**
   * api_collections findFirstOrThrow
   */
  export type api_collectionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_collections
     */
    select?: api_collectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the api_collections
     */
    omit?: api_collectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: api_collectionsInclude<ExtArgs> | null
    /**
     * Filter, which api_collections to fetch.
     */
    where?: api_collectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of api_collections to fetch.
     */
    orderBy?: api_collectionsOrderByWithRelationInput | api_collectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for api_collections.
     */
    cursor?: api_collectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` api_collections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` api_collections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of api_collections.
     */
    distinct?: Api_collectionsScalarFieldEnum | Api_collectionsScalarFieldEnum[]
  }

  /**
   * api_collections findMany
   */
  export type api_collectionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_collections
     */
    select?: api_collectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the api_collections
     */
    omit?: api_collectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: api_collectionsInclude<ExtArgs> | null
    /**
     * Filter, which api_collections to fetch.
     */
    where?: api_collectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of api_collections to fetch.
     */
    orderBy?: api_collectionsOrderByWithRelationInput | api_collectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing api_collections.
     */
    cursor?: api_collectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` api_collections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` api_collections.
     */
    skip?: number
    distinct?: Api_collectionsScalarFieldEnum | Api_collectionsScalarFieldEnum[]
  }

  /**
   * api_collections create
   */
  export type api_collectionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_collections
     */
    select?: api_collectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the api_collections
     */
    omit?: api_collectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: api_collectionsInclude<ExtArgs> | null
    /**
     * The data needed to create a api_collections.
     */
    data: XOR<api_collectionsCreateInput, api_collectionsUncheckedCreateInput>
  }

  /**
   * api_collections createMany
   */
  export type api_collectionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many api_collections.
     */
    data: api_collectionsCreateManyInput | api_collectionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * api_collections update
   */
  export type api_collectionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_collections
     */
    select?: api_collectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the api_collections
     */
    omit?: api_collectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: api_collectionsInclude<ExtArgs> | null
    /**
     * The data needed to update a api_collections.
     */
    data: XOR<api_collectionsUpdateInput, api_collectionsUncheckedUpdateInput>
    /**
     * Choose, which api_collections to update.
     */
    where: api_collectionsWhereUniqueInput
  }

  /**
   * api_collections updateMany
   */
  export type api_collectionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update api_collections.
     */
    data: XOR<api_collectionsUpdateManyMutationInput, api_collectionsUncheckedUpdateManyInput>
    /**
     * Filter which api_collections to update
     */
    where?: api_collectionsWhereInput
    /**
     * Limit how many api_collections to update.
     */
    limit?: number
  }

  /**
   * api_collections upsert
   */
  export type api_collectionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_collections
     */
    select?: api_collectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the api_collections
     */
    omit?: api_collectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: api_collectionsInclude<ExtArgs> | null
    /**
     * The filter to search for the api_collections to update in case it exists.
     */
    where: api_collectionsWhereUniqueInput
    /**
     * In case the api_collections found by the `where` argument doesn't exist, create a new api_collections with this data.
     */
    create: XOR<api_collectionsCreateInput, api_collectionsUncheckedCreateInput>
    /**
     * In case the api_collections was found with the provided `where` argument, update it with this data.
     */
    update: XOR<api_collectionsUpdateInput, api_collectionsUncheckedUpdateInput>
  }

  /**
   * api_collections delete
   */
  export type api_collectionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_collections
     */
    select?: api_collectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the api_collections
     */
    omit?: api_collectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: api_collectionsInclude<ExtArgs> | null
    /**
     * Filter which api_collections to delete.
     */
    where: api_collectionsWhereUniqueInput
  }

  /**
   * api_collections deleteMany
   */
  export type api_collectionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which api_collections to delete
     */
    where?: api_collectionsWhereInput
    /**
     * Limit how many api_collections to delete.
     */
    limit?: number
  }

  /**
   * api_collections.api_tests
   */
  export type api_collections$api_testsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_tests
     */
    select?: api_testsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the api_tests
     */
    omit?: api_testsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: api_testsInclude<ExtArgs> | null
    where?: api_testsWhereInput
    orderBy?: api_testsOrderByWithRelationInput | api_testsOrderByWithRelationInput[]
    cursor?: api_testsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Api_testsScalarFieldEnum | Api_testsScalarFieldEnum[]
  }

  /**
   * api_collections.collection_runs
   */
  export type api_collections$collection_runsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collection_runs
     */
    select?: collection_runsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the collection_runs
     */
    omit?: collection_runsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: collection_runsInclude<ExtArgs> | null
    where?: collection_runsWhereInput
    orderBy?: collection_runsOrderByWithRelationInput | collection_runsOrderByWithRelationInput[]
    cursor?: collection_runsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Collection_runsScalarFieldEnum | Collection_runsScalarFieldEnum[]
  }

  /**
   * api_collections.test_schedule
   */
  export type api_collections$test_scheduleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_schedules
     */
    select?: test_schedulesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_schedules
     */
    omit?: test_schedulesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: test_schedulesInclude<ExtArgs> | null
    where?: test_schedulesWhereInput
  }

  /**
   * api_collections without action
   */
  export type api_collectionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the api_collections
     */
    select?: api_collectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the api_collections
     */
    omit?: api_collectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: api_collectionsInclude<ExtArgs> | null
  }


  /**
   * Model collection_runs
   */

  export type AggregateCollection_runs = {
    _count: Collection_runsCountAggregateOutputType | null
    _avg: Collection_runsAvgAggregateOutputType | null
    _sum: Collection_runsSumAggregateOutputType | null
    _min: Collection_runsMinAggregateOutputType | null
    _max: Collection_runsMaxAggregateOutputType | null
  }

  export type Collection_runsAvgAggregateOutputType = {
    total_tests: number | null
    success_count: number | null
    failure_count: number | null
    total_duration: number | null
  }

  export type Collection_runsSumAggregateOutputType = {
    total_tests: number | null
    success_count: number | null
    failure_count: number | null
    total_duration: number | null
  }

  export type Collection_runsMinAggregateOutputType = {
    id: string | null
    collection_id: string | null
    status: string | null
    total_tests: number | null
    success_count: number | null
    failure_count: number | null
    total_duration: number | null
    user_id: string | null
    test_schedules_id: string | null
    created_at: Date | null
    completed_at: Date | null
  }

  export type Collection_runsMaxAggregateOutputType = {
    id: string | null
    collection_id: string | null
    status: string | null
    total_tests: number | null
    success_count: number | null
    failure_count: number | null
    total_duration: number | null
    user_id: string | null
    test_schedules_id: string | null
    created_at: Date | null
    completed_at: Date | null
  }

  export type Collection_runsCountAggregateOutputType = {
    id: number
    collection_id: number
    status: number
    total_tests: number
    success_count: number
    failure_count: number
    total_duration: number
    user_id: number
    test_schedules_id: number
    created_at: number
    completed_at: number
    _all: number
  }


  export type Collection_runsAvgAggregateInputType = {
    total_tests?: true
    success_count?: true
    failure_count?: true
    total_duration?: true
  }

  export type Collection_runsSumAggregateInputType = {
    total_tests?: true
    success_count?: true
    failure_count?: true
    total_duration?: true
  }

  export type Collection_runsMinAggregateInputType = {
    id?: true
    collection_id?: true
    status?: true
    total_tests?: true
    success_count?: true
    failure_count?: true
    total_duration?: true
    user_id?: true
    test_schedules_id?: true
    created_at?: true
    completed_at?: true
  }

  export type Collection_runsMaxAggregateInputType = {
    id?: true
    collection_id?: true
    status?: true
    total_tests?: true
    success_count?: true
    failure_count?: true
    total_duration?: true
    user_id?: true
    test_schedules_id?: true
    created_at?: true
    completed_at?: true
  }

  export type Collection_runsCountAggregateInputType = {
    id?: true
    collection_id?: true
    status?: true
    total_tests?: true
    success_count?: true
    failure_count?: true
    total_duration?: true
    user_id?: true
    test_schedules_id?: true
    created_at?: true
    completed_at?: true
    _all?: true
  }

  export type Collection_runsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which collection_runs to aggregate.
     */
    where?: collection_runsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collection_runs to fetch.
     */
    orderBy?: collection_runsOrderByWithRelationInput | collection_runsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: collection_runsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collection_runs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collection_runs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned collection_runs
    **/
    _count?: true | Collection_runsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Collection_runsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Collection_runsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Collection_runsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Collection_runsMaxAggregateInputType
  }

  export type GetCollection_runsAggregateType<T extends Collection_runsAggregateArgs> = {
        [P in keyof T & keyof AggregateCollection_runs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCollection_runs[P]>
      : GetScalarType<T[P], AggregateCollection_runs[P]>
  }




  export type collection_runsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: collection_runsWhereInput
    orderBy?: collection_runsOrderByWithAggregationInput | collection_runsOrderByWithAggregationInput[]
    by: Collection_runsScalarFieldEnum[] | Collection_runsScalarFieldEnum
    having?: collection_runsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Collection_runsCountAggregateInputType | true
    _avg?: Collection_runsAvgAggregateInputType
    _sum?: Collection_runsSumAggregateInputType
    _min?: Collection_runsMinAggregateInputType
    _max?: Collection_runsMaxAggregateInputType
  }

  export type Collection_runsGroupByOutputType = {
    id: string
    collection_id: string
    status: string
    total_tests: number
    success_count: number
    failure_count: number
    total_duration: number
    user_id: string
    test_schedules_id: string | null
    created_at: Date
    completed_at: Date
    _count: Collection_runsCountAggregateOutputType | null
    _avg: Collection_runsAvgAggregateOutputType | null
    _sum: Collection_runsSumAggregateOutputType | null
    _min: Collection_runsMinAggregateOutputType | null
    _max: Collection_runsMaxAggregateOutputType | null
  }

  type GetCollection_runsGroupByPayload<T extends collection_runsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Collection_runsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Collection_runsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Collection_runsGroupByOutputType[P]>
            : GetScalarType<T[P], Collection_runsGroupByOutputType[P]>
        }
      >
    >


  export type collection_runsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    collection_id?: boolean
    status?: boolean
    total_tests?: boolean
    success_count?: boolean
    failure_count?: boolean
    total_duration?: boolean
    user_id?: boolean
    test_schedules_id?: boolean
    created_at?: boolean
    completed_at?: boolean
    test_schedules?: boolean | collection_runs$test_schedulesArgs<ExtArgs>
    api_collection?: boolean | api_collectionsDefaultArgs<ExtArgs>
    test_results?: boolean | collection_runs$test_resultsArgs<ExtArgs>
    _count?: boolean | Collection_runsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["collection_runs"]>



  export type collection_runsSelectScalar = {
    id?: boolean
    collection_id?: boolean
    status?: boolean
    total_tests?: boolean
    success_count?: boolean
    failure_count?: boolean
    total_duration?: boolean
    user_id?: boolean
    test_schedules_id?: boolean
    created_at?: boolean
    completed_at?: boolean
  }

  export type collection_runsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "collection_id" | "status" | "total_tests" | "success_count" | "failure_count" | "total_duration" | "user_id" | "test_schedules_id" | "created_at" | "completed_at", ExtArgs["result"]["collection_runs"]>
  export type collection_runsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    test_schedules?: boolean | collection_runs$test_schedulesArgs<ExtArgs>
    api_collection?: boolean | api_collectionsDefaultArgs<ExtArgs>
    test_results?: boolean | collection_runs$test_resultsArgs<ExtArgs>
    _count?: boolean | Collection_runsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $collection_runsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "collection_runs"
    objects: {
      test_schedules: Prisma.$test_schedulesPayload<ExtArgs> | null
      api_collection: Prisma.$api_collectionsPayload<ExtArgs>
      test_results: Prisma.$test_resultsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      collection_id: string
      status: string
      total_tests: number
      success_count: number
      failure_count: number
      total_duration: number
      user_id: string
      test_schedules_id: string | null
      created_at: Date
      completed_at: Date
    }, ExtArgs["result"]["collection_runs"]>
    composites: {}
  }

  type collection_runsGetPayload<S extends boolean | null | undefined | collection_runsDefaultArgs> = $Result.GetResult<Prisma.$collection_runsPayload, S>

  type collection_runsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<collection_runsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Collection_runsCountAggregateInputType | true
    }

  export interface collection_runsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['collection_runs'], meta: { name: 'collection_runs' } }
    /**
     * Find zero or one Collection_runs that matches the filter.
     * @param {collection_runsFindUniqueArgs} args - Arguments to find a Collection_runs
     * @example
     * // Get one Collection_runs
     * const collection_runs = await prisma.collection_runs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends collection_runsFindUniqueArgs>(args: SelectSubset<T, collection_runsFindUniqueArgs<ExtArgs>>): Prisma__collection_runsClient<$Result.GetResult<Prisma.$collection_runsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Collection_runs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {collection_runsFindUniqueOrThrowArgs} args - Arguments to find a Collection_runs
     * @example
     * // Get one Collection_runs
     * const collection_runs = await prisma.collection_runs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends collection_runsFindUniqueOrThrowArgs>(args: SelectSubset<T, collection_runsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__collection_runsClient<$Result.GetResult<Prisma.$collection_runsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Collection_runs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collection_runsFindFirstArgs} args - Arguments to find a Collection_runs
     * @example
     * // Get one Collection_runs
     * const collection_runs = await prisma.collection_runs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends collection_runsFindFirstArgs>(args?: SelectSubset<T, collection_runsFindFirstArgs<ExtArgs>>): Prisma__collection_runsClient<$Result.GetResult<Prisma.$collection_runsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Collection_runs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collection_runsFindFirstOrThrowArgs} args - Arguments to find a Collection_runs
     * @example
     * // Get one Collection_runs
     * const collection_runs = await prisma.collection_runs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends collection_runsFindFirstOrThrowArgs>(args?: SelectSubset<T, collection_runsFindFirstOrThrowArgs<ExtArgs>>): Prisma__collection_runsClient<$Result.GetResult<Prisma.$collection_runsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Collection_runs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collection_runsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Collection_runs
     * const collection_runs = await prisma.collection_runs.findMany()
     * 
     * // Get first 10 Collection_runs
     * const collection_runs = await prisma.collection_runs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const collection_runsWithIdOnly = await prisma.collection_runs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends collection_runsFindManyArgs>(args?: SelectSubset<T, collection_runsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$collection_runsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Collection_runs.
     * @param {collection_runsCreateArgs} args - Arguments to create a Collection_runs.
     * @example
     * // Create one Collection_runs
     * const Collection_runs = await prisma.collection_runs.create({
     *   data: {
     *     // ... data to create a Collection_runs
     *   }
     * })
     * 
     */
    create<T extends collection_runsCreateArgs>(args: SelectSubset<T, collection_runsCreateArgs<ExtArgs>>): Prisma__collection_runsClient<$Result.GetResult<Prisma.$collection_runsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Collection_runs.
     * @param {collection_runsCreateManyArgs} args - Arguments to create many Collection_runs.
     * @example
     * // Create many Collection_runs
     * const collection_runs = await prisma.collection_runs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends collection_runsCreateManyArgs>(args?: SelectSubset<T, collection_runsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Collection_runs.
     * @param {collection_runsDeleteArgs} args - Arguments to delete one Collection_runs.
     * @example
     * // Delete one Collection_runs
     * const Collection_runs = await prisma.collection_runs.delete({
     *   where: {
     *     // ... filter to delete one Collection_runs
     *   }
     * })
     * 
     */
    delete<T extends collection_runsDeleteArgs>(args: SelectSubset<T, collection_runsDeleteArgs<ExtArgs>>): Prisma__collection_runsClient<$Result.GetResult<Prisma.$collection_runsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Collection_runs.
     * @param {collection_runsUpdateArgs} args - Arguments to update one Collection_runs.
     * @example
     * // Update one Collection_runs
     * const collection_runs = await prisma.collection_runs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends collection_runsUpdateArgs>(args: SelectSubset<T, collection_runsUpdateArgs<ExtArgs>>): Prisma__collection_runsClient<$Result.GetResult<Prisma.$collection_runsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Collection_runs.
     * @param {collection_runsDeleteManyArgs} args - Arguments to filter Collection_runs to delete.
     * @example
     * // Delete a few Collection_runs
     * const { count } = await prisma.collection_runs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends collection_runsDeleteManyArgs>(args?: SelectSubset<T, collection_runsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Collection_runs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collection_runsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Collection_runs
     * const collection_runs = await prisma.collection_runs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends collection_runsUpdateManyArgs>(args: SelectSubset<T, collection_runsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Collection_runs.
     * @param {collection_runsUpsertArgs} args - Arguments to update or create a Collection_runs.
     * @example
     * // Update or create a Collection_runs
     * const collection_runs = await prisma.collection_runs.upsert({
     *   create: {
     *     // ... data to create a Collection_runs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Collection_runs we want to update
     *   }
     * })
     */
    upsert<T extends collection_runsUpsertArgs>(args: SelectSubset<T, collection_runsUpsertArgs<ExtArgs>>): Prisma__collection_runsClient<$Result.GetResult<Prisma.$collection_runsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Collection_runs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collection_runsCountArgs} args - Arguments to filter Collection_runs to count.
     * @example
     * // Count the number of Collection_runs
     * const count = await prisma.collection_runs.count({
     *   where: {
     *     // ... the filter for the Collection_runs we want to count
     *   }
     * })
    **/
    count<T extends collection_runsCountArgs>(
      args?: Subset<T, collection_runsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Collection_runsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Collection_runs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Collection_runsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Collection_runsAggregateArgs>(args: Subset<T, Collection_runsAggregateArgs>): Prisma.PrismaPromise<GetCollection_runsAggregateType<T>>

    /**
     * Group by Collection_runs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {collection_runsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends collection_runsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: collection_runsGroupByArgs['orderBy'] }
        : { orderBy?: collection_runsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, collection_runsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCollection_runsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the collection_runs model
   */
  readonly fields: collection_runsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for collection_runs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__collection_runsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    test_schedules<T extends collection_runs$test_schedulesArgs<ExtArgs> = {}>(args?: Subset<T, collection_runs$test_schedulesArgs<ExtArgs>>): Prisma__test_schedulesClient<$Result.GetResult<Prisma.$test_schedulesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    api_collection<T extends api_collectionsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, api_collectionsDefaultArgs<ExtArgs>>): Prisma__api_collectionsClient<$Result.GetResult<Prisma.$api_collectionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    test_results<T extends collection_runs$test_resultsArgs<ExtArgs> = {}>(args?: Subset<T, collection_runs$test_resultsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$test_resultsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the collection_runs model
   */ 
  interface collection_runsFieldRefs {
    readonly id: FieldRef<"collection_runs", 'String'>
    readonly collection_id: FieldRef<"collection_runs", 'String'>
    readonly status: FieldRef<"collection_runs", 'String'>
    readonly total_tests: FieldRef<"collection_runs", 'Int'>
    readonly success_count: FieldRef<"collection_runs", 'Int'>
    readonly failure_count: FieldRef<"collection_runs", 'Int'>
    readonly total_duration: FieldRef<"collection_runs", 'Int'>
    readonly user_id: FieldRef<"collection_runs", 'String'>
    readonly test_schedules_id: FieldRef<"collection_runs", 'String'>
    readonly created_at: FieldRef<"collection_runs", 'DateTime'>
    readonly completed_at: FieldRef<"collection_runs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * collection_runs findUnique
   */
  export type collection_runsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collection_runs
     */
    select?: collection_runsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the collection_runs
     */
    omit?: collection_runsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: collection_runsInclude<ExtArgs> | null
    /**
     * Filter, which collection_runs to fetch.
     */
    where: collection_runsWhereUniqueInput
  }

  /**
   * collection_runs findUniqueOrThrow
   */
  export type collection_runsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collection_runs
     */
    select?: collection_runsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the collection_runs
     */
    omit?: collection_runsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: collection_runsInclude<ExtArgs> | null
    /**
     * Filter, which collection_runs to fetch.
     */
    where: collection_runsWhereUniqueInput
  }

  /**
   * collection_runs findFirst
   */
  export type collection_runsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collection_runs
     */
    select?: collection_runsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the collection_runs
     */
    omit?: collection_runsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: collection_runsInclude<ExtArgs> | null
    /**
     * Filter, which collection_runs to fetch.
     */
    where?: collection_runsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collection_runs to fetch.
     */
    orderBy?: collection_runsOrderByWithRelationInput | collection_runsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for collection_runs.
     */
    cursor?: collection_runsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collection_runs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collection_runs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of collection_runs.
     */
    distinct?: Collection_runsScalarFieldEnum | Collection_runsScalarFieldEnum[]
  }

  /**
   * collection_runs findFirstOrThrow
   */
  export type collection_runsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collection_runs
     */
    select?: collection_runsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the collection_runs
     */
    omit?: collection_runsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: collection_runsInclude<ExtArgs> | null
    /**
     * Filter, which collection_runs to fetch.
     */
    where?: collection_runsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collection_runs to fetch.
     */
    orderBy?: collection_runsOrderByWithRelationInput | collection_runsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for collection_runs.
     */
    cursor?: collection_runsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collection_runs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collection_runs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of collection_runs.
     */
    distinct?: Collection_runsScalarFieldEnum | Collection_runsScalarFieldEnum[]
  }

  /**
   * collection_runs findMany
   */
  export type collection_runsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collection_runs
     */
    select?: collection_runsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the collection_runs
     */
    omit?: collection_runsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: collection_runsInclude<ExtArgs> | null
    /**
     * Filter, which collection_runs to fetch.
     */
    where?: collection_runsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of collection_runs to fetch.
     */
    orderBy?: collection_runsOrderByWithRelationInput | collection_runsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing collection_runs.
     */
    cursor?: collection_runsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` collection_runs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` collection_runs.
     */
    skip?: number
    distinct?: Collection_runsScalarFieldEnum | Collection_runsScalarFieldEnum[]
  }

  /**
   * collection_runs create
   */
  export type collection_runsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collection_runs
     */
    select?: collection_runsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the collection_runs
     */
    omit?: collection_runsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: collection_runsInclude<ExtArgs> | null
    /**
     * The data needed to create a collection_runs.
     */
    data: XOR<collection_runsCreateInput, collection_runsUncheckedCreateInput>
  }

  /**
   * collection_runs createMany
   */
  export type collection_runsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many collection_runs.
     */
    data: collection_runsCreateManyInput | collection_runsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * collection_runs update
   */
  export type collection_runsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collection_runs
     */
    select?: collection_runsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the collection_runs
     */
    omit?: collection_runsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: collection_runsInclude<ExtArgs> | null
    /**
     * The data needed to update a collection_runs.
     */
    data: XOR<collection_runsUpdateInput, collection_runsUncheckedUpdateInput>
    /**
     * Choose, which collection_runs to update.
     */
    where: collection_runsWhereUniqueInput
  }

  /**
   * collection_runs updateMany
   */
  export type collection_runsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update collection_runs.
     */
    data: XOR<collection_runsUpdateManyMutationInput, collection_runsUncheckedUpdateManyInput>
    /**
     * Filter which collection_runs to update
     */
    where?: collection_runsWhereInput
    /**
     * Limit how many collection_runs to update.
     */
    limit?: number
  }

  /**
   * collection_runs upsert
   */
  export type collection_runsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collection_runs
     */
    select?: collection_runsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the collection_runs
     */
    omit?: collection_runsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: collection_runsInclude<ExtArgs> | null
    /**
     * The filter to search for the collection_runs to update in case it exists.
     */
    where: collection_runsWhereUniqueInput
    /**
     * In case the collection_runs found by the `where` argument doesn't exist, create a new collection_runs with this data.
     */
    create: XOR<collection_runsCreateInput, collection_runsUncheckedCreateInput>
    /**
     * In case the collection_runs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<collection_runsUpdateInput, collection_runsUncheckedUpdateInput>
  }

  /**
   * collection_runs delete
   */
  export type collection_runsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collection_runs
     */
    select?: collection_runsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the collection_runs
     */
    omit?: collection_runsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: collection_runsInclude<ExtArgs> | null
    /**
     * Filter which collection_runs to delete.
     */
    where: collection_runsWhereUniqueInput
  }

  /**
   * collection_runs deleteMany
   */
  export type collection_runsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which collection_runs to delete
     */
    where?: collection_runsWhereInput
    /**
     * Limit how many collection_runs to delete.
     */
    limit?: number
  }

  /**
   * collection_runs.test_schedules
   */
  export type collection_runs$test_schedulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_schedules
     */
    select?: test_schedulesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_schedules
     */
    omit?: test_schedulesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: test_schedulesInclude<ExtArgs> | null
    where?: test_schedulesWhereInput
  }

  /**
   * collection_runs.test_results
   */
  export type collection_runs$test_resultsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_results
     */
    select?: test_resultsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_results
     */
    omit?: test_resultsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: test_resultsInclude<ExtArgs> | null
    where?: test_resultsWhereInput
    orderBy?: test_resultsOrderByWithRelationInput | test_resultsOrderByWithRelationInput[]
    cursor?: test_resultsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Test_resultsScalarFieldEnum | Test_resultsScalarFieldEnum[]
  }

  /**
   * collection_runs without action
   */
  export type collection_runsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the collection_runs
     */
    select?: collection_runsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the collection_runs
     */
    omit?: collection_runsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: collection_runsInclude<ExtArgs> | null
  }


  /**
   * Model test_results
   */

  export type AggregateTest_results = {
    _count: Test_resultsCountAggregateOutputType | null
    _avg: Test_resultsAvgAggregateOutputType | null
    _sum: Test_resultsSumAggregateOutputType | null
    _min: Test_resultsMinAggregateOutputType | null
    _max: Test_resultsMaxAggregateOutputType | null
  }

  export type Test_resultsAvgAggregateOutputType = {
    status_code: number | null
    duration: number | null
  }

  export type Test_resultsSumAggregateOutputType = {
    status_code: number | null
    duration: number | null
  }

  export type Test_resultsMinAggregateOutputType = {
    id: string | null
    test_id: string | null
    collection_run_id: string | null
    status_code: number | null
    duration: number | null
    error: string | null
    response: string | null
    created_at: Date | null
  }

  export type Test_resultsMaxAggregateOutputType = {
    id: string | null
    test_id: string | null
    collection_run_id: string | null
    status_code: number | null
    duration: number | null
    error: string | null
    response: string | null
    created_at: Date | null
  }

  export type Test_resultsCountAggregateOutputType = {
    id: number
    test_id: number
    collection_run_id: number
    status_code: number
    duration: number
    error: number
    response: number
    created_at: number
    _all: number
  }


  export type Test_resultsAvgAggregateInputType = {
    status_code?: true
    duration?: true
  }

  export type Test_resultsSumAggregateInputType = {
    status_code?: true
    duration?: true
  }

  export type Test_resultsMinAggregateInputType = {
    id?: true
    test_id?: true
    collection_run_id?: true
    status_code?: true
    duration?: true
    error?: true
    response?: true
    created_at?: true
  }

  export type Test_resultsMaxAggregateInputType = {
    id?: true
    test_id?: true
    collection_run_id?: true
    status_code?: true
    duration?: true
    error?: true
    response?: true
    created_at?: true
  }

  export type Test_resultsCountAggregateInputType = {
    id?: true
    test_id?: true
    collection_run_id?: true
    status_code?: true
    duration?: true
    error?: true
    response?: true
    created_at?: true
    _all?: true
  }

  export type Test_resultsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which test_results to aggregate.
     */
    where?: test_resultsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of test_results to fetch.
     */
    orderBy?: test_resultsOrderByWithRelationInput | test_resultsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: test_resultsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` test_results from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` test_results.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned test_results
    **/
    _count?: true | Test_resultsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Test_resultsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Test_resultsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Test_resultsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Test_resultsMaxAggregateInputType
  }

  export type GetTest_resultsAggregateType<T extends Test_resultsAggregateArgs> = {
        [P in keyof T & keyof AggregateTest_results]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTest_results[P]>
      : GetScalarType<T[P], AggregateTest_results[P]>
  }




  export type test_resultsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: test_resultsWhereInput
    orderBy?: test_resultsOrderByWithAggregationInput | test_resultsOrderByWithAggregationInput[]
    by: Test_resultsScalarFieldEnum[] | Test_resultsScalarFieldEnum
    having?: test_resultsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Test_resultsCountAggregateInputType | true
    _avg?: Test_resultsAvgAggregateInputType
    _sum?: Test_resultsSumAggregateInputType
    _min?: Test_resultsMinAggregateInputType
    _max?: Test_resultsMaxAggregateInputType
  }

  export type Test_resultsGroupByOutputType = {
    id: string
    test_id: string
    collection_run_id: string
    status_code: number
    duration: number
    error: string | null
    response: string | null
    created_at: Date
    _count: Test_resultsCountAggregateOutputType | null
    _avg: Test_resultsAvgAggregateOutputType | null
    _sum: Test_resultsSumAggregateOutputType | null
    _min: Test_resultsMinAggregateOutputType | null
    _max: Test_resultsMaxAggregateOutputType | null
  }

  type GetTest_resultsGroupByPayload<T extends test_resultsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Test_resultsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Test_resultsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Test_resultsGroupByOutputType[P]>
            : GetScalarType<T[P], Test_resultsGroupByOutputType[P]>
        }
      >
    >


  export type test_resultsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    test_id?: boolean
    collection_run_id?: boolean
    status_code?: boolean
    duration?: boolean
    error?: boolean
    response?: boolean
    created_at?: boolean
    api_test?: boolean | api_testsDefaultArgs<ExtArgs>
    collection_run?: boolean | collection_runsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["test_results"]>



  export type test_resultsSelectScalar = {
    id?: boolean
    test_id?: boolean
    collection_run_id?: boolean
    status_code?: boolean
    duration?: boolean
    error?: boolean
    response?: boolean
    created_at?: boolean
  }

  export type test_resultsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "test_id" | "collection_run_id" | "status_code" | "duration" | "error" | "response" | "created_at", ExtArgs["result"]["test_results"]>
  export type test_resultsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    api_test?: boolean | api_testsDefaultArgs<ExtArgs>
    collection_run?: boolean | collection_runsDefaultArgs<ExtArgs>
  }

  export type $test_resultsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "test_results"
    objects: {
      api_test: Prisma.$api_testsPayload<ExtArgs>
      collection_run: Prisma.$collection_runsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      test_id: string
      collection_run_id: string
      status_code: number
      duration: number
      error: string | null
      response: string | null
      created_at: Date
    }, ExtArgs["result"]["test_results"]>
    composites: {}
  }

  type test_resultsGetPayload<S extends boolean | null | undefined | test_resultsDefaultArgs> = $Result.GetResult<Prisma.$test_resultsPayload, S>

  type test_resultsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<test_resultsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Test_resultsCountAggregateInputType | true
    }

  export interface test_resultsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['test_results'], meta: { name: 'test_results' } }
    /**
     * Find zero or one Test_results that matches the filter.
     * @param {test_resultsFindUniqueArgs} args - Arguments to find a Test_results
     * @example
     * // Get one Test_results
     * const test_results = await prisma.test_results.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends test_resultsFindUniqueArgs>(args: SelectSubset<T, test_resultsFindUniqueArgs<ExtArgs>>): Prisma__test_resultsClient<$Result.GetResult<Prisma.$test_resultsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Test_results that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {test_resultsFindUniqueOrThrowArgs} args - Arguments to find a Test_results
     * @example
     * // Get one Test_results
     * const test_results = await prisma.test_results.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends test_resultsFindUniqueOrThrowArgs>(args: SelectSubset<T, test_resultsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__test_resultsClient<$Result.GetResult<Prisma.$test_resultsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Test_results that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {test_resultsFindFirstArgs} args - Arguments to find a Test_results
     * @example
     * // Get one Test_results
     * const test_results = await prisma.test_results.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends test_resultsFindFirstArgs>(args?: SelectSubset<T, test_resultsFindFirstArgs<ExtArgs>>): Prisma__test_resultsClient<$Result.GetResult<Prisma.$test_resultsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Test_results that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {test_resultsFindFirstOrThrowArgs} args - Arguments to find a Test_results
     * @example
     * // Get one Test_results
     * const test_results = await prisma.test_results.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends test_resultsFindFirstOrThrowArgs>(args?: SelectSubset<T, test_resultsFindFirstOrThrowArgs<ExtArgs>>): Prisma__test_resultsClient<$Result.GetResult<Prisma.$test_resultsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Test_results that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {test_resultsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Test_results
     * const test_results = await prisma.test_results.findMany()
     * 
     * // Get first 10 Test_results
     * const test_results = await prisma.test_results.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const test_resultsWithIdOnly = await prisma.test_results.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends test_resultsFindManyArgs>(args?: SelectSubset<T, test_resultsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$test_resultsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Test_results.
     * @param {test_resultsCreateArgs} args - Arguments to create a Test_results.
     * @example
     * // Create one Test_results
     * const Test_results = await prisma.test_results.create({
     *   data: {
     *     // ... data to create a Test_results
     *   }
     * })
     * 
     */
    create<T extends test_resultsCreateArgs>(args: SelectSubset<T, test_resultsCreateArgs<ExtArgs>>): Prisma__test_resultsClient<$Result.GetResult<Prisma.$test_resultsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Test_results.
     * @param {test_resultsCreateManyArgs} args - Arguments to create many Test_results.
     * @example
     * // Create many Test_results
     * const test_results = await prisma.test_results.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends test_resultsCreateManyArgs>(args?: SelectSubset<T, test_resultsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Test_results.
     * @param {test_resultsDeleteArgs} args - Arguments to delete one Test_results.
     * @example
     * // Delete one Test_results
     * const Test_results = await prisma.test_results.delete({
     *   where: {
     *     // ... filter to delete one Test_results
     *   }
     * })
     * 
     */
    delete<T extends test_resultsDeleteArgs>(args: SelectSubset<T, test_resultsDeleteArgs<ExtArgs>>): Prisma__test_resultsClient<$Result.GetResult<Prisma.$test_resultsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Test_results.
     * @param {test_resultsUpdateArgs} args - Arguments to update one Test_results.
     * @example
     * // Update one Test_results
     * const test_results = await prisma.test_results.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends test_resultsUpdateArgs>(args: SelectSubset<T, test_resultsUpdateArgs<ExtArgs>>): Prisma__test_resultsClient<$Result.GetResult<Prisma.$test_resultsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Test_results.
     * @param {test_resultsDeleteManyArgs} args - Arguments to filter Test_results to delete.
     * @example
     * // Delete a few Test_results
     * const { count } = await prisma.test_results.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends test_resultsDeleteManyArgs>(args?: SelectSubset<T, test_resultsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Test_results.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {test_resultsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Test_results
     * const test_results = await prisma.test_results.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends test_resultsUpdateManyArgs>(args: SelectSubset<T, test_resultsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Test_results.
     * @param {test_resultsUpsertArgs} args - Arguments to update or create a Test_results.
     * @example
     * // Update or create a Test_results
     * const test_results = await prisma.test_results.upsert({
     *   create: {
     *     // ... data to create a Test_results
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Test_results we want to update
     *   }
     * })
     */
    upsert<T extends test_resultsUpsertArgs>(args: SelectSubset<T, test_resultsUpsertArgs<ExtArgs>>): Prisma__test_resultsClient<$Result.GetResult<Prisma.$test_resultsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Test_results.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {test_resultsCountArgs} args - Arguments to filter Test_results to count.
     * @example
     * // Count the number of Test_results
     * const count = await prisma.test_results.count({
     *   where: {
     *     // ... the filter for the Test_results we want to count
     *   }
     * })
    **/
    count<T extends test_resultsCountArgs>(
      args?: Subset<T, test_resultsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Test_resultsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Test_results.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Test_resultsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Test_resultsAggregateArgs>(args: Subset<T, Test_resultsAggregateArgs>): Prisma.PrismaPromise<GetTest_resultsAggregateType<T>>

    /**
     * Group by Test_results.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {test_resultsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends test_resultsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: test_resultsGroupByArgs['orderBy'] }
        : { orderBy?: test_resultsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, test_resultsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTest_resultsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the test_results model
   */
  readonly fields: test_resultsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for test_results.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__test_resultsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    api_test<T extends api_testsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, api_testsDefaultArgs<ExtArgs>>): Prisma__api_testsClient<$Result.GetResult<Prisma.$api_testsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    collection_run<T extends collection_runsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, collection_runsDefaultArgs<ExtArgs>>): Prisma__collection_runsClient<$Result.GetResult<Prisma.$collection_runsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the test_results model
   */ 
  interface test_resultsFieldRefs {
    readonly id: FieldRef<"test_results", 'String'>
    readonly test_id: FieldRef<"test_results", 'String'>
    readonly collection_run_id: FieldRef<"test_results", 'String'>
    readonly status_code: FieldRef<"test_results", 'Int'>
    readonly duration: FieldRef<"test_results", 'Int'>
    readonly error: FieldRef<"test_results", 'String'>
    readonly response: FieldRef<"test_results", 'String'>
    readonly created_at: FieldRef<"test_results", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * test_results findUnique
   */
  export type test_resultsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_results
     */
    select?: test_resultsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_results
     */
    omit?: test_resultsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: test_resultsInclude<ExtArgs> | null
    /**
     * Filter, which test_results to fetch.
     */
    where: test_resultsWhereUniqueInput
  }

  /**
   * test_results findUniqueOrThrow
   */
  export type test_resultsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_results
     */
    select?: test_resultsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_results
     */
    omit?: test_resultsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: test_resultsInclude<ExtArgs> | null
    /**
     * Filter, which test_results to fetch.
     */
    where: test_resultsWhereUniqueInput
  }

  /**
   * test_results findFirst
   */
  export type test_resultsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_results
     */
    select?: test_resultsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_results
     */
    omit?: test_resultsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: test_resultsInclude<ExtArgs> | null
    /**
     * Filter, which test_results to fetch.
     */
    where?: test_resultsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of test_results to fetch.
     */
    orderBy?: test_resultsOrderByWithRelationInput | test_resultsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for test_results.
     */
    cursor?: test_resultsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` test_results from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` test_results.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of test_results.
     */
    distinct?: Test_resultsScalarFieldEnum | Test_resultsScalarFieldEnum[]
  }

  /**
   * test_results findFirstOrThrow
   */
  export type test_resultsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_results
     */
    select?: test_resultsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_results
     */
    omit?: test_resultsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: test_resultsInclude<ExtArgs> | null
    /**
     * Filter, which test_results to fetch.
     */
    where?: test_resultsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of test_results to fetch.
     */
    orderBy?: test_resultsOrderByWithRelationInput | test_resultsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for test_results.
     */
    cursor?: test_resultsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` test_results from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` test_results.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of test_results.
     */
    distinct?: Test_resultsScalarFieldEnum | Test_resultsScalarFieldEnum[]
  }

  /**
   * test_results findMany
   */
  export type test_resultsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_results
     */
    select?: test_resultsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_results
     */
    omit?: test_resultsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: test_resultsInclude<ExtArgs> | null
    /**
     * Filter, which test_results to fetch.
     */
    where?: test_resultsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of test_results to fetch.
     */
    orderBy?: test_resultsOrderByWithRelationInput | test_resultsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing test_results.
     */
    cursor?: test_resultsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` test_results from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` test_results.
     */
    skip?: number
    distinct?: Test_resultsScalarFieldEnum | Test_resultsScalarFieldEnum[]
  }

  /**
   * test_results create
   */
  export type test_resultsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_results
     */
    select?: test_resultsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_results
     */
    omit?: test_resultsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: test_resultsInclude<ExtArgs> | null
    /**
     * The data needed to create a test_results.
     */
    data: XOR<test_resultsCreateInput, test_resultsUncheckedCreateInput>
  }

  /**
   * test_results createMany
   */
  export type test_resultsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many test_results.
     */
    data: test_resultsCreateManyInput | test_resultsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * test_results update
   */
  export type test_resultsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_results
     */
    select?: test_resultsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_results
     */
    omit?: test_resultsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: test_resultsInclude<ExtArgs> | null
    /**
     * The data needed to update a test_results.
     */
    data: XOR<test_resultsUpdateInput, test_resultsUncheckedUpdateInput>
    /**
     * Choose, which test_results to update.
     */
    where: test_resultsWhereUniqueInput
  }

  /**
   * test_results updateMany
   */
  export type test_resultsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update test_results.
     */
    data: XOR<test_resultsUpdateManyMutationInput, test_resultsUncheckedUpdateManyInput>
    /**
     * Filter which test_results to update
     */
    where?: test_resultsWhereInput
    /**
     * Limit how many test_results to update.
     */
    limit?: number
  }

  /**
   * test_results upsert
   */
  export type test_resultsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_results
     */
    select?: test_resultsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_results
     */
    omit?: test_resultsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: test_resultsInclude<ExtArgs> | null
    /**
     * The filter to search for the test_results to update in case it exists.
     */
    where: test_resultsWhereUniqueInput
    /**
     * In case the test_results found by the `where` argument doesn't exist, create a new test_results with this data.
     */
    create: XOR<test_resultsCreateInput, test_resultsUncheckedCreateInput>
    /**
     * In case the test_results was found with the provided `where` argument, update it with this data.
     */
    update: XOR<test_resultsUpdateInput, test_resultsUncheckedUpdateInput>
  }

  /**
   * test_results delete
   */
  export type test_resultsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_results
     */
    select?: test_resultsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_results
     */
    omit?: test_resultsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: test_resultsInclude<ExtArgs> | null
    /**
     * Filter which test_results to delete.
     */
    where: test_resultsWhereUniqueInput
  }

  /**
   * test_results deleteMany
   */
  export type test_resultsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which test_results to delete
     */
    where?: test_resultsWhereInput
    /**
     * Limit how many test_results to delete.
     */
    limit?: number
  }

  /**
   * test_results without action
   */
  export type test_resultsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the test_results
     */
    select?: test_resultsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the test_results
     */
    omit?: test_resultsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: test_resultsInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    username: 'username',
    password: 'password',
    token: 'token'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const Test_schedulesScalarFieldEnum: {
    id: 'id',
    name: 'name',
    collection_id: 'collection_id',
    active: 'active',
    frequency: 'frequency',
    selected_days: 'selected_days',
    timer_type: 'timer_type',
    minute_interval: 'minute_interval',
    hour_interval: 'hour_interval',
    day_time: 'day_time',
    week_day: 'week_day',
    week_time: 'week_time',
    send_email: 'send_email',
    recipient_email: 'recipient_email',
    user_id: 'user_id',
    created_at: 'created_at'
  };

  export type Test_schedulesScalarFieldEnum = (typeof Test_schedulesScalarFieldEnum)[keyof typeof Test_schedulesScalarFieldEnum]


  export const Api_testsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    method: 'method',
    url: 'url',
    headers: 'headers',
    body: 'body',
    response: 'response',
    status_code: 'status_code',
    user_id: 'user_id',
    collection_id: 'collection_id'
  };

  export type Api_testsScalarFieldEnum = (typeof Api_testsScalarFieldEnum)[keyof typeof Api_testsScalarFieldEnum]


  export const Api_collectionsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    user_id: 'user_id'
  };

  export type Api_collectionsScalarFieldEnum = (typeof Api_collectionsScalarFieldEnum)[keyof typeof Api_collectionsScalarFieldEnum]


  export const Collection_runsScalarFieldEnum: {
    id: 'id',
    collection_id: 'collection_id',
    status: 'status',
    total_tests: 'total_tests',
    success_count: 'success_count',
    failure_count: 'failure_count',
    total_duration: 'total_duration',
    user_id: 'user_id',
    test_schedules_id: 'test_schedules_id',
    created_at: 'created_at',
    completed_at: 'completed_at'
  };

  export type Collection_runsScalarFieldEnum = (typeof Collection_runsScalarFieldEnum)[keyof typeof Collection_runsScalarFieldEnum]


  export const Test_resultsScalarFieldEnum: {
    id: 'id',
    test_id: 'test_id',
    collection_run_id: 'collection_run_id',
    status_code: 'status_code',
    duration: 'duration',
    error: 'error',
    response: 'response',
    created_at: 'created_at'
  };

  export type Test_resultsScalarFieldEnum = (typeof Test_resultsScalarFieldEnum)[keyof typeof Test_resultsScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const UserOrderByRelevanceFieldEnum: {
    id: 'id',
    username: 'username',
    password: 'password',
    token: 'token'
  };

  export type UserOrderByRelevanceFieldEnum = (typeof UserOrderByRelevanceFieldEnum)[keyof typeof UserOrderByRelevanceFieldEnum]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const test_schedulesOrderByRelevanceFieldEnum: {
    id: 'id',
    name: 'name',
    collection_id: 'collection_id',
    frequency: 'frequency',
    timer_type: 'timer_type',
    day_time: 'day_time',
    week_time: 'week_time',
    recipient_email: 'recipient_email',
    user_id: 'user_id'
  };

  export type test_schedulesOrderByRelevanceFieldEnum = (typeof test_schedulesOrderByRelevanceFieldEnum)[keyof typeof test_schedulesOrderByRelevanceFieldEnum]


  export const api_testsOrderByRelevanceFieldEnum: {
    id: 'id',
    name: 'name',
    method: 'method',
    url: 'url',
    body: 'body',
    user_id: 'user_id',
    collection_id: 'collection_id'
  };

  export type api_testsOrderByRelevanceFieldEnum = (typeof api_testsOrderByRelevanceFieldEnum)[keyof typeof api_testsOrderByRelevanceFieldEnum]


  export const api_collectionsOrderByRelevanceFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    user_id: 'user_id'
  };

  export type api_collectionsOrderByRelevanceFieldEnum = (typeof api_collectionsOrderByRelevanceFieldEnum)[keyof typeof api_collectionsOrderByRelevanceFieldEnum]


  export const collection_runsOrderByRelevanceFieldEnum: {
    id: 'id',
    collection_id: 'collection_id',
    status: 'status',
    user_id: 'user_id',
    test_schedules_id: 'test_schedules_id'
  };

  export type collection_runsOrderByRelevanceFieldEnum = (typeof collection_runsOrderByRelevanceFieldEnum)[keyof typeof collection_runsOrderByRelevanceFieldEnum]


  export const test_resultsOrderByRelevanceFieldEnum: {
    id: 'id',
    test_id: 'test_id',
    collection_run_id: 'collection_run_id',
    error: 'error',
    response: 'response'
  };

  export type test_resultsOrderByRelevanceFieldEnum = (typeof test_resultsOrderByRelevanceFieldEnum)[keyof typeof test_resultsOrderByRelevanceFieldEnum]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    username?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    token?: StringNullableFilter<"User"> | string | null
    test_schedules?: Test_schedulesListRelationFilter
    api_tests?: Api_testsListRelationFilter
    api_collections?: Api_collectionsListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    token?: SortOrderInput | SortOrder
    test_schedules?: test_schedulesOrderByRelationAggregateInput
    api_tests?: api_testsOrderByRelationAggregateInput
    api_collections?: api_collectionsOrderByRelationAggregateInput
    _relevance?: UserOrderByRelevanceInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    username?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    password?: StringFilter<"User"> | string
    token?: StringNullableFilter<"User"> | string | null
    test_schedules?: Test_schedulesListRelationFilter
    api_tests?: Api_testsListRelationFilter
    api_collections?: Api_collectionsListRelationFilter
  }, "id" | "username">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    token?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    username?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    token?: StringNullableWithAggregatesFilter<"User"> | string | null
  }

  export type test_schedulesWhereInput = {
    AND?: test_schedulesWhereInput | test_schedulesWhereInput[]
    OR?: test_schedulesWhereInput[]
    NOT?: test_schedulesWhereInput | test_schedulesWhereInput[]
    id?: StringFilter<"test_schedules"> | string
    name?: StringFilter<"test_schedules"> | string
    collection_id?: StringNullableFilter<"test_schedules"> | string | null
    active?: BoolFilter<"test_schedules"> | boolean
    frequency?: StringFilter<"test_schedules"> | string
    selected_days?: JsonFilter<"test_schedules">
    timer_type?: StringFilter<"test_schedules"> | string
    minute_interval?: IntFilter<"test_schedules"> | number
    hour_interval?: IntNullableFilter<"test_schedules"> | number | null
    day_time?: StringNullableFilter<"test_schedules"> | string | null
    week_day?: IntNullableFilter<"test_schedules"> | number | null
    week_time?: StringNullableFilter<"test_schedules"> | string | null
    send_email?: BoolFilter<"test_schedules"> | boolean
    recipient_email?: StringFilter<"test_schedules"> | string
    user_id?: StringFilter<"test_schedules"> | string
    created_at?: DateTimeFilter<"test_schedules"> | Date | string
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    collection_runs?: Collection_runsListRelationFilter
    api_collection?: XOR<Api_collectionsNullableScalarRelationFilter, api_collectionsWhereInput> | null
  }

  export type test_schedulesOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    collection_id?: SortOrderInput | SortOrder
    active?: SortOrder
    frequency?: SortOrder
    selected_days?: SortOrder
    timer_type?: SortOrder
    minute_interval?: SortOrder
    hour_interval?: SortOrderInput | SortOrder
    day_time?: SortOrderInput | SortOrder
    week_day?: SortOrderInput | SortOrder
    week_time?: SortOrderInput | SortOrder
    send_email?: SortOrder
    recipient_email?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    User?: UserOrderByWithRelationInput
    collection_runs?: collection_runsOrderByRelationAggregateInput
    api_collection?: api_collectionsOrderByWithRelationInput
    _relevance?: test_schedulesOrderByRelevanceInput
  }

  export type test_schedulesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    collection_id?: string
    AND?: test_schedulesWhereInput | test_schedulesWhereInput[]
    OR?: test_schedulesWhereInput[]
    NOT?: test_schedulesWhereInput | test_schedulesWhereInput[]
    name?: StringFilter<"test_schedules"> | string
    active?: BoolFilter<"test_schedules"> | boolean
    frequency?: StringFilter<"test_schedules"> | string
    selected_days?: JsonFilter<"test_schedules">
    timer_type?: StringFilter<"test_schedules"> | string
    minute_interval?: IntFilter<"test_schedules"> | number
    hour_interval?: IntNullableFilter<"test_schedules"> | number | null
    day_time?: StringNullableFilter<"test_schedules"> | string | null
    week_day?: IntNullableFilter<"test_schedules"> | number | null
    week_time?: StringNullableFilter<"test_schedules"> | string | null
    send_email?: BoolFilter<"test_schedules"> | boolean
    recipient_email?: StringFilter<"test_schedules"> | string
    user_id?: StringFilter<"test_schedules"> | string
    created_at?: DateTimeFilter<"test_schedules"> | Date | string
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    collection_runs?: Collection_runsListRelationFilter
    api_collection?: XOR<Api_collectionsNullableScalarRelationFilter, api_collectionsWhereInput> | null
  }, "id" | "collection_id">

  export type test_schedulesOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    collection_id?: SortOrderInput | SortOrder
    active?: SortOrder
    frequency?: SortOrder
    selected_days?: SortOrder
    timer_type?: SortOrder
    minute_interval?: SortOrder
    hour_interval?: SortOrderInput | SortOrder
    day_time?: SortOrderInput | SortOrder
    week_day?: SortOrderInput | SortOrder
    week_time?: SortOrderInput | SortOrder
    send_email?: SortOrder
    recipient_email?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    _count?: test_schedulesCountOrderByAggregateInput
    _avg?: test_schedulesAvgOrderByAggregateInput
    _max?: test_schedulesMaxOrderByAggregateInput
    _min?: test_schedulesMinOrderByAggregateInput
    _sum?: test_schedulesSumOrderByAggregateInput
  }

  export type test_schedulesScalarWhereWithAggregatesInput = {
    AND?: test_schedulesScalarWhereWithAggregatesInput | test_schedulesScalarWhereWithAggregatesInput[]
    OR?: test_schedulesScalarWhereWithAggregatesInput[]
    NOT?: test_schedulesScalarWhereWithAggregatesInput | test_schedulesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"test_schedules"> | string
    name?: StringWithAggregatesFilter<"test_schedules"> | string
    collection_id?: StringNullableWithAggregatesFilter<"test_schedules"> | string | null
    active?: BoolWithAggregatesFilter<"test_schedules"> | boolean
    frequency?: StringWithAggregatesFilter<"test_schedules"> | string
    selected_days?: JsonWithAggregatesFilter<"test_schedules">
    timer_type?: StringWithAggregatesFilter<"test_schedules"> | string
    minute_interval?: IntWithAggregatesFilter<"test_schedules"> | number
    hour_interval?: IntNullableWithAggregatesFilter<"test_schedules"> | number | null
    day_time?: StringNullableWithAggregatesFilter<"test_schedules"> | string | null
    week_day?: IntNullableWithAggregatesFilter<"test_schedules"> | number | null
    week_time?: StringNullableWithAggregatesFilter<"test_schedules"> | string | null
    send_email?: BoolWithAggregatesFilter<"test_schedules"> | boolean
    recipient_email?: StringWithAggregatesFilter<"test_schedules"> | string
    user_id?: StringWithAggregatesFilter<"test_schedules"> | string
    created_at?: DateTimeWithAggregatesFilter<"test_schedules"> | Date | string
  }

  export type api_testsWhereInput = {
    AND?: api_testsWhereInput | api_testsWhereInput[]
    OR?: api_testsWhereInput[]
    NOT?: api_testsWhereInput | api_testsWhereInput[]
    id?: StringFilter<"api_tests"> | string
    name?: StringFilter<"api_tests"> | string
    method?: StringFilter<"api_tests"> | string
    url?: StringFilter<"api_tests"> | string
    headers?: JsonFilter<"api_tests">
    body?: StringNullableFilter<"api_tests"> | string | null
    response?: JsonFilter<"api_tests">
    status_code?: IntFilter<"api_tests"> | number
    user_id?: StringFilter<"api_tests"> | string
    collection_id?: StringNullableFilter<"api_tests"> | string | null
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    api_collection?: XOR<Api_collectionsNullableScalarRelationFilter, api_collectionsWhereInput> | null
    test_results?: Test_resultsListRelationFilter
  }

  export type api_testsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    method?: SortOrder
    url?: SortOrder
    headers?: SortOrder
    body?: SortOrderInput | SortOrder
    response?: SortOrder
    status_code?: SortOrder
    user_id?: SortOrder
    collection_id?: SortOrderInput | SortOrder
    User?: UserOrderByWithRelationInput
    api_collection?: api_collectionsOrderByWithRelationInput
    test_results?: test_resultsOrderByRelationAggregateInput
    _relevance?: api_testsOrderByRelevanceInput
  }

  export type api_testsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: api_testsWhereInput | api_testsWhereInput[]
    OR?: api_testsWhereInput[]
    NOT?: api_testsWhereInput | api_testsWhereInput[]
    name?: StringFilter<"api_tests"> | string
    method?: StringFilter<"api_tests"> | string
    url?: StringFilter<"api_tests"> | string
    headers?: JsonFilter<"api_tests">
    body?: StringNullableFilter<"api_tests"> | string | null
    response?: JsonFilter<"api_tests">
    status_code?: IntFilter<"api_tests"> | number
    user_id?: StringFilter<"api_tests"> | string
    collection_id?: StringNullableFilter<"api_tests"> | string | null
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    api_collection?: XOR<Api_collectionsNullableScalarRelationFilter, api_collectionsWhereInput> | null
    test_results?: Test_resultsListRelationFilter
  }, "id">

  export type api_testsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    method?: SortOrder
    url?: SortOrder
    headers?: SortOrder
    body?: SortOrderInput | SortOrder
    response?: SortOrder
    status_code?: SortOrder
    user_id?: SortOrder
    collection_id?: SortOrderInput | SortOrder
    _count?: api_testsCountOrderByAggregateInput
    _avg?: api_testsAvgOrderByAggregateInput
    _max?: api_testsMaxOrderByAggregateInput
    _min?: api_testsMinOrderByAggregateInput
    _sum?: api_testsSumOrderByAggregateInput
  }

  export type api_testsScalarWhereWithAggregatesInput = {
    AND?: api_testsScalarWhereWithAggregatesInput | api_testsScalarWhereWithAggregatesInput[]
    OR?: api_testsScalarWhereWithAggregatesInput[]
    NOT?: api_testsScalarWhereWithAggregatesInput | api_testsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"api_tests"> | string
    name?: StringWithAggregatesFilter<"api_tests"> | string
    method?: StringWithAggregatesFilter<"api_tests"> | string
    url?: StringWithAggregatesFilter<"api_tests"> | string
    headers?: JsonWithAggregatesFilter<"api_tests">
    body?: StringNullableWithAggregatesFilter<"api_tests"> | string | null
    response?: JsonWithAggregatesFilter<"api_tests">
    status_code?: IntWithAggregatesFilter<"api_tests"> | number
    user_id?: StringWithAggregatesFilter<"api_tests"> | string
    collection_id?: StringNullableWithAggregatesFilter<"api_tests"> | string | null
  }

  export type api_collectionsWhereInput = {
    AND?: api_collectionsWhereInput | api_collectionsWhereInput[]
    OR?: api_collectionsWhereInput[]
    NOT?: api_collectionsWhereInput | api_collectionsWhereInput[]
    id?: StringFilter<"api_collections"> | string
    name?: StringFilter<"api_collections"> | string
    description?: StringFilter<"api_collections"> | string
    user_id?: StringFilter<"api_collections"> | string
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    api_tests?: Api_testsListRelationFilter
    collection_runs?: Collection_runsListRelationFilter
    test_schedule?: XOR<Test_schedulesNullableScalarRelationFilter, test_schedulesWhereInput> | null
  }

  export type api_collectionsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    user_id?: SortOrder
    User?: UserOrderByWithRelationInput
    api_tests?: api_testsOrderByRelationAggregateInput
    collection_runs?: collection_runsOrderByRelationAggregateInput
    test_schedule?: test_schedulesOrderByWithRelationInput
    _relevance?: api_collectionsOrderByRelevanceInput
  }

  export type api_collectionsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: api_collectionsWhereInput | api_collectionsWhereInput[]
    OR?: api_collectionsWhereInput[]
    NOT?: api_collectionsWhereInput | api_collectionsWhereInput[]
    name?: StringFilter<"api_collections"> | string
    description?: StringFilter<"api_collections"> | string
    user_id?: StringFilter<"api_collections"> | string
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    api_tests?: Api_testsListRelationFilter
    collection_runs?: Collection_runsListRelationFilter
    test_schedule?: XOR<Test_schedulesNullableScalarRelationFilter, test_schedulesWhereInput> | null
  }, "id">

  export type api_collectionsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    user_id?: SortOrder
    _count?: api_collectionsCountOrderByAggregateInput
    _max?: api_collectionsMaxOrderByAggregateInput
    _min?: api_collectionsMinOrderByAggregateInput
  }

  export type api_collectionsScalarWhereWithAggregatesInput = {
    AND?: api_collectionsScalarWhereWithAggregatesInput | api_collectionsScalarWhereWithAggregatesInput[]
    OR?: api_collectionsScalarWhereWithAggregatesInput[]
    NOT?: api_collectionsScalarWhereWithAggregatesInput | api_collectionsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"api_collections"> | string
    name?: StringWithAggregatesFilter<"api_collections"> | string
    description?: StringWithAggregatesFilter<"api_collections"> | string
    user_id?: StringWithAggregatesFilter<"api_collections"> | string
  }

  export type collection_runsWhereInput = {
    AND?: collection_runsWhereInput | collection_runsWhereInput[]
    OR?: collection_runsWhereInput[]
    NOT?: collection_runsWhereInput | collection_runsWhereInput[]
    id?: StringFilter<"collection_runs"> | string
    collection_id?: StringFilter<"collection_runs"> | string
    status?: StringFilter<"collection_runs"> | string
    total_tests?: IntFilter<"collection_runs"> | number
    success_count?: IntFilter<"collection_runs"> | number
    failure_count?: IntFilter<"collection_runs"> | number
    total_duration?: IntFilter<"collection_runs"> | number
    user_id?: StringFilter<"collection_runs"> | string
    test_schedules_id?: StringNullableFilter<"collection_runs"> | string | null
    created_at?: DateTimeFilter<"collection_runs"> | Date | string
    completed_at?: DateTimeFilter<"collection_runs"> | Date | string
    test_schedules?: XOR<Test_schedulesNullableScalarRelationFilter, test_schedulesWhereInput> | null
    api_collection?: XOR<Api_collectionsScalarRelationFilter, api_collectionsWhereInput>
    test_results?: Test_resultsListRelationFilter
  }

  export type collection_runsOrderByWithRelationInput = {
    id?: SortOrder
    collection_id?: SortOrder
    status?: SortOrder
    total_tests?: SortOrder
    success_count?: SortOrder
    failure_count?: SortOrder
    total_duration?: SortOrder
    user_id?: SortOrder
    test_schedules_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    completed_at?: SortOrder
    test_schedules?: test_schedulesOrderByWithRelationInput
    api_collection?: api_collectionsOrderByWithRelationInput
    test_results?: test_resultsOrderByRelationAggregateInput
    _relevance?: collection_runsOrderByRelevanceInput
  }

  export type collection_runsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: collection_runsWhereInput | collection_runsWhereInput[]
    OR?: collection_runsWhereInput[]
    NOT?: collection_runsWhereInput | collection_runsWhereInput[]
    collection_id?: StringFilter<"collection_runs"> | string
    status?: StringFilter<"collection_runs"> | string
    total_tests?: IntFilter<"collection_runs"> | number
    success_count?: IntFilter<"collection_runs"> | number
    failure_count?: IntFilter<"collection_runs"> | number
    total_duration?: IntFilter<"collection_runs"> | number
    user_id?: StringFilter<"collection_runs"> | string
    test_schedules_id?: StringNullableFilter<"collection_runs"> | string | null
    created_at?: DateTimeFilter<"collection_runs"> | Date | string
    completed_at?: DateTimeFilter<"collection_runs"> | Date | string
    test_schedules?: XOR<Test_schedulesNullableScalarRelationFilter, test_schedulesWhereInput> | null
    api_collection?: XOR<Api_collectionsScalarRelationFilter, api_collectionsWhereInput>
    test_results?: Test_resultsListRelationFilter
  }, "id">

  export type collection_runsOrderByWithAggregationInput = {
    id?: SortOrder
    collection_id?: SortOrder
    status?: SortOrder
    total_tests?: SortOrder
    success_count?: SortOrder
    failure_count?: SortOrder
    total_duration?: SortOrder
    user_id?: SortOrder
    test_schedules_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    completed_at?: SortOrder
    _count?: collection_runsCountOrderByAggregateInput
    _avg?: collection_runsAvgOrderByAggregateInput
    _max?: collection_runsMaxOrderByAggregateInput
    _min?: collection_runsMinOrderByAggregateInput
    _sum?: collection_runsSumOrderByAggregateInput
  }

  export type collection_runsScalarWhereWithAggregatesInput = {
    AND?: collection_runsScalarWhereWithAggregatesInput | collection_runsScalarWhereWithAggregatesInput[]
    OR?: collection_runsScalarWhereWithAggregatesInput[]
    NOT?: collection_runsScalarWhereWithAggregatesInput | collection_runsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"collection_runs"> | string
    collection_id?: StringWithAggregatesFilter<"collection_runs"> | string
    status?: StringWithAggregatesFilter<"collection_runs"> | string
    total_tests?: IntWithAggregatesFilter<"collection_runs"> | number
    success_count?: IntWithAggregatesFilter<"collection_runs"> | number
    failure_count?: IntWithAggregatesFilter<"collection_runs"> | number
    total_duration?: IntWithAggregatesFilter<"collection_runs"> | number
    user_id?: StringWithAggregatesFilter<"collection_runs"> | string
    test_schedules_id?: StringNullableWithAggregatesFilter<"collection_runs"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"collection_runs"> | Date | string
    completed_at?: DateTimeWithAggregatesFilter<"collection_runs"> | Date | string
  }

  export type test_resultsWhereInput = {
    AND?: test_resultsWhereInput | test_resultsWhereInput[]
    OR?: test_resultsWhereInput[]
    NOT?: test_resultsWhereInput | test_resultsWhereInput[]
    id?: StringFilter<"test_results"> | string
    test_id?: StringFilter<"test_results"> | string
    collection_run_id?: StringFilter<"test_results"> | string
    status_code?: IntFilter<"test_results"> | number
    duration?: IntFilter<"test_results"> | number
    error?: StringNullableFilter<"test_results"> | string | null
    response?: StringNullableFilter<"test_results"> | string | null
    created_at?: DateTimeFilter<"test_results"> | Date | string
    api_test?: XOR<Api_testsScalarRelationFilter, api_testsWhereInput>
    collection_run?: XOR<Collection_runsScalarRelationFilter, collection_runsWhereInput>
  }

  export type test_resultsOrderByWithRelationInput = {
    id?: SortOrder
    test_id?: SortOrder
    collection_run_id?: SortOrder
    status_code?: SortOrder
    duration?: SortOrder
    error?: SortOrderInput | SortOrder
    response?: SortOrderInput | SortOrder
    created_at?: SortOrder
    api_test?: api_testsOrderByWithRelationInput
    collection_run?: collection_runsOrderByWithRelationInput
    _relevance?: test_resultsOrderByRelevanceInput
  }

  export type test_resultsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: test_resultsWhereInput | test_resultsWhereInput[]
    OR?: test_resultsWhereInput[]
    NOT?: test_resultsWhereInput | test_resultsWhereInput[]
    test_id?: StringFilter<"test_results"> | string
    collection_run_id?: StringFilter<"test_results"> | string
    status_code?: IntFilter<"test_results"> | number
    duration?: IntFilter<"test_results"> | number
    error?: StringNullableFilter<"test_results"> | string | null
    response?: StringNullableFilter<"test_results"> | string | null
    created_at?: DateTimeFilter<"test_results"> | Date | string
    api_test?: XOR<Api_testsScalarRelationFilter, api_testsWhereInput>
    collection_run?: XOR<Collection_runsScalarRelationFilter, collection_runsWhereInput>
  }, "id">

  export type test_resultsOrderByWithAggregationInput = {
    id?: SortOrder
    test_id?: SortOrder
    collection_run_id?: SortOrder
    status_code?: SortOrder
    duration?: SortOrder
    error?: SortOrderInput | SortOrder
    response?: SortOrderInput | SortOrder
    created_at?: SortOrder
    _count?: test_resultsCountOrderByAggregateInput
    _avg?: test_resultsAvgOrderByAggregateInput
    _max?: test_resultsMaxOrderByAggregateInput
    _min?: test_resultsMinOrderByAggregateInput
    _sum?: test_resultsSumOrderByAggregateInput
  }

  export type test_resultsScalarWhereWithAggregatesInput = {
    AND?: test_resultsScalarWhereWithAggregatesInput | test_resultsScalarWhereWithAggregatesInput[]
    OR?: test_resultsScalarWhereWithAggregatesInput[]
    NOT?: test_resultsScalarWhereWithAggregatesInput | test_resultsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"test_results"> | string
    test_id?: StringWithAggregatesFilter<"test_results"> | string
    collection_run_id?: StringWithAggregatesFilter<"test_results"> | string
    status_code?: IntWithAggregatesFilter<"test_results"> | number
    duration?: IntWithAggregatesFilter<"test_results"> | number
    error?: StringNullableWithAggregatesFilter<"test_results"> | string | null
    response?: StringNullableWithAggregatesFilter<"test_results"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"test_results"> | Date | string
  }

  export type UserCreateInput = {
    id?: string
    username: string
    password: string
    token?: string | null
    test_schedules?: test_schedulesCreateNestedManyWithoutUserInput
    api_tests?: api_testsCreateNestedManyWithoutUserInput
    api_collections?: api_collectionsCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    username: string
    password: string
    token?: string | null
    test_schedules?: test_schedulesUncheckedCreateNestedManyWithoutUserInput
    api_tests?: api_testsUncheckedCreateNestedManyWithoutUserInput
    api_collections?: api_collectionsUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    token?: NullableStringFieldUpdateOperationsInput | string | null
    test_schedules?: test_schedulesUpdateManyWithoutUserNestedInput
    api_tests?: api_testsUpdateManyWithoutUserNestedInput
    api_collections?: api_collectionsUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    token?: NullableStringFieldUpdateOperationsInput | string | null
    test_schedules?: test_schedulesUncheckedUpdateManyWithoutUserNestedInput
    api_tests?: api_testsUncheckedUpdateManyWithoutUserNestedInput
    api_collections?: api_collectionsUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    username: string
    password: string
    token?: string | null
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    token?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    token?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type test_schedulesCreateInput = {
    id?: string
    name: string
    active?: boolean
    frequency: string
    selected_days: JsonNullValueInput | InputJsonValue
    timer_type: string
    minute_interval: number
    hour_interval?: number | null
    day_time?: string | null
    week_day?: number | null
    week_time?: string | null
    send_email: boolean
    recipient_email: string
    created_at?: Date | string
    User: UserCreateNestedOneWithoutTest_schedulesInput
    collection_runs?: collection_runsCreateNestedManyWithoutTest_schedulesInput
    api_collection?: api_collectionsCreateNestedOneWithoutTest_scheduleInput
  }

  export type test_schedulesUncheckedCreateInput = {
    id?: string
    name: string
    collection_id?: string | null
    active?: boolean
    frequency: string
    selected_days: JsonNullValueInput | InputJsonValue
    timer_type: string
    minute_interval: number
    hour_interval?: number | null
    day_time?: string | null
    week_day?: number | null
    week_time?: string | null
    send_email: boolean
    recipient_email: string
    user_id: string
    created_at?: Date | string
    collection_runs?: collection_runsUncheckedCreateNestedManyWithoutTest_schedulesInput
  }

  export type test_schedulesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    frequency?: StringFieldUpdateOperationsInput | string
    selected_days?: JsonNullValueInput | InputJsonValue
    timer_type?: StringFieldUpdateOperationsInput | string
    minute_interval?: IntFieldUpdateOperationsInput | number
    hour_interval?: NullableIntFieldUpdateOperationsInput | number | null
    day_time?: NullableStringFieldUpdateOperationsInput | string | null
    week_day?: NullableIntFieldUpdateOperationsInput | number | null
    week_time?: NullableStringFieldUpdateOperationsInput | string | null
    send_email?: BoolFieldUpdateOperationsInput | boolean
    recipient_email?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    User?: UserUpdateOneRequiredWithoutTest_schedulesNestedInput
    collection_runs?: collection_runsUpdateManyWithoutTest_schedulesNestedInput
    api_collection?: api_collectionsUpdateOneWithoutTest_scheduleNestedInput
  }

  export type test_schedulesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    collection_id?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    frequency?: StringFieldUpdateOperationsInput | string
    selected_days?: JsonNullValueInput | InputJsonValue
    timer_type?: StringFieldUpdateOperationsInput | string
    minute_interval?: IntFieldUpdateOperationsInput | number
    hour_interval?: NullableIntFieldUpdateOperationsInput | number | null
    day_time?: NullableStringFieldUpdateOperationsInput | string | null
    week_day?: NullableIntFieldUpdateOperationsInput | number | null
    week_time?: NullableStringFieldUpdateOperationsInput | string | null
    send_email?: BoolFieldUpdateOperationsInput | boolean
    recipient_email?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    collection_runs?: collection_runsUncheckedUpdateManyWithoutTest_schedulesNestedInput
  }

  export type test_schedulesCreateManyInput = {
    id?: string
    name: string
    collection_id?: string | null
    active?: boolean
    frequency: string
    selected_days: JsonNullValueInput | InputJsonValue
    timer_type: string
    minute_interval: number
    hour_interval?: number | null
    day_time?: string | null
    week_day?: number | null
    week_time?: string | null
    send_email: boolean
    recipient_email: string
    user_id: string
    created_at?: Date | string
  }

  export type test_schedulesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    frequency?: StringFieldUpdateOperationsInput | string
    selected_days?: JsonNullValueInput | InputJsonValue
    timer_type?: StringFieldUpdateOperationsInput | string
    minute_interval?: IntFieldUpdateOperationsInput | number
    hour_interval?: NullableIntFieldUpdateOperationsInput | number | null
    day_time?: NullableStringFieldUpdateOperationsInput | string | null
    week_day?: NullableIntFieldUpdateOperationsInput | number | null
    week_time?: NullableStringFieldUpdateOperationsInput | string | null
    send_email?: BoolFieldUpdateOperationsInput | boolean
    recipient_email?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type test_schedulesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    collection_id?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    frequency?: StringFieldUpdateOperationsInput | string
    selected_days?: JsonNullValueInput | InputJsonValue
    timer_type?: StringFieldUpdateOperationsInput | string
    minute_interval?: IntFieldUpdateOperationsInput | number
    hour_interval?: NullableIntFieldUpdateOperationsInput | number | null
    day_time?: NullableStringFieldUpdateOperationsInput | string | null
    week_day?: NullableIntFieldUpdateOperationsInput | number | null
    week_time?: NullableStringFieldUpdateOperationsInput | string | null
    send_email?: BoolFieldUpdateOperationsInput | boolean
    recipient_email?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type api_testsCreateInput = {
    id?: string
    name: string
    method: string
    url: string
    headers: JsonNullValueInput | InputJsonValue
    body?: string | null
    response: JsonNullValueInput | InputJsonValue
    status_code: number
    User: UserCreateNestedOneWithoutApi_testsInput
    api_collection?: api_collectionsCreateNestedOneWithoutApi_testsInput
    test_results?: test_resultsCreateNestedManyWithoutApi_testInput
  }

  export type api_testsUncheckedCreateInput = {
    id?: string
    name: string
    method: string
    url: string
    headers: JsonNullValueInput | InputJsonValue
    body?: string | null
    response: JsonNullValueInput | InputJsonValue
    status_code: number
    user_id: string
    collection_id?: string | null
    test_results?: test_resultsUncheckedCreateNestedManyWithoutApi_testInput
  }

  export type api_testsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    method?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    headers?: JsonNullValueInput | InputJsonValue
    body?: NullableStringFieldUpdateOperationsInput | string | null
    response?: JsonNullValueInput | InputJsonValue
    status_code?: IntFieldUpdateOperationsInput | number
    User?: UserUpdateOneRequiredWithoutApi_testsNestedInput
    api_collection?: api_collectionsUpdateOneWithoutApi_testsNestedInput
    test_results?: test_resultsUpdateManyWithoutApi_testNestedInput
  }

  export type api_testsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    method?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    headers?: JsonNullValueInput | InputJsonValue
    body?: NullableStringFieldUpdateOperationsInput | string | null
    response?: JsonNullValueInput | InputJsonValue
    status_code?: IntFieldUpdateOperationsInput | number
    user_id?: StringFieldUpdateOperationsInput | string
    collection_id?: NullableStringFieldUpdateOperationsInput | string | null
    test_results?: test_resultsUncheckedUpdateManyWithoutApi_testNestedInput
  }

  export type api_testsCreateManyInput = {
    id?: string
    name: string
    method: string
    url: string
    headers: JsonNullValueInput | InputJsonValue
    body?: string | null
    response: JsonNullValueInput | InputJsonValue
    status_code: number
    user_id: string
    collection_id?: string | null
  }

  export type api_testsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    method?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    headers?: JsonNullValueInput | InputJsonValue
    body?: NullableStringFieldUpdateOperationsInput | string | null
    response?: JsonNullValueInput | InputJsonValue
    status_code?: IntFieldUpdateOperationsInput | number
  }

  export type api_testsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    method?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    headers?: JsonNullValueInput | InputJsonValue
    body?: NullableStringFieldUpdateOperationsInput | string | null
    response?: JsonNullValueInput | InputJsonValue
    status_code?: IntFieldUpdateOperationsInput | number
    user_id?: StringFieldUpdateOperationsInput | string
    collection_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type api_collectionsCreateInput = {
    id?: string
    name: string
    description: string
    User: UserCreateNestedOneWithoutApi_collectionsInput
    api_tests?: api_testsCreateNestedManyWithoutApi_collectionInput
    collection_runs?: collection_runsCreateNestedManyWithoutApi_collectionInput
    test_schedule?: test_schedulesCreateNestedOneWithoutApi_collectionInput
  }

  export type api_collectionsUncheckedCreateInput = {
    id?: string
    name: string
    description: string
    user_id: string
    api_tests?: api_testsUncheckedCreateNestedManyWithoutApi_collectionInput
    collection_runs?: collection_runsUncheckedCreateNestedManyWithoutApi_collectionInput
    test_schedule?: test_schedulesUncheckedCreateNestedOneWithoutApi_collectionInput
  }

  export type api_collectionsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    User?: UserUpdateOneRequiredWithoutApi_collectionsNestedInput
    api_tests?: api_testsUpdateManyWithoutApi_collectionNestedInput
    collection_runs?: collection_runsUpdateManyWithoutApi_collectionNestedInput
    test_schedule?: test_schedulesUpdateOneWithoutApi_collectionNestedInput
  }

  export type api_collectionsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    api_tests?: api_testsUncheckedUpdateManyWithoutApi_collectionNestedInput
    collection_runs?: collection_runsUncheckedUpdateManyWithoutApi_collectionNestedInput
    test_schedule?: test_schedulesUncheckedUpdateOneWithoutApi_collectionNestedInput
  }

  export type api_collectionsCreateManyInput = {
    id?: string
    name: string
    description: string
    user_id: string
  }

  export type api_collectionsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
  }

  export type api_collectionsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
  }

  export type collection_runsCreateInput = {
    id?: string
    status: string
    total_tests: number
    success_count: number
    failure_count: number
    total_duration: number
    user_id: string
    created_at?: Date | string
    completed_at?: Date | string
    test_schedules?: test_schedulesCreateNestedOneWithoutCollection_runsInput
    api_collection: api_collectionsCreateNestedOneWithoutCollection_runsInput
    test_results?: test_resultsCreateNestedManyWithoutCollection_runInput
  }

  export type collection_runsUncheckedCreateInput = {
    id?: string
    collection_id: string
    status: string
    total_tests: number
    success_count: number
    failure_count: number
    total_duration: number
    user_id: string
    test_schedules_id?: string | null
    created_at?: Date | string
    completed_at?: Date | string
    test_results?: test_resultsUncheckedCreateNestedManyWithoutCollection_runInput
  }

  export type collection_runsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    total_tests?: IntFieldUpdateOperationsInput | number
    success_count?: IntFieldUpdateOperationsInput | number
    failure_count?: IntFieldUpdateOperationsInput | number
    total_duration?: IntFieldUpdateOperationsInput | number
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    completed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    test_schedules?: test_schedulesUpdateOneWithoutCollection_runsNestedInput
    api_collection?: api_collectionsUpdateOneRequiredWithoutCollection_runsNestedInput
    test_results?: test_resultsUpdateManyWithoutCollection_runNestedInput
  }

  export type collection_runsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    collection_id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    total_tests?: IntFieldUpdateOperationsInput | number
    success_count?: IntFieldUpdateOperationsInput | number
    failure_count?: IntFieldUpdateOperationsInput | number
    total_duration?: IntFieldUpdateOperationsInput | number
    user_id?: StringFieldUpdateOperationsInput | string
    test_schedules_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    completed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    test_results?: test_resultsUncheckedUpdateManyWithoutCollection_runNestedInput
  }

  export type collection_runsCreateManyInput = {
    id?: string
    collection_id: string
    status: string
    total_tests: number
    success_count: number
    failure_count: number
    total_duration: number
    user_id: string
    test_schedules_id?: string | null
    created_at?: Date | string
    completed_at?: Date | string
  }

  export type collection_runsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    total_tests?: IntFieldUpdateOperationsInput | number
    success_count?: IntFieldUpdateOperationsInput | number
    failure_count?: IntFieldUpdateOperationsInput | number
    total_duration?: IntFieldUpdateOperationsInput | number
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    completed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type collection_runsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    collection_id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    total_tests?: IntFieldUpdateOperationsInput | number
    success_count?: IntFieldUpdateOperationsInput | number
    failure_count?: IntFieldUpdateOperationsInput | number
    total_duration?: IntFieldUpdateOperationsInput | number
    user_id?: StringFieldUpdateOperationsInput | string
    test_schedules_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    completed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type test_resultsCreateInput = {
    id?: string
    status_code: number
    duration: number
    error?: string | null
    response?: string | null
    created_at?: Date | string
    api_test: api_testsCreateNestedOneWithoutTest_resultsInput
    collection_run: collection_runsCreateNestedOneWithoutTest_resultsInput
  }

  export type test_resultsUncheckedCreateInput = {
    id?: string
    test_id: string
    collection_run_id: string
    status_code: number
    duration: number
    error?: string | null
    response?: string | null
    created_at?: Date | string
  }

  export type test_resultsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status_code?: IntFieldUpdateOperationsInput | number
    duration?: IntFieldUpdateOperationsInput | number
    error?: NullableStringFieldUpdateOperationsInput | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    api_test?: api_testsUpdateOneRequiredWithoutTest_resultsNestedInput
    collection_run?: collection_runsUpdateOneRequiredWithoutTest_resultsNestedInput
  }

  export type test_resultsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    test_id?: StringFieldUpdateOperationsInput | string
    collection_run_id?: StringFieldUpdateOperationsInput | string
    status_code?: IntFieldUpdateOperationsInput | number
    duration?: IntFieldUpdateOperationsInput | number
    error?: NullableStringFieldUpdateOperationsInput | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type test_resultsCreateManyInput = {
    id?: string
    test_id: string
    collection_run_id: string
    status_code: number
    duration: number
    error?: string | null
    response?: string | null
    created_at?: Date | string
  }

  export type test_resultsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status_code?: IntFieldUpdateOperationsInput | number
    duration?: IntFieldUpdateOperationsInput | number
    error?: NullableStringFieldUpdateOperationsInput | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type test_resultsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    test_id?: StringFieldUpdateOperationsInput | string
    collection_run_id?: StringFieldUpdateOperationsInput | string
    status_code?: IntFieldUpdateOperationsInput | number
    duration?: IntFieldUpdateOperationsInput | number
    error?: NullableStringFieldUpdateOperationsInput | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type Test_schedulesListRelationFilter = {
    every?: test_schedulesWhereInput
    some?: test_schedulesWhereInput
    none?: test_schedulesWhereInput
  }

  export type Api_testsListRelationFilter = {
    every?: api_testsWhereInput
    some?: api_testsWhereInput
    none?: api_testsWhereInput
  }

  export type Api_collectionsListRelationFilter = {
    every?: api_collectionsWhereInput
    some?: api_collectionsWhereInput
    none?: api_collectionsWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type test_schedulesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type api_testsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type api_collectionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelevanceInput = {
    fields: UserOrderByRelevanceFieldEnum | UserOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    token?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    token?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    token?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }
  export type JsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type Collection_runsListRelationFilter = {
    every?: collection_runsWhereInput
    some?: collection_runsWhereInput
    none?: collection_runsWhereInput
  }

  export type Api_collectionsNullableScalarRelationFilter = {
    is?: api_collectionsWhereInput | null
    isNot?: api_collectionsWhereInput | null
  }

  export type collection_runsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type test_schedulesOrderByRelevanceInput = {
    fields: test_schedulesOrderByRelevanceFieldEnum | test_schedulesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type test_schedulesCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    collection_id?: SortOrder
    active?: SortOrder
    frequency?: SortOrder
    selected_days?: SortOrder
    timer_type?: SortOrder
    minute_interval?: SortOrder
    hour_interval?: SortOrder
    day_time?: SortOrder
    week_day?: SortOrder
    week_time?: SortOrder
    send_email?: SortOrder
    recipient_email?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
  }

  export type test_schedulesAvgOrderByAggregateInput = {
    minute_interval?: SortOrder
    hour_interval?: SortOrder
    week_day?: SortOrder
  }

  export type test_schedulesMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    collection_id?: SortOrder
    active?: SortOrder
    frequency?: SortOrder
    timer_type?: SortOrder
    minute_interval?: SortOrder
    hour_interval?: SortOrder
    day_time?: SortOrder
    week_day?: SortOrder
    week_time?: SortOrder
    send_email?: SortOrder
    recipient_email?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
  }

  export type test_schedulesMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    collection_id?: SortOrder
    active?: SortOrder
    frequency?: SortOrder
    timer_type?: SortOrder
    minute_interval?: SortOrder
    hour_interval?: SortOrder
    day_time?: SortOrder
    week_day?: SortOrder
    week_time?: SortOrder
    send_email?: SortOrder
    recipient_email?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
  }

  export type test_schedulesSumOrderByAggregateInput = {
    minute_interval?: SortOrder
    hour_interval?: SortOrder
    week_day?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type Test_resultsListRelationFilter = {
    every?: test_resultsWhereInput
    some?: test_resultsWhereInput
    none?: test_resultsWhereInput
  }

  export type test_resultsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type api_testsOrderByRelevanceInput = {
    fields: api_testsOrderByRelevanceFieldEnum | api_testsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type api_testsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    method?: SortOrder
    url?: SortOrder
    headers?: SortOrder
    body?: SortOrder
    response?: SortOrder
    status_code?: SortOrder
    user_id?: SortOrder
    collection_id?: SortOrder
  }

  export type api_testsAvgOrderByAggregateInput = {
    status_code?: SortOrder
  }

  export type api_testsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    method?: SortOrder
    url?: SortOrder
    body?: SortOrder
    status_code?: SortOrder
    user_id?: SortOrder
    collection_id?: SortOrder
  }

  export type api_testsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    method?: SortOrder
    url?: SortOrder
    body?: SortOrder
    status_code?: SortOrder
    user_id?: SortOrder
    collection_id?: SortOrder
  }

  export type api_testsSumOrderByAggregateInput = {
    status_code?: SortOrder
  }

  export type Test_schedulesNullableScalarRelationFilter = {
    is?: test_schedulesWhereInput | null
    isNot?: test_schedulesWhereInput | null
  }

  export type api_collectionsOrderByRelevanceInput = {
    fields: api_collectionsOrderByRelevanceFieldEnum | api_collectionsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type api_collectionsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    user_id?: SortOrder
  }

  export type api_collectionsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    user_id?: SortOrder
  }

  export type api_collectionsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    user_id?: SortOrder
  }

  export type Api_collectionsScalarRelationFilter = {
    is?: api_collectionsWhereInput
    isNot?: api_collectionsWhereInput
  }

  export type collection_runsOrderByRelevanceInput = {
    fields: collection_runsOrderByRelevanceFieldEnum | collection_runsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type collection_runsCountOrderByAggregateInput = {
    id?: SortOrder
    collection_id?: SortOrder
    status?: SortOrder
    total_tests?: SortOrder
    success_count?: SortOrder
    failure_count?: SortOrder
    total_duration?: SortOrder
    user_id?: SortOrder
    test_schedules_id?: SortOrder
    created_at?: SortOrder
    completed_at?: SortOrder
  }

  export type collection_runsAvgOrderByAggregateInput = {
    total_tests?: SortOrder
    success_count?: SortOrder
    failure_count?: SortOrder
    total_duration?: SortOrder
  }

  export type collection_runsMaxOrderByAggregateInput = {
    id?: SortOrder
    collection_id?: SortOrder
    status?: SortOrder
    total_tests?: SortOrder
    success_count?: SortOrder
    failure_count?: SortOrder
    total_duration?: SortOrder
    user_id?: SortOrder
    test_schedules_id?: SortOrder
    created_at?: SortOrder
    completed_at?: SortOrder
  }

  export type collection_runsMinOrderByAggregateInput = {
    id?: SortOrder
    collection_id?: SortOrder
    status?: SortOrder
    total_tests?: SortOrder
    success_count?: SortOrder
    failure_count?: SortOrder
    total_duration?: SortOrder
    user_id?: SortOrder
    test_schedules_id?: SortOrder
    created_at?: SortOrder
    completed_at?: SortOrder
  }

  export type collection_runsSumOrderByAggregateInput = {
    total_tests?: SortOrder
    success_count?: SortOrder
    failure_count?: SortOrder
    total_duration?: SortOrder
  }

  export type Api_testsScalarRelationFilter = {
    is?: api_testsWhereInput
    isNot?: api_testsWhereInput
  }

  export type Collection_runsScalarRelationFilter = {
    is?: collection_runsWhereInput
    isNot?: collection_runsWhereInput
  }

  export type test_resultsOrderByRelevanceInput = {
    fields: test_resultsOrderByRelevanceFieldEnum | test_resultsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type test_resultsCountOrderByAggregateInput = {
    id?: SortOrder
    test_id?: SortOrder
    collection_run_id?: SortOrder
    status_code?: SortOrder
    duration?: SortOrder
    error?: SortOrder
    response?: SortOrder
    created_at?: SortOrder
  }

  export type test_resultsAvgOrderByAggregateInput = {
    status_code?: SortOrder
    duration?: SortOrder
  }

  export type test_resultsMaxOrderByAggregateInput = {
    id?: SortOrder
    test_id?: SortOrder
    collection_run_id?: SortOrder
    status_code?: SortOrder
    duration?: SortOrder
    error?: SortOrder
    response?: SortOrder
    created_at?: SortOrder
  }

  export type test_resultsMinOrderByAggregateInput = {
    id?: SortOrder
    test_id?: SortOrder
    collection_run_id?: SortOrder
    status_code?: SortOrder
    duration?: SortOrder
    error?: SortOrder
    response?: SortOrder
    created_at?: SortOrder
  }

  export type test_resultsSumOrderByAggregateInput = {
    status_code?: SortOrder
    duration?: SortOrder
  }

  export type test_schedulesCreateNestedManyWithoutUserInput = {
    create?: XOR<test_schedulesCreateWithoutUserInput, test_schedulesUncheckedCreateWithoutUserInput> | test_schedulesCreateWithoutUserInput[] | test_schedulesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: test_schedulesCreateOrConnectWithoutUserInput | test_schedulesCreateOrConnectWithoutUserInput[]
    createMany?: test_schedulesCreateManyUserInputEnvelope
    connect?: test_schedulesWhereUniqueInput | test_schedulesWhereUniqueInput[]
  }

  export type api_testsCreateNestedManyWithoutUserInput = {
    create?: XOR<api_testsCreateWithoutUserInput, api_testsUncheckedCreateWithoutUserInput> | api_testsCreateWithoutUserInput[] | api_testsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: api_testsCreateOrConnectWithoutUserInput | api_testsCreateOrConnectWithoutUserInput[]
    createMany?: api_testsCreateManyUserInputEnvelope
    connect?: api_testsWhereUniqueInput | api_testsWhereUniqueInput[]
  }

  export type api_collectionsCreateNestedManyWithoutUserInput = {
    create?: XOR<api_collectionsCreateWithoutUserInput, api_collectionsUncheckedCreateWithoutUserInput> | api_collectionsCreateWithoutUserInput[] | api_collectionsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: api_collectionsCreateOrConnectWithoutUserInput | api_collectionsCreateOrConnectWithoutUserInput[]
    createMany?: api_collectionsCreateManyUserInputEnvelope
    connect?: api_collectionsWhereUniqueInput | api_collectionsWhereUniqueInput[]
  }

  export type test_schedulesUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<test_schedulesCreateWithoutUserInput, test_schedulesUncheckedCreateWithoutUserInput> | test_schedulesCreateWithoutUserInput[] | test_schedulesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: test_schedulesCreateOrConnectWithoutUserInput | test_schedulesCreateOrConnectWithoutUserInput[]
    createMany?: test_schedulesCreateManyUserInputEnvelope
    connect?: test_schedulesWhereUniqueInput | test_schedulesWhereUniqueInput[]
  }

  export type api_testsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<api_testsCreateWithoutUserInput, api_testsUncheckedCreateWithoutUserInput> | api_testsCreateWithoutUserInput[] | api_testsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: api_testsCreateOrConnectWithoutUserInput | api_testsCreateOrConnectWithoutUserInput[]
    createMany?: api_testsCreateManyUserInputEnvelope
    connect?: api_testsWhereUniqueInput | api_testsWhereUniqueInput[]
  }

  export type api_collectionsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<api_collectionsCreateWithoutUserInput, api_collectionsUncheckedCreateWithoutUserInput> | api_collectionsCreateWithoutUserInput[] | api_collectionsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: api_collectionsCreateOrConnectWithoutUserInput | api_collectionsCreateOrConnectWithoutUserInput[]
    createMany?: api_collectionsCreateManyUserInputEnvelope
    connect?: api_collectionsWhereUniqueInput | api_collectionsWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type test_schedulesUpdateManyWithoutUserNestedInput = {
    create?: XOR<test_schedulesCreateWithoutUserInput, test_schedulesUncheckedCreateWithoutUserInput> | test_schedulesCreateWithoutUserInput[] | test_schedulesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: test_schedulesCreateOrConnectWithoutUserInput | test_schedulesCreateOrConnectWithoutUserInput[]
    upsert?: test_schedulesUpsertWithWhereUniqueWithoutUserInput | test_schedulesUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: test_schedulesCreateManyUserInputEnvelope
    set?: test_schedulesWhereUniqueInput | test_schedulesWhereUniqueInput[]
    disconnect?: test_schedulesWhereUniqueInput | test_schedulesWhereUniqueInput[]
    delete?: test_schedulesWhereUniqueInput | test_schedulesWhereUniqueInput[]
    connect?: test_schedulesWhereUniqueInput | test_schedulesWhereUniqueInput[]
    update?: test_schedulesUpdateWithWhereUniqueWithoutUserInput | test_schedulesUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: test_schedulesUpdateManyWithWhereWithoutUserInput | test_schedulesUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: test_schedulesScalarWhereInput | test_schedulesScalarWhereInput[]
  }

  export type api_testsUpdateManyWithoutUserNestedInput = {
    create?: XOR<api_testsCreateWithoutUserInput, api_testsUncheckedCreateWithoutUserInput> | api_testsCreateWithoutUserInput[] | api_testsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: api_testsCreateOrConnectWithoutUserInput | api_testsCreateOrConnectWithoutUserInput[]
    upsert?: api_testsUpsertWithWhereUniqueWithoutUserInput | api_testsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: api_testsCreateManyUserInputEnvelope
    set?: api_testsWhereUniqueInput | api_testsWhereUniqueInput[]
    disconnect?: api_testsWhereUniqueInput | api_testsWhereUniqueInput[]
    delete?: api_testsWhereUniqueInput | api_testsWhereUniqueInput[]
    connect?: api_testsWhereUniqueInput | api_testsWhereUniqueInput[]
    update?: api_testsUpdateWithWhereUniqueWithoutUserInput | api_testsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: api_testsUpdateManyWithWhereWithoutUserInput | api_testsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: api_testsScalarWhereInput | api_testsScalarWhereInput[]
  }

  export type api_collectionsUpdateManyWithoutUserNestedInput = {
    create?: XOR<api_collectionsCreateWithoutUserInput, api_collectionsUncheckedCreateWithoutUserInput> | api_collectionsCreateWithoutUserInput[] | api_collectionsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: api_collectionsCreateOrConnectWithoutUserInput | api_collectionsCreateOrConnectWithoutUserInput[]
    upsert?: api_collectionsUpsertWithWhereUniqueWithoutUserInput | api_collectionsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: api_collectionsCreateManyUserInputEnvelope
    set?: api_collectionsWhereUniqueInput | api_collectionsWhereUniqueInput[]
    disconnect?: api_collectionsWhereUniqueInput | api_collectionsWhereUniqueInput[]
    delete?: api_collectionsWhereUniqueInput | api_collectionsWhereUniqueInput[]
    connect?: api_collectionsWhereUniqueInput | api_collectionsWhereUniqueInput[]
    update?: api_collectionsUpdateWithWhereUniqueWithoutUserInput | api_collectionsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: api_collectionsUpdateManyWithWhereWithoutUserInput | api_collectionsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: api_collectionsScalarWhereInput | api_collectionsScalarWhereInput[]
  }

  export type test_schedulesUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<test_schedulesCreateWithoutUserInput, test_schedulesUncheckedCreateWithoutUserInput> | test_schedulesCreateWithoutUserInput[] | test_schedulesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: test_schedulesCreateOrConnectWithoutUserInput | test_schedulesCreateOrConnectWithoutUserInput[]
    upsert?: test_schedulesUpsertWithWhereUniqueWithoutUserInput | test_schedulesUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: test_schedulesCreateManyUserInputEnvelope
    set?: test_schedulesWhereUniqueInput | test_schedulesWhereUniqueInput[]
    disconnect?: test_schedulesWhereUniqueInput | test_schedulesWhereUniqueInput[]
    delete?: test_schedulesWhereUniqueInput | test_schedulesWhereUniqueInput[]
    connect?: test_schedulesWhereUniqueInput | test_schedulesWhereUniqueInput[]
    update?: test_schedulesUpdateWithWhereUniqueWithoutUserInput | test_schedulesUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: test_schedulesUpdateManyWithWhereWithoutUserInput | test_schedulesUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: test_schedulesScalarWhereInput | test_schedulesScalarWhereInput[]
  }

  export type api_testsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<api_testsCreateWithoutUserInput, api_testsUncheckedCreateWithoutUserInput> | api_testsCreateWithoutUserInput[] | api_testsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: api_testsCreateOrConnectWithoutUserInput | api_testsCreateOrConnectWithoutUserInput[]
    upsert?: api_testsUpsertWithWhereUniqueWithoutUserInput | api_testsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: api_testsCreateManyUserInputEnvelope
    set?: api_testsWhereUniqueInput | api_testsWhereUniqueInput[]
    disconnect?: api_testsWhereUniqueInput | api_testsWhereUniqueInput[]
    delete?: api_testsWhereUniqueInput | api_testsWhereUniqueInput[]
    connect?: api_testsWhereUniqueInput | api_testsWhereUniqueInput[]
    update?: api_testsUpdateWithWhereUniqueWithoutUserInput | api_testsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: api_testsUpdateManyWithWhereWithoutUserInput | api_testsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: api_testsScalarWhereInput | api_testsScalarWhereInput[]
  }

  export type api_collectionsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<api_collectionsCreateWithoutUserInput, api_collectionsUncheckedCreateWithoutUserInput> | api_collectionsCreateWithoutUserInput[] | api_collectionsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: api_collectionsCreateOrConnectWithoutUserInput | api_collectionsCreateOrConnectWithoutUserInput[]
    upsert?: api_collectionsUpsertWithWhereUniqueWithoutUserInput | api_collectionsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: api_collectionsCreateManyUserInputEnvelope
    set?: api_collectionsWhereUniqueInput | api_collectionsWhereUniqueInput[]
    disconnect?: api_collectionsWhereUniqueInput | api_collectionsWhereUniqueInput[]
    delete?: api_collectionsWhereUniqueInput | api_collectionsWhereUniqueInput[]
    connect?: api_collectionsWhereUniqueInput | api_collectionsWhereUniqueInput[]
    update?: api_collectionsUpdateWithWhereUniqueWithoutUserInput | api_collectionsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: api_collectionsUpdateManyWithWhereWithoutUserInput | api_collectionsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: api_collectionsScalarWhereInput | api_collectionsScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutTest_schedulesInput = {
    create?: XOR<UserCreateWithoutTest_schedulesInput, UserUncheckedCreateWithoutTest_schedulesInput>
    connectOrCreate?: UserCreateOrConnectWithoutTest_schedulesInput
    connect?: UserWhereUniqueInput
  }

  export type collection_runsCreateNestedManyWithoutTest_schedulesInput = {
    create?: XOR<collection_runsCreateWithoutTest_schedulesInput, collection_runsUncheckedCreateWithoutTest_schedulesInput> | collection_runsCreateWithoutTest_schedulesInput[] | collection_runsUncheckedCreateWithoutTest_schedulesInput[]
    connectOrCreate?: collection_runsCreateOrConnectWithoutTest_schedulesInput | collection_runsCreateOrConnectWithoutTest_schedulesInput[]
    createMany?: collection_runsCreateManyTest_schedulesInputEnvelope
    connect?: collection_runsWhereUniqueInput | collection_runsWhereUniqueInput[]
  }

  export type api_collectionsCreateNestedOneWithoutTest_scheduleInput = {
    create?: XOR<api_collectionsCreateWithoutTest_scheduleInput, api_collectionsUncheckedCreateWithoutTest_scheduleInput>
    connectOrCreate?: api_collectionsCreateOrConnectWithoutTest_scheduleInput
    connect?: api_collectionsWhereUniqueInput
  }

  export type collection_runsUncheckedCreateNestedManyWithoutTest_schedulesInput = {
    create?: XOR<collection_runsCreateWithoutTest_schedulesInput, collection_runsUncheckedCreateWithoutTest_schedulesInput> | collection_runsCreateWithoutTest_schedulesInput[] | collection_runsUncheckedCreateWithoutTest_schedulesInput[]
    connectOrCreate?: collection_runsCreateOrConnectWithoutTest_schedulesInput | collection_runsCreateOrConnectWithoutTest_schedulesInput[]
    createMany?: collection_runsCreateManyTest_schedulesInputEnvelope
    connect?: collection_runsWhereUniqueInput | collection_runsWhereUniqueInput[]
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type UserUpdateOneRequiredWithoutTest_schedulesNestedInput = {
    create?: XOR<UserCreateWithoutTest_schedulesInput, UserUncheckedCreateWithoutTest_schedulesInput>
    connectOrCreate?: UserCreateOrConnectWithoutTest_schedulesInput
    upsert?: UserUpsertWithoutTest_schedulesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTest_schedulesInput, UserUpdateWithoutTest_schedulesInput>, UserUncheckedUpdateWithoutTest_schedulesInput>
  }

  export type collection_runsUpdateManyWithoutTest_schedulesNestedInput = {
    create?: XOR<collection_runsCreateWithoutTest_schedulesInput, collection_runsUncheckedCreateWithoutTest_schedulesInput> | collection_runsCreateWithoutTest_schedulesInput[] | collection_runsUncheckedCreateWithoutTest_schedulesInput[]
    connectOrCreate?: collection_runsCreateOrConnectWithoutTest_schedulesInput | collection_runsCreateOrConnectWithoutTest_schedulesInput[]
    upsert?: collection_runsUpsertWithWhereUniqueWithoutTest_schedulesInput | collection_runsUpsertWithWhereUniqueWithoutTest_schedulesInput[]
    createMany?: collection_runsCreateManyTest_schedulesInputEnvelope
    set?: collection_runsWhereUniqueInput | collection_runsWhereUniqueInput[]
    disconnect?: collection_runsWhereUniqueInput | collection_runsWhereUniqueInput[]
    delete?: collection_runsWhereUniqueInput | collection_runsWhereUniqueInput[]
    connect?: collection_runsWhereUniqueInput | collection_runsWhereUniqueInput[]
    update?: collection_runsUpdateWithWhereUniqueWithoutTest_schedulesInput | collection_runsUpdateWithWhereUniqueWithoutTest_schedulesInput[]
    updateMany?: collection_runsUpdateManyWithWhereWithoutTest_schedulesInput | collection_runsUpdateManyWithWhereWithoutTest_schedulesInput[]
    deleteMany?: collection_runsScalarWhereInput | collection_runsScalarWhereInput[]
  }

  export type api_collectionsUpdateOneWithoutTest_scheduleNestedInput = {
    create?: XOR<api_collectionsCreateWithoutTest_scheduleInput, api_collectionsUncheckedCreateWithoutTest_scheduleInput>
    connectOrCreate?: api_collectionsCreateOrConnectWithoutTest_scheduleInput
    upsert?: api_collectionsUpsertWithoutTest_scheduleInput
    disconnect?: api_collectionsWhereInput | boolean
    delete?: api_collectionsWhereInput | boolean
    connect?: api_collectionsWhereUniqueInput
    update?: XOR<XOR<api_collectionsUpdateToOneWithWhereWithoutTest_scheduleInput, api_collectionsUpdateWithoutTest_scheduleInput>, api_collectionsUncheckedUpdateWithoutTest_scheduleInput>
  }

  export type collection_runsUncheckedUpdateManyWithoutTest_schedulesNestedInput = {
    create?: XOR<collection_runsCreateWithoutTest_schedulesInput, collection_runsUncheckedCreateWithoutTest_schedulesInput> | collection_runsCreateWithoutTest_schedulesInput[] | collection_runsUncheckedCreateWithoutTest_schedulesInput[]
    connectOrCreate?: collection_runsCreateOrConnectWithoutTest_schedulesInput | collection_runsCreateOrConnectWithoutTest_schedulesInput[]
    upsert?: collection_runsUpsertWithWhereUniqueWithoutTest_schedulesInput | collection_runsUpsertWithWhereUniqueWithoutTest_schedulesInput[]
    createMany?: collection_runsCreateManyTest_schedulesInputEnvelope
    set?: collection_runsWhereUniqueInput | collection_runsWhereUniqueInput[]
    disconnect?: collection_runsWhereUniqueInput | collection_runsWhereUniqueInput[]
    delete?: collection_runsWhereUniqueInput | collection_runsWhereUniqueInput[]
    connect?: collection_runsWhereUniqueInput | collection_runsWhereUniqueInput[]
    update?: collection_runsUpdateWithWhereUniqueWithoutTest_schedulesInput | collection_runsUpdateWithWhereUniqueWithoutTest_schedulesInput[]
    updateMany?: collection_runsUpdateManyWithWhereWithoutTest_schedulesInput | collection_runsUpdateManyWithWhereWithoutTest_schedulesInput[]
    deleteMany?: collection_runsScalarWhereInput | collection_runsScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutApi_testsInput = {
    create?: XOR<UserCreateWithoutApi_testsInput, UserUncheckedCreateWithoutApi_testsInput>
    connectOrCreate?: UserCreateOrConnectWithoutApi_testsInput
    connect?: UserWhereUniqueInput
  }

  export type api_collectionsCreateNestedOneWithoutApi_testsInput = {
    create?: XOR<api_collectionsCreateWithoutApi_testsInput, api_collectionsUncheckedCreateWithoutApi_testsInput>
    connectOrCreate?: api_collectionsCreateOrConnectWithoutApi_testsInput
    connect?: api_collectionsWhereUniqueInput
  }

  export type test_resultsCreateNestedManyWithoutApi_testInput = {
    create?: XOR<test_resultsCreateWithoutApi_testInput, test_resultsUncheckedCreateWithoutApi_testInput> | test_resultsCreateWithoutApi_testInput[] | test_resultsUncheckedCreateWithoutApi_testInput[]
    connectOrCreate?: test_resultsCreateOrConnectWithoutApi_testInput | test_resultsCreateOrConnectWithoutApi_testInput[]
    createMany?: test_resultsCreateManyApi_testInputEnvelope
    connect?: test_resultsWhereUniqueInput | test_resultsWhereUniqueInput[]
  }

  export type test_resultsUncheckedCreateNestedManyWithoutApi_testInput = {
    create?: XOR<test_resultsCreateWithoutApi_testInput, test_resultsUncheckedCreateWithoutApi_testInput> | test_resultsCreateWithoutApi_testInput[] | test_resultsUncheckedCreateWithoutApi_testInput[]
    connectOrCreate?: test_resultsCreateOrConnectWithoutApi_testInput | test_resultsCreateOrConnectWithoutApi_testInput[]
    createMany?: test_resultsCreateManyApi_testInputEnvelope
    connect?: test_resultsWhereUniqueInput | test_resultsWhereUniqueInput[]
  }

  export type UserUpdateOneRequiredWithoutApi_testsNestedInput = {
    create?: XOR<UserCreateWithoutApi_testsInput, UserUncheckedCreateWithoutApi_testsInput>
    connectOrCreate?: UserCreateOrConnectWithoutApi_testsInput
    upsert?: UserUpsertWithoutApi_testsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutApi_testsInput, UserUpdateWithoutApi_testsInput>, UserUncheckedUpdateWithoutApi_testsInput>
  }

  export type api_collectionsUpdateOneWithoutApi_testsNestedInput = {
    create?: XOR<api_collectionsCreateWithoutApi_testsInput, api_collectionsUncheckedCreateWithoutApi_testsInput>
    connectOrCreate?: api_collectionsCreateOrConnectWithoutApi_testsInput
    upsert?: api_collectionsUpsertWithoutApi_testsInput
    disconnect?: api_collectionsWhereInput | boolean
    delete?: api_collectionsWhereInput | boolean
    connect?: api_collectionsWhereUniqueInput
    update?: XOR<XOR<api_collectionsUpdateToOneWithWhereWithoutApi_testsInput, api_collectionsUpdateWithoutApi_testsInput>, api_collectionsUncheckedUpdateWithoutApi_testsInput>
  }

  export type test_resultsUpdateManyWithoutApi_testNestedInput = {
    create?: XOR<test_resultsCreateWithoutApi_testInput, test_resultsUncheckedCreateWithoutApi_testInput> | test_resultsCreateWithoutApi_testInput[] | test_resultsUncheckedCreateWithoutApi_testInput[]
    connectOrCreate?: test_resultsCreateOrConnectWithoutApi_testInput | test_resultsCreateOrConnectWithoutApi_testInput[]
    upsert?: test_resultsUpsertWithWhereUniqueWithoutApi_testInput | test_resultsUpsertWithWhereUniqueWithoutApi_testInput[]
    createMany?: test_resultsCreateManyApi_testInputEnvelope
    set?: test_resultsWhereUniqueInput | test_resultsWhereUniqueInput[]
    disconnect?: test_resultsWhereUniqueInput | test_resultsWhereUniqueInput[]
    delete?: test_resultsWhereUniqueInput | test_resultsWhereUniqueInput[]
    connect?: test_resultsWhereUniqueInput | test_resultsWhereUniqueInput[]
    update?: test_resultsUpdateWithWhereUniqueWithoutApi_testInput | test_resultsUpdateWithWhereUniqueWithoutApi_testInput[]
    updateMany?: test_resultsUpdateManyWithWhereWithoutApi_testInput | test_resultsUpdateManyWithWhereWithoutApi_testInput[]
    deleteMany?: test_resultsScalarWhereInput | test_resultsScalarWhereInput[]
  }

  export type test_resultsUncheckedUpdateManyWithoutApi_testNestedInput = {
    create?: XOR<test_resultsCreateWithoutApi_testInput, test_resultsUncheckedCreateWithoutApi_testInput> | test_resultsCreateWithoutApi_testInput[] | test_resultsUncheckedCreateWithoutApi_testInput[]
    connectOrCreate?: test_resultsCreateOrConnectWithoutApi_testInput | test_resultsCreateOrConnectWithoutApi_testInput[]
    upsert?: test_resultsUpsertWithWhereUniqueWithoutApi_testInput | test_resultsUpsertWithWhereUniqueWithoutApi_testInput[]
    createMany?: test_resultsCreateManyApi_testInputEnvelope
    set?: test_resultsWhereUniqueInput | test_resultsWhereUniqueInput[]
    disconnect?: test_resultsWhereUniqueInput | test_resultsWhereUniqueInput[]
    delete?: test_resultsWhereUniqueInput | test_resultsWhereUniqueInput[]
    connect?: test_resultsWhereUniqueInput | test_resultsWhereUniqueInput[]
    update?: test_resultsUpdateWithWhereUniqueWithoutApi_testInput | test_resultsUpdateWithWhereUniqueWithoutApi_testInput[]
    updateMany?: test_resultsUpdateManyWithWhereWithoutApi_testInput | test_resultsUpdateManyWithWhereWithoutApi_testInput[]
    deleteMany?: test_resultsScalarWhereInput | test_resultsScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutApi_collectionsInput = {
    create?: XOR<UserCreateWithoutApi_collectionsInput, UserUncheckedCreateWithoutApi_collectionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutApi_collectionsInput
    connect?: UserWhereUniqueInput
  }

  export type api_testsCreateNestedManyWithoutApi_collectionInput = {
    create?: XOR<api_testsCreateWithoutApi_collectionInput, api_testsUncheckedCreateWithoutApi_collectionInput> | api_testsCreateWithoutApi_collectionInput[] | api_testsUncheckedCreateWithoutApi_collectionInput[]
    connectOrCreate?: api_testsCreateOrConnectWithoutApi_collectionInput | api_testsCreateOrConnectWithoutApi_collectionInput[]
    createMany?: api_testsCreateManyApi_collectionInputEnvelope
    connect?: api_testsWhereUniqueInput | api_testsWhereUniqueInput[]
  }

  export type collection_runsCreateNestedManyWithoutApi_collectionInput = {
    create?: XOR<collection_runsCreateWithoutApi_collectionInput, collection_runsUncheckedCreateWithoutApi_collectionInput> | collection_runsCreateWithoutApi_collectionInput[] | collection_runsUncheckedCreateWithoutApi_collectionInput[]
    connectOrCreate?: collection_runsCreateOrConnectWithoutApi_collectionInput | collection_runsCreateOrConnectWithoutApi_collectionInput[]
    createMany?: collection_runsCreateManyApi_collectionInputEnvelope
    connect?: collection_runsWhereUniqueInput | collection_runsWhereUniqueInput[]
  }

  export type test_schedulesCreateNestedOneWithoutApi_collectionInput = {
    create?: XOR<test_schedulesCreateWithoutApi_collectionInput, test_schedulesUncheckedCreateWithoutApi_collectionInput>
    connectOrCreate?: test_schedulesCreateOrConnectWithoutApi_collectionInput
    connect?: test_schedulesWhereUniqueInput
  }

  export type api_testsUncheckedCreateNestedManyWithoutApi_collectionInput = {
    create?: XOR<api_testsCreateWithoutApi_collectionInput, api_testsUncheckedCreateWithoutApi_collectionInput> | api_testsCreateWithoutApi_collectionInput[] | api_testsUncheckedCreateWithoutApi_collectionInput[]
    connectOrCreate?: api_testsCreateOrConnectWithoutApi_collectionInput | api_testsCreateOrConnectWithoutApi_collectionInput[]
    createMany?: api_testsCreateManyApi_collectionInputEnvelope
    connect?: api_testsWhereUniqueInput | api_testsWhereUniqueInput[]
  }

  export type collection_runsUncheckedCreateNestedManyWithoutApi_collectionInput = {
    create?: XOR<collection_runsCreateWithoutApi_collectionInput, collection_runsUncheckedCreateWithoutApi_collectionInput> | collection_runsCreateWithoutApi_collectionInput[] | collection_runsUncheckedCreateWithoutApi_collectionInput[]
    connectOrCreate?: collection_runsCreateOrConnectWithoutApi_collectionInput | collection_runsCreateOrConnectWithoutApi_collectionInput[]
    createMany?: collection_runsCreateManyApi_collectionInputEnvelope
    connect?: collection_runsWhereUniqueInput | collection_runsWhereUniqueInput[]
  }

  export type test_schedulesUncheckedCreateNestedOneWithoutApi_collectionInput = {
    create?: XOR<test_schedulesCreateWithoutApi_collectionInput, test_schedulesUncheckedCreateWithoutApi_collectionInput>
    connectOrCreate?: test_schedulesCreateOrConnectWithoutApi_collectionInput
    connect?: test_schedulesWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutApi_collectionsNestedInput = {
    create?: XOR<UserCreateWithoutApi_collectionsInput, UserUncheckedCreateWithoutApi_collectionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutApi_collectionsInput
    upsert?: UserUpsertWithoutApi_collectionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutApi_collectionsInput, UserUpdateWithoutApi_collectionsInput>, UserUncheckedUpdateWithoutApi_collectionsInput>
  }

  export type api_testsUpdateManyWithoutApi_collectionNestedInput = {
    create?: XOR<api_testsCreateWithoutApi_collectionInput, api_testsUncheckedCreateWithoutApi_collectionInput> | api_testsCreateWithoutApi_collectionInput[] | api_testsUncheckedCreateWithoutApi_collectionInput[]
    connectOrCreate?: api_testsCreateOrConnectWithoutApi_collectionInput | api_testsCreateOrConnectWithoutApi_collectionInput[]
    upsert?: api_testsUpsertWithWhereUniqueWithoutApi_collectionInput | api_testsUpsertWithWhereUniqueWithoutApi_collectionInput[]
    createMany?: api_testsCreateManyApi_collectionInputEnvelope
    set?: api_testsWhereUniqueInput | api_testsWhereUniqueInput[]
    disconnect?: api_testsWhereUniqueInput | api_testsWhereUniqueInput[]
    delete?: api_testsWhereUniqueInput | api_testsWhereUniqueInput[]
    connect?: api_testsWhereUniqueInput | api_testsWhereUniqueInput[]
    update?: api_testsUpdateWithWhereUniqueWithoutApi_collectionInput | api_testsUpdateWithWhereUniqueWithoutApi_collectionInput[]
    updateMany?: api_testsUpdateManyWithWhereWithoutApi_collectionInput | api_testsUpdateManyWithWhereWithoutApi_collectionInput[]
    deleteMany?: api_testsScalarWhereInput | api_testsScalarWhereInput[]
  }

  export type collection_runsUpdateManyWithoutApi_collectionNestedInput = {
    create?: XOR<collection_runsCreateWithoutApi_collectionInput, collection_runsUncheckedCreateWithoutApi_collectionInput> | collection_runsCreateWithoutApi_collectionInput[] | collection_runsUncheckedCreateWithoutApi_collectionInput[]
    connectOrCreate?: collection_runsCreateOrConnectWithoutApi_collectionInput | collection_runsCreateOrConnectWithoutApi_collectionInput[]
    upsert?: collection_runsUpsertWithWhereUniqueWithoutApi_collectionInput | collection_runsUpsertWithWhereUniqueWithoutApi_collectionInput[]
    createMany?: collection_runsCreateManyApi_collectionInputEnvelope
    set?: collection_runsWhereUniqueInput | collection_runsWhereUniqueInput[]
    disconnect?: collection_runsWhereUniqueInput | collection_runsWhereUniqueInput[]
    delete?: collection_runsWhereUniqueInput | collection_runsWhereUniqueInput[]
    connect?: collection_runsWhereUniqueInput | collection_runsWhereUniqueInput[]
    update?: collection_runsUpdateWithWhereUniqueWithoutApi_collectionInput | collection_runsUpdateWithWhereUniqueWithoutApi_collectionInput[]
    updateMany?: collection_runsUpdateManyWithWhereWithoutApi_collectionInput | collection_runsUpdateManyWithWhereWithoutApi_collectionInput[]
    deleteMany?: collection_runsScalarWhereInput | collection_runsScalarWhereInput[]
  }

  export type test_schedulesUpdateOneWithoutApi_collectionNestedInput = {
    create?: XOR<test_schedulesCreateWithoutApi_collectionInput, test_schedulesUncheckedCreateWithoutApi_collectionInput>
    connectOrCreate?: test_schedulesCreateOrConnectWithoutApi_collectionInput
    upsert?: test_schedulesUpsertWithoutApi_collectionInput
    disconnect?: test_schedulesWhereInput | boolean
    delete?: test_schedulesWhereInput | boolean
    connect?: test_schedulesWhereUniqueInput
    update?: XOR<XOR<test_schedulesUpdateToOneWithWhereWithoutApi_collectionInput, test_schedulesUpdateWithoutApi_collectionInput>, test_schedulesUncheckedUpdateWithoutApi_collectionInput>
  }

  export type api_testsUncheckedUpdateManyWithoutApi_collectionNestedInput = {
    create?: XOR<api_testsCreateWithoutApi_collectionInput, api_testsUncheckedCreateWithoutApi_collectionInput> | api_testsCreateWithoutApi_collectionInput[] | api_testsUncheckedCreateWithoutApi_collectionInput[]
    connectOrCreate?: api_testsCreateOrConnectWithoutApi_collectionInput | api_testsCreateOrConnectWithoutApi_collectionInput[]
    upsert?: api_testsUpsertWithWhereUniqueWithoutApi_collectionInput | api_testsUpsertWithWhereUniqueWithoutApi_collectionInput[]
    createMany?: api_testsCreateManyApi_collectionInputEnvelope
    set?: api_testsWhereUniqueInput | api_testsWhereUniqueInput[]
    disconnect?: api_testsWhereUniqueInput | api_testsWhereUniqueInput[]
    delete?: api_testsWhereUniqueInput | api_testsWhereUniqueInput[]
    connect?: api_testsWhereUniqueInput | api_testsWhereUniqueInput[]
    update?: api_testsUpdateWithWhereUniqueWithoutApi_collectionInput | api_testsUpdateWithWhereUniqueWithoutApi_collectionInput[]
    updateMany?: api_testsUpdateManyWithWhereWithoutApi_collectionInput | api_testsUpdateManyWithWhereWithoutApi_collectionInput[]
    deleteMany?: api_testsScalarWhereInput | api_testsScalarWhereInput[]
  }

  export type collection_runsUncheckedUpdateManyWithoutApi_collectionNestedInput = {
    create?: XOR<collection_runsCreateWithoutApi_collectionInput, collection_runsUncheckedCreateWithoutApi_collectionInput> | collection_runsCreateWithoutApi_collectionInput[] | collection_runsUncheckedCreateWithoutApi_collectionInput[]
    connectOrCreate?: collection_runsCreateOrConnectWithoutApi_collectionInput | collection_runsCreateOrConnectWithoutApi_collectionInput[]
    upsert?: collection_runsUpsertWithWhereUniqueWithoutApi_collectionInput | collection_runsUpsertWithWhereUniqueWithoutApi_collectionInput[]
    createMany?: collection_runsCreateManyApi_collectionInputEnvelope
    set?: collection_runsWhereUniqueInput | collection_runsWhereUniqueInput[]
    disconnect?: collection_runsWhereUniqueInput | collection_runsWhereUniqueInput[]
    delete?: collection_runsWhereUniqueInput | collection_runsWhereUniqueInput[]
    connect?: collection_runsWhereUniqueInput | collection_runsWhereUniqueInput[]
    update?: collection_runsUpdateWithWhereUniqueWithoutApi_collectionInput | collection_runsUpdateWithWhereUniqueWithoutApi_collectionInput[]
    updateMany?: collection_runsUpdateManyWithWhereWithoutApi_collectionInput | collection_runsUpdateManyWithWhereWithoutApi_collectionInput[]
    deleteMany?: collection_runsScalarWhereInput | collection_runsScalarWhereInput[]
  }

  export type test_schedulesUncheckedUpdateOneWithoutApi_collectionNestedInput = {
    create?: XOR<test_schedulesCreateWithoutApi_collectionInput, test_schedulesUncheckedCreateWithoutApi_collectionInput>
    connectOrCreate?: test_schedulesCreateOrConnectWithoutApi_collectionInput
    upsert?: test_schedulesUpsertWithoutApi_collectionInput
    disconnect?: test_schedulesWhereInput | boolean
    delete?: test_schedulesWhereInput | boolean
    connect?: test_schedulesWhereUniqueInput
    update?: XOR<XOR<test_schedulesUpdateToOneWithWhereWithoutApi_collectionInput, test_schedulesUpdateWithoutApi_collectionInput>, test_schedulesUncheckedUpdateWithoutApi_collectionInput>
  }

  export type test_schedulesCreateNestedOneWithoutCollection_runsInput = {
    create?: XOR<test_schedulesCreateWithoutCollection_runsInput, test_schedulesUncheckedCreateWithoutCollection_runsInput>
    connectOrCreate?: test_schedulesCreateOrConnectWithoutCollection_runsInput
    connect?: test_schedulesWhereUniqueInput
  }

  export type api_collectionsCreateNestedOneWithoutCollection_runsInput = {
    create?: XOR<api_collectionsCreateWithoutCollection_runsInput, api_collectionsUncheckedCreateWithoutCollection_runsInput>
    connectOrCreate?: api_collectionsCreateOrConnectWithoutCollection_runsInput
    connect?: api_collectionsWhereUniqueInput
  }

  export type test_resultsCreateNestedManyWithoutCollection_runInput = {
    create?: XOR<test_resultsCreateWithoutCollection_runInput, test_resultsUncheckedCreateWithoutCollection_runInput> | test_resultsCreateWithoutCollection_runInput[] | test_resultsUncheckedCreateWithoutCollection_runInput[]
    connectOrCreate?: test_resultsCreateOrConnectWithoutCollection_runInput | test_resultsCreateOrConnectWithoutCollection_runInput[]
    createMany?: test_resultsCreateManyCollection_runInputEnvelope
    connect?: test_resultsWhereUniqueInput | test_resultsWhereUniqueInput[]
  }

  export type test_resultsUncheckedCreateNestedManyWithoutCollection_runInput = {
    create?: XOR<test_resultsCreateWithoutCollection_runInput, test_resultsUncheckedCreateWithoutCollection_runInput> | test_resultsCreateWithoutCollection_runInput[] | test_resultsUncheckedCreateWithoutCollection_runInput[]
    connectOrCreate?: test_resultsCreateOrConnectWithoutCollection_runInput | test_resultsCreateOrConnectWithoutCollection_runInput[]
    createMany?: test_resultsCreateManyCollection_runInputEnvelope
    connect?: test_resultsWhereUniqueInput | test_resultsWhereUniqueInput[]
  }

  export type test_schedulesUpdateOneWithoutCollection_runsNestedInput = {
    create?: XOR<test_schedulesCreateWithoutCollection_runsInput, test_schedulesUncheckedCreateWithoutCollection_runsInput>
    connectOrCreate?: test_schedulesCreateOrConnectWithoutCollection_runsInput
    upsert?: test_schedulesUpsertWithoutCollection_runsInput
    disconnect?: test_schedulesWhereInput | boolean
    delete?: test_schedulesWhereInput | boolean
    connect?: test_schedulesWhereUniqueInput
    update?: XOR<XOR<test_schedulesUpdateToOneWithWhereWithoutCollection_runsInput, test_schedulesUpdateWithoutCollection_runsInput>, test_schedulesUncheckedUpdateWithoutCollection_runsInput>
  }

  export type api_collectionsUpdateOneRequiredWithoutCollection_runsNestedInput = {
    create?: XOR<api_collectionsCreateWithoutCollection_runsInput, api_collectionsUncheckedCreateWithoutCollection_runsInput>
    connectOrCreate?: api_collectionsCreateOrConnectWithoutCollection_runsInput
    upsert?: api_collectionsUpsertWithoutCollection_runsInput
    connect?: api_collectionsWhereUniqueInput
    update?: XOR<XOR<api_collectionsUpdateToOneWithWhereWithoutCollection_runsInput, api_collectionsUpdateWithoutCollection_runsInput>, api_collectionsUncheckedUpdateWithoutCollection_runsInput>
  }

  export type test_resultsUpdateManyWithoutCollection_runNestedInput = {
    create?: XOR<test_resultsCreateWithoutCollection_runInput, test_resultsUncheckedCreateWithoutCollection_runInput> | test_resultsCreateWithoutCollection_runInput[] | test_resultsUncheckedCreateWithoutCollection_runInput[]
    connectOrCreate?: test_resultsCreateOrConnectWithoutCollection_runInput | test_resultsCreateOrConnectWithoutCollection_runInput[]
    upsert?: test_resultsUpsertWithWhereUniqueWithoutCollection_runInput | test_resultsUpsertWithWhereUniqueWithoutCollection_runInput[]
    createMany?: test_resultsCreateManyCollection_runInputEnvelope
    set?: test_resultsWhereUniqueInput | test_resultsWhereUniqueInput[]
    disconnect?: test_resultsWhereUniqueInput | test_resultsWhereUniqueInput[]
    delete?: test_resultsWhereUniqueInput | test_resultsWhereUniqueInput[]
    connect?: test_resultsWhereUniqueInput | test_resultsWhereUniqueInput[]
    update?: test_resultsUpdateWithWhereUniqueWithoutCollection_runInput | test_resultsUpdateWithWhereUniqueWithoutCollection_runInput[]
    updateMany?: test_resultsUpdateManyWithWhereWithoutCollection_runInput | test_resultsUpdateManyWithWhereWithoutCollection_runInput[]
    deleteMany?: test_resultsScalarWhereInput | test_resultsScalarWhereInput[]
  }

  export type test_resultsUncheckedUpdateManyWithoutCollection_runNestedInput = {
    create?: XOR<test_resultsCreateWithoutCollection_runInput, test_resultsUncheckedCreateWithoutCollection_runInput> | test_resultsCreateWithoutCollection_runInput[] | test_resultsUncheckedCreateWithoutCollection_runInput[]
    connectOrCreate?: test_resultsCreateOrConnectWithoutCollection_runInput | test_resultsCreateOrConnectWithoutCollection_runInput[]
    upsert?: test_resultsUpsertWithWhereUniqueWithoutCollection_runInput | test_resultsUpsertWithWhereUniqueWithoutCollection_runInput[]
    createMany?: test_resultsCreateManyCollection_runInputEnvelope
    set?: test_resultsWhereUniqueInput | test_resultsWhereUniqueInput[]
    disconnect?: test_resultsWhereUniqueInput | test_resultsWhereUniqueInput[]
    delete?: test_resultsWhereUniqueInput | test_resultsWhereUniqueInput[]
    connect?: test_resultsWhereUniqueInput | test_resultsWhereUniqueInput[]
    update?: test_resultsUpdateWithWhereUniqueWithoutCollection_runInput | test_resultsUpdateWithWhereUniqueWithoutCollection_runInput[]
    updateMany?: test_resultsUpdateManyWithWhereWithoutCollection_runInput | test_resultsUpdateManyWithWhereWithoutCollection_runInput[]
    deleteMany?: test_resultsScalarWhereInput | test_resultsScalarWhereInput[]
  }

  export type api_testsCreateNestedOneWithoutTest_resultsInput = {
    create?: XOR<api_testsCreateWithoutTest_resultsInput, api_testsUncheckedCreateWithoutTest_resultsInput>
    connectOrCreate?: api_testsCreateOrConnectWithoutTest_resultsInput
    connect?: api_testsWhereUniqueInput
  }

  export type collection_runsCreateNestedOneWithoutTest_resultsInput = {
    create?: XOR<collection_runsCreateWithoutTest_resultsInput, collection_runsUncheckedCreateWithoutTest_resultsInput>
    connectOrCreate?: collection_runsCreateOrConnectWithoutTest_resultsInput
    connect?: collection_runsWhereUniqueInput
  }

  export type api_testsUpdateOneRequiredWithoutTest_resultsNestedInput = {
    create?: XOR<api_testsCreateWithoutTest_resultsInput, api_testsUncheckedCreateWithoutTest_resultsInput>
    connectOrCreate?: api_testsCreateOrConnectWithoutTest_resultsInput
    upsert?: api_testsUpsertWithoutTest_resultsInput
    connect?: api_testsWhereUniqueInput
    update?: XOR<XOR<api_testsUpdateToOneWithWhereWithoutTest_resultsInput, api_testsUpdateWithoutTest_resultsInput>, api_testsUncheckedUpdateWithoutTest_resultsInput>
  }

  export type collection_runsUpdateOneRequiredWithoutTest_resultsNestedInput = {
    create?: XOR<collection_runsCreateWithoutTest_resultsInput, collection_runsUncheckedCreateWithoutTest_resultsInput>
    connectOrCreate?: collection_runsCreateOrConnectWithoutTest_resultsInput
    upsert?: collection_runsUpsertWithoutTest_resultsInput
    connect?: collection_runsWhereUniqueInput
    update?: XOR<XOR<collection_runsUpdateToOneWithWhereWithoutTest_resultsInput, collection_runsUpdateWithoutTest_resultsInput>, collection_runsUncheckedUpdateWithoutTest_resultsInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type test_schedulesCreateWithoutUserInput = {
    id?: string
    name: string
    active?: boolean
    frequency: string
    selected_days: JsonNullValueInput | InputJsonValue
    timer_type: string
    minute_interval: number
    hour_interval?: number | null
    day_time?: string | null
    week_day?: number | null
    week_time?: string | null
    send_email: boolean
    recipient_email: string
    created_at?: Date | string
    collection_runs?: collection_runsCreateNestedManyWithoutTest_schedulesInput
    api_collection?: api_collectionsCreateNestedOneWithoutTest_scheduleInput
  }

  export type test_schedulesUncheckedCreateWithoutUserInput = {
    id?: string
    name: string
    collection_id?: string | null
    active?: boolean
    frequency: string
    selected_days: JsonNullValueInput | InputJsonValue
    timer_type: string
    minute_interval: number
    hour_interval?: number | null
    day_time?: string | null
    week_day?: number | null
    week_time?: string | null
    send_email: boolean
    recipient_email: string
    created_at?: Date | string
    collection_runs?: collection_runsUncheckedCreateNestedManyWithoutTest_schedulesInput
  }

  export type test_schedulesCreateOrConnectWithoutUserInput = {
    where: test_schedulesWhereUniqueInput
    create: XOR<test_schedulesCreateWithoutUserInput, test_schedulesUncheckedCreateWithoutUserInput>
  }

  export type test_schedulesCreateManyUserInputEnvelope = {
    data: test_schedulesCreateManyUserInput | test_schedulesCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type api_testsCreateWithoutUserInput = {
    id?: string
    name: string
    method: string
    url: string
    headers: JsonNullValueInput | InputJsonValue
    body?: string | null
    response: JsonNullValueInput | InputJsonValue
    status_code: number
    api_collection?: api_collectionsCreateNestedOneWithoutApi_testsInput
    test_results?: test_resultsCreateNestedManyWithoutApi_testInput
  }

  export type api_testsUncheckedCreateWithoutUserInput = {
    id?: string
    name: string
    method: string
    url: string
    headers: JsonNullValueInput | InputJsonValue
    body?: string | null
    response: JsonNullValueInput | InputJsonValue
    status_code: number
    collection_id?: string | null
    test_results?: test_resultsUncheckedCreateNestedManyWithoutApi_testInput
  }

  export type api_testsCreateOrConnectWithoutUserInput = {
    where: api_testsWhereUniqueInput
    create: XOR<api_testsCreateWithoutUserInput, api_testsUncheckedCreateWithoutUserInput>
  }

  export type api_testsCreateManyUserInputEnvelope = {
    data: api_testsCreateManyUserInput | api_testsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type api_collectionsCreateWithoutUserInput = {
    id?: string
    name: string
    description: string
    api_tests?: api_testsCreateNestedManyWithoutApi_collectionInput
    collection_runs?: collection_runsCreateNestedManyWithoutApi_collectionInput
    test_schedule?: test_schedulesCreateNestedOneWithoutApi_collectionInput
  }

  export type api_collectionsUncheckedCreateWithoutUserInput = {
    id?: string
    name: string
    description: string
    api_tests?: api_testsUncheckedCreateNestedManyWithoutApi_collectionInput
    collection_runs?: collection_runsUncheckedCreateNestedManyWithoutApi_collectionInput
    test_schedule?: test_schedulesUncheckedCreateNestedOneWithoutApi_collectionInput
  }

  export type api_collectionsCreateOrConnectWithoutUserInput = {
    where: api_collectionsWhereUniqueInput
    create: XOR<api_collectionsCreateWithoutUserInput, api_collectionsUncheckedCreateWithoutUserInput>
  }

  export type api_collectionsCreateManyUserInputEnvelope = {
    data: api_collectionsCreateManyUserInput | api_collectionsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type test_schedulesUpsertWithWhereUniqueWithoutUserInput = {
    where: test_schedulesWhereUniqueInput
    update: XOR<test_schedulesUpdateWithoutUserInput, test_schedulesUncheckedUpdateWithoutUserInput>
    create: XOR<test_schedulesCreateWithoutUserInput, test_schedulesUncheckedCreateWithoutUserInput>
  }

  export type test_schedulesUpdateWithWhereUniqueWithoutUserInput = {
    where: test_schedulesWhereUniqueInput
    data: XOR<test_schedulesUpdateWithoutUserInput, test_schedulesUncheckedUpdateWithoutUserInput>
  }

  export type test_schedulesUpdateManyWithWhereWithoutUserInput = {
    where: test_schedulesScalarWhereInput
    data: XOR<test_schedulesUpdateManyMutationInput, test_schedulesUncheckedUpdateManyWithoutUserInput>
  }

  export type test_schedulesScalarWhereInput = {
    AND?: test_schedulesScalarWhereInput | test_schedulesScalarWhereInput[]
    OR?: test_schedulesScalarWhereInput[]
    NOT?: test_schedulesScalarWhereInput | test_schedulesScalarWhereInput[]
    id?: StringFilter<"test_schedules"> | string
    name?: StringFilter<"test_schedules"> | string
    collection_id?: StringNullableFilter<"test_schedules"> | string | null
    active?: BoolFilter<"test_schedules"> | boolean
    frequency?: StringFilter<"test_schedules"> | string
    selected_days?: JsonFilter<"test_schedules">
    timer_type?: StringFilter<"test_schedules"> | string
    minute_interval?: IntFilter<"test_schedules"> | number
    hour_interval?: IntNullableFilter<"test_schedules"> | number | null
    day_time?: StringNullableFilter<"test_schedules"> | string | null
    week_day?: IntNullableFilter<"test_schedules"> | number | null
    week_time?: StringNullableFilter<"test_schedules"> | string | null
    send_email?: BoolFilter<"test_schedules"> | boolean
    recipient_email?: StringFilter<"test_schedules"> | string
    user_id?: StringFilter<"test_schedules"> | string
    created_at?: DateTimeFilter<"test_schedules"> | Date | string
  }

  export type api_testsUpsertWithWhereUniqueWithoutUserInput = {
    where: api_testsWhereUniqueInput
    update: XOR<api_testsUpdateWithoutUserInput, api_testsUncheckedUpdateWithoutUserInput>
    create: XOR<api_testsCreateWithoutUserInput, api_testsUncheckedCreateWithoutUserInput>
  }

  export type api_testsUpdateWithWhereUniqueWithoutUserInput = {
    where: api_testsWhereUniqueInput
    data: XOR<api_testsUpdateWithoutUserInput, api_testsUncheckedUpdateWithoutUserInput>
  }

  export type api_testsUpdateManyWithWhereWithoutUserInput = {
    where: api_testsScalarWhereInput
    data: XOR<api_testsUpdateManyMutationInput, api_testsUncheckedUpdateManyWithoutUserInput>
  }

  export type api_testsScalarWhereInput = {
    AND?: api_testsScalarWhereInput | api_testsScalarWhereInput[]
    OR?: api_testsScalarWhereInput[]
    NOT?: api_testsScalarWhereInput | api_testsScalarWhereInput[]
    id?: StringFilter<"api_tests"> | string
    name?: StringFilter<"api_tests"> | string
    method?: StringFilter<"api_tests"> | string
    url?: StringFilter<"api_tests"> | string
    headers?: JsonFilter<"api_tests">
    body?: StringNullableFilter<"api_tests"> | string | null
    response?: JsonFilter<"api_tests">
    status_code?: IntFilter<"api_tests"> | number
    user_id?: StringFilter<"api_tests"> | string
    collection_id?: StringNullableFilter<"api_tests"> | string | null
  }

  export type api_collectionsUpsertWithWhereUniqueWithoutUserInput = {
    where: api_collectionsWhereUniqueInput
    update: XOR<api_collectionsUpdateWithoutUserInput, api_collectionsUncheckedUpdateWithoutUserInput>
    create: XOR<api_collectionsCreateWithoutUserInput, api_collectionsUncheckedCreateWithoutUserInput>
  }

  export type api_collectionsUpdateWithWhereUniqueWithoutUserInput = {
    where: api_collectionsWhereUniqueInput
    data: XOR<api_collectionsUpdateWithoutUserInput, api_collectionsUncheckedUpdateWithoutUserInput>
  }

  export type api_collectionsUpdateManyWithWhereWithoutUserInput = {
    where: api_collectionsScalarWhereInput
    data: XOR<api_collectionsUpdateManyMutationInput, api_collectionsUncheckedUpdateManyWithoutUserInput>
  }

  export type api_collectionsScalarWhereInput = {
    AND?: api_collectionsScalarWhereInput | api_collectionsScalarWhereInput[]
    OR?: api_collectionsScalarWhereInput[]
    NOT?: api_collectionsScalarWhereInput | api_collectionsScalarWhereInput[]
    id?: StringFilter<"api_collections"> | string
    name?: StringFilter<"api_collections"> | string
    description?: StringFilter<"api_collections"> | string
    user_id?: StringFilter<"api_collections"> | string
  }

  export type UserCreateWithoutTest_schedulesInput = {
    id?: string
    username: string
    password: string
    token?: string | null
    api_tests?: api_testsCreateNestedManyWithoutUserInput
    api_collections?: api_collectionsCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutTest_schedulesInput = {
    id?: string
    username: string
    password: string
    token?: string | null
    api_tests?: api_testsUncheckedCreateNestedManyWithoutUserInput
    api_collections?: api_collectionsUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutTest_schedulesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTest_schedulesInput, UserUncheckedCreateWithoutTest_schedulesInput>
  }

  export type collection_runsCreateWithoutTest_schedulesInput = {
    id?: string
    status: string
    total_tests: number
    success_count: number
    failure_count: number
    total_duration: number
    user_id: string
    created_at?: Date | string
    completed_at?: Date | string
    api_collection: api_collectionsCreateNestedOneWithoutCollection_runsInput
    test_results?: test_resultsCreateNestedManyWithoutCollection_runInput
  }

  export type collection_runsUncheckedCreateWithoutTest_schedulesInput = {
    id?: string
    collection_id: string
    status: string
    total_tests: number
    success_count: number
    failure_count: number
    total_duration: number
    user_id: string
    created_at?: Date | string
    completed_at?: Date | string
    test_results?: test_resultsUncheckedCreateNestedManyWithoutCollection_runInput
  }

  export type collection_runsCreateOrConnectWithoutTest_schedulesInput = {
    where: collection_runsWhereUniqueInput
    create: XOR<collection_runsCreateWithoutTest_schedulesInput, collection_runsUncheckedCreateWithoutTest_schedulesInput>
  }

  export type collection_runsCreateManyTest_schedulesInputEnvelope = {
    data: collection_runsCreateManyTest_schedulesInput | collection_runsCreateManyTest_schedulesInput[]
    skipDuplicates?: boolean
  }

  export type api_collectionsCreateWithoutTest_scheduleInput = {
    id?: string
    name: string
    description: string
    User: UserCreateNestedOneWithoutApi_collectionsInput
    api_tests?: api_testsCreateNestedManyWithoutApi_collectionInput
    collection_runs?: collection_runsCreateNestedManyWithoutApi_collectionInput
  }

  export type api_collectionsUncheckedCreateWithoutTest_scheduleInput = {
    id?: string
    name: string
    description: string
    user_id: string
    api_tests?: api_testsUncheckedCreateNestedManyWithoutApi_collectionInput
    collection_runs?: collection_runsUncheckedCreateNestedManyWithoutApi_collectionInput
  }

  export type api_collectionsCreateOrConnectWithoutTest_scheduleInput = {
    where: api_collectionsWhereUniqueInput
    create: XOR<api_collectionsCreateWithoutTest_scheduleInput, api_collectionsUncheckedCreateWithoutTest_scheduleInput>
  }

  export type UserUpsertWithoutTest_schedulesInput = {
    update: XOR<UserUpdateWithoutTest_schedulesInput, UserUncheckedUpdateWithoutTest_schedulesInput>
    create: XOR<UserCreateWithoutTest_schedulesInput, UserUncheckedCreateWithoutTest_schedulesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTest_schedulesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTest_schedulesInput, UserUncheckedUpdateWithoutTest_schedulesInput>
  }

  export type UserUpdateWithoutTest_schedulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    token?: NullableStringFieldUpdateOperationsInput | string | null
    api_tests?: api_testsUpdateManyWithoutUserNestedInput
    api_collections?: api_collectionsUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutTest_schedulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    token?: NullableStringFieldUpdateOperationsInput | string | null
    api_tests?: api_testsUncheckedUpdateManyWithoutUserNestedInput
    api_collections?: api_collectionsUncheckedUpdateManyWithoutUserNestedInput
  }

  export type collection_runsUpsertWithWhereUniqueWithoutTest_schedulesInput = {
    where: collection_runsWhereUniqueInput
    update: XOR<collection_runsUpdateWithoutTest_schedulesInput, collection_runsUncheckedUpdateWithoutTest_schedulesInput>
    create: XOR<collection_runsCreateWithoutTest_schedulesInput, collection_runsUncheckedCreateWithoutTest_schedulesInput>
  }

  export type collection_runsUpdateWithWhereUniqueWithoutTest_schedulesInput = {
    where: collection_runsWhereUniqueInput
    data: XOR<collection_runsUpdateWithoutTest_schedulesInput, collection_runsUncheckedUpdateWithoutTest_schedulesInput>
  }

  export type collection_runsUpdateManyWithWhereWithoutTest_schedulesInput = {
    where: collection_runsScalarWhereInput
    data: XOR<collection_runsUpdateManyMutationInput, collection_runsUncheckedUpdateManyWithoutTest_schedulesInput>
  }

  export type collection_runsScalarWhereInput = {
    AND?: collection_runsScalarWhereInput | collection_runsScalarWhereInput[]
    OR?: collection_runsScalarWhereInput[]
    NOT?: collection_runsScalarWhereInput | collection_runsScalarWhereInput[]
    id?: StringFilter<"collection_runs"> | string
    collection_id?: StringFilter<"collection_runs"> | string
    status?: StringFilter<"collection_runs"> | string
    total_tests?: IntFilter<"collection_runs"> | number
    success_count?: IntFilter<"collection_runs"> | number
    failure_count?: IntFilter<"collection_runs"> | number
    total_duration?: IntFilter<"collection_runs"> | number
    user_id?: StringFilter<"collection_runs"> | string
    test_schedules_id?: StringNullableFilter<"collection_runs"> | string | null
    created_at?: DateTimeFilter<"collection_runs"> | Date | string
    completed_at?: DateTimeFilter<"collection_runs"> | Date | string
  }

  export type api_collectionsUpsertWithoutTest_scheduleInput = {
    update: XOR<api_collectionsUpdateWithoutTest_scheduleInput, api_collectionsUncheckedUpdateWithoutTest_scheduleInput>
    create: XOR<api_collectionsCreateWithoutTest_scheduleInput, api_collectionsUncheckedCreateWithoutTest_scheduleInput>
    where?: api_collectionsWhereInput
  }

  export type api_collectionsUpdateToOneWithWhereWithoutTest_scheduleInput = {
    where?: api_collectionsWhereInput
    data: XOR<api_collectionsUpdateWithoutTest_scheduleInput, api_collectionsUncheckedUpdateWithoutTest_scheduleInput>
  }

  export type api_collectionsUpdateWithoutTest_scheduleInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    User?: UserUpdateOneRequiredWithoutApi_collectionsNestedInput
    api_tests?: api_testsUpdateManyWithoutApi_collectionNestedInput
    collection_runs?: collection_runsUpdateManyWithoutApi_collectionNestedInput
  }

  export type api_collectionsUncheckedUpdateWithoutTest_scheduleInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    api_tests?: api_testsUncheckedUpdateManyWithoutApi_collectionNestedInput
    collection_runs?: collection_runsUncheckedUpdateManyWithoutApi_collectionNestedInput
  }

  export type UserCreateWithoutApi_testsInput = {
    id?: string
    username: string
    password: string
    token?: string | null
    test_schedules?: test_schedulesCreateNestedManyWithoutUserInput
    api_collections?: api_collectionsCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutApi_testsInput = {
    id?: string
    username: string
    password: string
    token?: string | null
    test_schedules?: test_schedulesUncheckedCreateNestedManyWithoutUserInput
    api_collections?: api_collectionsUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutApi_testsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutApi_testsInput, UserUncheckedCreateWithoutApi_testsInput>
  }

  export type api_collectionsCreateWithoutApi_testsInput = {
    id?: string
    name: string
    description: string
    User: UserCreateNestedOneWithoutApi_collectionsInput
    collection_runs?: collection_runsCreateNestedManyWithoutApi_collectionInput
    test_schedule?: test_schedulesCreateNestedOneWithoutApi_collectionInput
  }

  export type api_collectionsUncheckedCreateWithoutApi_testsInput = {
    id?: string
    name: string
    description: string
    user_id: string
    collection_runs?: collection_runsUncheckedCreateNestedManyWithoutApi_collectionInput
    test_schedule?: test_schedulesUncheckedCreateNestedOneWithoutApi_collectionInput
  }

  export type api_collectionsCreateOrConnectWithoutApi_testsInput = {
    where: api_collectionsWhereUniqueInput
    create: XOR<api_collectionsCreateWithoutApi_testsInput, api_collectionsUncheckedCreateWithoutApi_testsInput>
  }

  export type test_resultsCreateWithoutApi_testInput = {
    id?: string
    status_code: number
    duration: number
    error?: string | null
    response?: string | null
    created_at?: Date | string
    collection_run: collection_runsCreateNestedOneWithoutTest_resultsInput
  }

  export type test_resultsUncheckedCreateWithoutApi_testInput = {
    id?: string
    collection_run_id: string
    status_code: number
    duration: number
    error?: string | null
    response?: string | null
    created_at?: Date | string
  }

  export type test_resultsCreateOrConnectWithoutApi_testInput = {
    where: test_resultsWhereUniqueInput
    create: XOR<test_resultsCreateWithoutApi_testInput, test_resultsUncheckedCreateWithoutApi_testInput>
  }

  export type test_resultsCreateManyApi_testInputEnvelope = {
    data: test_resultsCreateManyApi_testInput | test_resultsCreateManyApi_testInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutApi_testsInput = {
    update: XOR<UserUpdateWithoutApi_testsInput, UserUncheckedUpdateWithoutApi_testsInput>
    create: XOR<UserCreateWithoutApi_testsInput, UserUncheckedCreateWithoutApi_testsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutApi_testsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutApi_testsInput, UserUncheckedUpdateWithoutApi_testsInput>
  }

  export type UserUpdateWithoutApi_testsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    token?: NullableStringFieldUpdateOperationsInput | string | null
    test_schedules?: test_schedulesUpdateManyWithoutUserNestedInput
    api_collections?: api_collectionsUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutApi_testsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    token?: NullableStringFieldUpdateOperationsInput | string | null
    test_schedules?: test_schedulesUncheckedUpdateManyWithoutUserNestedInput
    api_collections?: api_collectionsUncheckedUpdateManyWithoutUserNestedInput
  }

  export type api_collectionsUpsertWithoutApi_testsInput = {
    update: XOR<api_collectionsUpdateWithoutApi_testsInput, api_collectionsUncheckedUpdateWithoutApi_testsInput>
    create: XOR<api_collectionsCreateWithoutApi_testsInput, api_collectionsUncheckedCreateWithoutApi_testsInput>
    where?: api_collectionsWhereInput
  }

  export type api_collectionsUpdateToOneWithWhereWithoutApi_testsInput = {
    where?: api_collectionsWhereInput
    data: XOR<api_collectionsUpdateWithoutApi_testsInput, api_collectionsUncheckedUpdateWithoutApi_testsInput>
  }

  export type api_collectionsUpdateWithoutApi_testsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    User?: UserUpdateOneRequiredWithoutApi_collectionsNestedInput
    collection_runs?: collection_runsUpdateManyWithoutApi_collectionNestedInput
    test_schedule?: test_schedulesUpdateOneWithoutApi_collectionNestedInput
  }

  export type api_collectionsUncheckedUpdateWithoutApi_testsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    collection_runs?: collection_runsUncheckedUpdateManyWithoutApi_collectionNestedInput
    test_schedule?: test_schedulesUncheckedUpdateOneWithoutApi_collectionNestedInput
  }

  export type test_resultsUpsertWithWhereUniqueWithoutApi_testInput = {
    where: test_resultsWhereUniqueInput
    update: XOR<test_resultsUpdateWithoutApi_testInput, test_resultsUncheckedUpdateWithoutApi_testInput>
    create: XOR<test_resultsCreateWithoutApi_testInput, test_resultsUncheckedCreateWithoutApi_testInput>
  }

  export type test_resultsUpdateWithWhereUniqueWithoutApi_testInput = {
    where: test_resultsWhereUniqueInput
    data: XOR<test_resultsUpdateWithoutApi_testInput, test_resultsUncheckedUpdateWithoutApi_testInput>
  }

  export type test_resultsUpdateManyWithWhereWithoutApi_testInput = {
    where: test_resultsScalarWhereInput
    data: XOR<test_resultsUpdateManyMutationInput, test_resultsUncheckedUpdateManyWithoutApi_testInput>
  }

  export type test_resultsScalarWhereInput = {
    AND?: test_resultsScalarWhereInput | test_resultsScalarWhereInput[]
    OR?: test_resultsScalarWhereInput[]
    NOT?: test_resultsScalarWhereInput | test_resultsScalarWhereInput[]
    id?: StringFilter<"test_results"> | string
    test_id?: StringFilter<"test_results"> | string
    collection_run_id?: StringFilter<"test_results"> | string
    status_code?: IntFilter<"test_results"> | number
    duration?: IntFilter<"test_results"> | number
    error?: StringNullableFilter<"test_results"> | string | null
    response?: StringNullableFilter<"test_results"> | string | null
    created_at?: DateTimeFilter<"test_results"> | Date | string
  }

  export type UserCreateWithoutApi_collectionsInput = {
    id?: string
    username: string
    password: string
    token?: string | null
    test_schedules?: test_schedulesCreateNestedManyWithoutUserInput
    api_tests?: api_testsCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutApi_collectionsInput = {
    id?: string
    username: string
    password: string
    token?: string | null
    test_schedules?: test_schedulesUncheckedCreateNestedManyWithoutUserInput
    api_tests?: api_testsUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutApi_collectionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutApi_collectionsInput, UserUncheckedCreateWithoutApi_collectionsInput>
  }

  export type api_testsCreateWithoutApi_collectionInput = {
    id?: string
    name: string
    method: string
    url: string
    headers: JsonNullValueInput | InputJsonValue
    body?: string | null
    response: JsonNullValueInput | InputJsonValue
    status_code: number
    User: UserCreateNestedOneWithoutApi_testsInput
    test_results?: test_resultsCreateNestedManyWithoutApi_testInput
  }

  export type api_testsUncheckedCreateWithoutApi_collectionInput = {
    id?: string
    name: string
    method: string
    url: string
    headers: JsonNullValueInput | InputJsonValue
    body?: string | null
    response: JsonNullValueInput | InputJsonValue
    status_code: number
    user_id: string
    test_results?: test_resultsUncheckedCreateNestedManyWithoutApi_testInput
  }

  export type api_testsCreateOrConnectWithoutApi_collectionInput = {
    where: api_testsWhereUniqueInput
    create: XOR<api_testsCreateWithoutApi_collectionInput, api_testsUncheckedCreateWithoutApi_collectionInput>
  }

  export type api_testsCreateManyApi_collectionInputEnvelope = {
    data: api_testsCreateManyApi_collectionInput | api_testsCreateManyApi_collectionInput[]
    skipDuplicates?: boolean
  }

  export type collection_runsCreateWithoutApi_collectionInput = {
    id?: string
    status: string
    total_tests: number
    success_count: number
    failure_count: number
    total_duration: number
    user_id: string
    created_at?: Date | string
    completed_at?: Date | string
    test_schedules?: test_schedulesCreateNestedOneWithoutCollection_runsInput
    test_results?: test_resultsCreateNestedManyWithoutCollection_runInput
  }

  export type collection_runsUncheckedCreateWithoutApi_collectionInput = {
    id?: string
    status: string
    total_tests: number
    success_count: number
    failure_count: number
    total_duration: number
    user_id: string
    test_schedules_id?: string | null
    created_at?: Date | string
    completed_at?: Date | string
    test_results?: test_resultsUncheckedCreateNestedManyWithoutCollection_runInput
  }

  export type collection_runsCreateOrConnectWithoutApi_collectionInput = {
    where: collection_runsWhereUniqueInput
    create: XOR<collection_runsCreateWithoutApi_collectionInput, collection_runsUncheckedCreateWithoutApi_collectionInput>
  }

  export type collection_runsCreateManyApi_collectionInputEnvelope = {
    data: collection_runsCreateManyApi_collectionInput | collection_runsCreateManyApi_collectionInput[]
    skipDuplicates?: boolean
  }

  export type test_schedulesCreateWithoutApi_collectionInput = {
    id?: string
    name: string
    active?: boolean
    frequency: string
    selected_days: JsonNullValueInput | InputJsonValue
    timer_type: string
    minute_interval: number
    hour_interval?: number | null
    day_time?: string | null
    week_day?: number | null
    week_time?: string | null
    send_email: boolean
    recipient_email: string
    created_at?: Date | string
    User: UserCreateNestedOneWithoutTest_schedulesInput
    collection_runs?: collection_runsCreateNestedManyWithoutTest_schedulesInput
  }

  export type test_schedulesUncheckedCreateWithoutApi_collectionInput = {
    id?: string
    name: string
    active?: boolean
    frequency: string
    selected_days: JsonNullValueInput | InputJsonValue
    timer_type: string
    minute_interval: number
    hour_interval?: number | null
    day_time?: string | null
    week_day?: number | null
    week_time?: string | null
    send_email: boolean
    recipient_email: string
    user_id: string
    created_at?: Date | string
    collection_runs?: collection_runsUncheckedCreateNestedManyWithoutTest_schedulesInput
  }

  export type test_schedulesCreateOrConnectWithoutApi_collectionInput = {
    where: test_schedulesWhereUniqueInput
    create: XOR<test_schedulesCreateWithoutApi_collectionInput, test_schedulesUncheckedCreateWithoutApi_collectionInput>
  }

  export type UserUpsertWithoutApi_collectionsInput = {
    update: XOR<UserUpdateWithoutApi_collectionsInput, UserUncheckedUpdateWithoutApi_collectionsInput>
    create: XOR<UserCreateWithoutApi_collectionsInput, UserUncheckedCreateWithoutApi_collectionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutApi_collectionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutApi_collectionsInput, UserUncheckedUpdateWithoutApi_collectionsInput>
  }

  export type UserUpdateWithoutApi_collectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    token?: NullableStringFieldUpdateOperationsInput | string | null
    test_schedules?: test_schedulesUpdateManyWithoutUserNestedInput
    api_tests?: api_testsUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutApi_collectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    token?: NullableStringFieldUpdateOperationsInput | string | null
    test_schedules?: test_schedulesUncheckedUpdateManyWithoutUserNestedInput
    api_tests?: api_testsUncheckedUpdateManyWithoutUserNestedInput
  }

  export type api_testsUpsertWithWhereUniqueWithoutApi_collectionInput = {
    where: api_testsWhereUniqueInput
    update: XOR<api_testsUpdateWithoutApi_collectionInput, api_testsUncheckedUpdateWithoutApi_collectionInput>
    create: XOR<api_testsCreateWithoutApi_collectionInput, api_testsUncheckedCreateWithoutApi_collectionInput>
  }

  export type api_testsUpdateWithWhereUniqueWithoutApi_collectionInput = {
    where: api_testsWhereUniqueInput
    data: XOR<api_testsUpdateWithoutApi_collectionInput, api_testsUncheckedUpdateWithoutApi_collectionInput>
  }

  export type api_testsUpdateManyWithWhereWithoutApi_collectionInput = {
    where: api_testsScalarWhereInput
    data: XOR<api_testsUpdateManyMutationInput, api_testsUncheckedUpdateManyWithoutApi_collectionInput>
  }

  export type collection_runsUpsertWithWhereUniqueWithoutApi_collectionInput = {
    where: collection_runsWhereUniqueInput
    update: XOR<collection_runsUpdateWithoutApi_collectionInput, collection_runsUncheckedUpdateWithoutApi_collectionInput>
    create: XOR<collection_runsCreateWithoutApi_collectionInput, collection_runsUncheckedCreateWithoutApi_collectionInput>
  }

  export type collection_runsUpdateWithWhereUniqueWithoutApi_collectionInput = {
    where: collection_runsWhereUniqueInput
    data: XOR<collection_runsUpdateWithoutApi_collectionInput, collection_runsUncheckedUpdateWithoutApi_collectionInput>
  }

  export type collection_runsUpdateManyWithWhereWithoutApi_collectionInput = {
    where: collection_runsScalarWhereInput
    data: XOR<collection_runsUpdateManyMutationInput, collection_runsUncheckedUpdateManyWithoutApi_collectionInput>
  }

  export type test_schedulesUpsertWithoutApi_collectionInput = {
    update: XOR<test_schedulesUpdateWithoutApi_collectionInput, test_schedulesUncheckedUpdateWithoutApi_collectionInput>
    create: XOR<test_schedulesCreateWithoutApi_collectionInput, test_schedulesUncheckedCreateWithoutApi_collectionInput>
    where?: test_schedulesWhereInput
  }

  export type test_schedulesUpdateToOneWithWhereWithoutApi_collectionInput = {
    where?: test_schedulesWhereInput
    data: XOR<test_schedulesUpdateWithoutApi_collectionInput, test_schedulesUncheckedUpdateWithoutApi_collectionInput>
  }

  export type test_schedulesUpdateWithoutApi_collectionInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    frequency?: StringFieldUpdateOperationsInput | string
    selected_days?: JsonNullValueInput | InputJsonValue
    timer_type?: StringFieldUpdateOperationsInput | string
    minute_interval?: IntFieldUpdateOperationsInput | number
    hour_interval?: NullableIntFieldUpdateOperationsInput | number | null
    day_time?: NullableStringFieldUpdateOperationsInput | string | null
    week_day?: NullableIntFieldUpdateOperationsInput | number | null
    week_time?: NullableStringFieldUpdateOperationsInput | string | null
    send_email?: BoolFieldUpdateOperationsInput | boolean
    recipient_email?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    User?: UserUpdateOneRequiredWithoutTest_schedulesNestedInput
    collection_runs?: collection_runsUpdateManyWithoutTest_schedulesNestedInput
  }

  export type test_schedulesUncheckedUpdateWithoutApi_collectionInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    frequency?: StringFieldUpdateOperationsInput | string
    selected_days?: JsonNullValueInput | InputJsonValue
    timer_type?: StringFieldUpdateOperationsInput | string
    minute_interval?: IntFieldUpdateOperationsInput | number
    hour_interval?: NullableIntFieldUpdateOperationsInput | number | null
    day_time?: NullableStringFieldUpdateOperationsInput | string | null
    week_day?: NullableIntFieldUpdateOperationsInput | number | null
    week_time?: NullableStringFieldUpdateOperationsInput | string | null
    send_email?: BoolFieldUpdateOperationsInput | boolean
    recipient_email?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    collection_runs?: collection_runsUncheckedUpdateManyWithoutTest_schedulesNestedInput
  }

  export type test_schedulesCreateWithoutCollection_runsInput = {
    id?: string
    name: string
    active?: boolean
    frequency: string
    selected_days: JsonNullValueInput | InputJsonValue
    timer_type: string
    minute_interval: number
    hour_interval?: number | null
    day_time?: string | null
    week_day?: number | null
    week_time?: string | null
    send_email: boolean
    recipient_email: string
    created_at?: Date | string
    User: UserCreateNestedOneWithoutTest_schedulesInput
    api_collection?: api_collectionsCreateNestedOneWithoutTest_scheduleInput
  }

  export type test_schedulesUncheckedCreateWithoutCollection_runsInput = {
    id?: string
    name: string
    collection_id?: string | null
    active?: boolean
    frequency: string
    selected_days: JsonNullValueInput | InputJsonValue
    timer_type: string
    minute_interval: number
    hour_interval?: number | null
    day_time?: string | null
    week_day?: number | null
    week_time?: string | null
    send_email: boolean
    recipient_email: string
    user_id: string
    created_at?: Date | string
  }

  export type test_schedulesCreateOrConnectWithoutCollection_runsInput = {
    where: test_schedulesWhereUniqueInput
    create: XOR<test_schedulesCreateWithoutCollection_runsInput, test_schedulesUncheckedCreateWithoutCollection_runsInput>
  }

  export type api_collectionsCreateWithoutCollection_runsInput = {
    id?: string
    name: string
    description: string
    User: UserCreateNestedOneWithoutApi_collectionsInput
    api_tests?: api_testsCreateNestedManyWithoutApi_collectionInput
    test_schedule?: test_schedulesCreateNestedOneWithoutApi_collectionInput
  }

  export type api_collectionsUncheckedCreateWithoutCollection_runsInput = {
    id?: string
    name: string
    description: string
    user_id: string
    api_tests?: api_testsUncheckedCreateNestedManyWithoutApi_collectionInput
    test_schedule?: test_schedulesUncheckedCreateNestedOneWithoutApi_collectionInput
  }

  export type api_collectionsCreateOrConnectWithoutCollection_runsInput = {
    where: api_collectionsWhereUniqueInput
    create: XOR<api_collectionsCreateWithoutCollection_runsInput, api_collectionsUncheckedCreateWithoutCollection_runsInput>
  }

  export type test_resultsCreateWithoutCollection_runInput = {
    id?: string
    status_code: number
    duration: number
    error?: string | null
    response?: string | null
    created_at?: Date | string
    api_test: api_testsCreateNestedOneWithoutTest_resultsInput
  }

  export type test_resultsUncheckedCreateWithoutCollection_runInput = {
    id?: string
    test_id: string
    status_code: number
    duration: number
    error?: string | null
    response?: string | null
    created_at?: Date | string
  }

  export type test_resultsCreateOrConnectWithoutCollection_runInput = {
    where: test_resultsWhereUniqueInput
    create: XOR<test_resultsCreateWithoutCollection_runInput, test_resultsUncheckedCreateWithoutCollection_runInput>
  }

  export type test_resultsCreateManyCollection_runInputEnvelope = {
    data: test_resultsCreateManyCollection_runInput | test_resultsCreateManyCollection_runInput[]
    skipDuplicates?: boolean
  }

  export type test_schedulesUpsertWithoutCollection_runsInput = {
    update: XOR<test_schedulesUpdateWithoutCollection_runsInput, test_schedulesUncheckedUpdateWithoutCollection_runsInput>
    create: XOR<test_schedulesCreateWithoutCollection_runsInput, test_schedulesUncheckedCreateWithoutCollection_runsInput>
    where?: test_schedulesWhereInput
  }

  export type test_schedulesUpdateToOneWithWhereWithoutCollection_runsInput = {
    where?: test_schedulesWhereInput
    data: XOR<test_schedulesUpdateWithoutCollection_runsInput, test_schedulesUncheckedUpdateWithoutCollection_runsInput>
  }

  export type test_schedulesUpdateWithoutCollection_runsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    frequency?: StringFieldUpdateOperationsInput | string
    selected_days?: JsonNullValueInput | InputJsonValue
    timer_type?: StringFieldUpdateOperationsInput | string
    minute_interval?: IntFieldUpdateOperationsInput | number
    hour_interval?: NullableIntFieldUpdateOperationsInput | number | null
    day_time?: NullableStringFieldUpdateOperationsInput | string | null
    week_day?: NullableIntFieldUpdateOperationsInput | number | null
    week_time?: NullableStringFieldUpdateOperationsInput | string | null
    send_email?: BoolFieldUpdateOperationsInput | boolean
    recipient_email?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    User?: UserUpdateOneRequiredWithoutTest_schedulesNestedInput
    api_collection?: api_collectionsUpdateOneWithoutTest_scheduleNestedInput
  }

  export type test_schedulesUncheckedUpdateWithoutCollection_runsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    collection_id?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    frequency?: StringFieldUpdateOperationsInput | string
    selected_days?: JsonNullValueInput | InputJsonValue
    timer_type?: StringFieldUpdateOperationsInput | string
    minute_interval?: IntFieldUpdateOperationsInput | number
    hour_interval?: NullableIntFieldUpdateOperationsInput | number | null
    day_time?: NullableStringFieldUpdateOperationsInput | string | null
    week_day?: NullableIntFieldUpdateOperationsInput | number | null
    week_time?: NullableStringFieldUpdateOperationsInput | string | null
    send_email?: BoolFieldUpdateOperationsInput | boolean
    recipient_email?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type api_collectionsUpsertWithoutCollection_runsInput = {
    update: XOR<api_collectionsUpdateWithoutCollection_runsInput, api_collectionsUncheckedUpdateWithoutCollection_runsInput>
    create: XOR<api_collectionsCreateWithoutCollection_runsInput, api_collectionsUncheckedCreateWithoutCollection_runsInput>
    where?: api_collectionsWhereInput
  }

  export type api_collectionsUpdateToOneWithWhereWithoutCollection_runsInput = {
    where?: api_collectionsWhereInput
    data: XOR<api_collectionsUpdateWithoutCollection_runsInput, api_collectionsUncheckedUpdateWithoutCollection_runsInput>
  }

  export type api_collectionsUpdateWithoutCollection_runsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    User?: UserUpdateOneRequiredWithoutApi_collectionsNestedInput
    api_tests?: api_testsUpdateManyWithoutApi_collectionNestedInput
    test_schedule?: test_schedulesUpdateOneWithoutApi_collectionNestedInput
  }

  export type api_collectionsUncheckedUpdateWithoutCollection_runsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    api_tests?: api_testsUncheckedUpdateManyWithoutApi_collectionNestedInput
    test_schedule?: test_schedulesUncheckedUpdateOneWithoutApi_collectionNestedInput
  }

  export type test_resultsUpsertWithWhereUniqueWithoutCollection_runInput = {
    where: test_resultsWhereUniqueInput
    update: XOR<test_resultsUpdateWithoutCollection_runInput, test_resultsUncheckedUpdateWithoutCollection_runInput>
    create: XOR<test_resultsCreateWithoutCollection_runInput, test_resultsUncheckedCreateWithoutCollection_runInput>
  }

  export type test_resultsUpdateWithWhereUniqueWithoutCollection_runInput = {
    where: test_resultsWhereUniqueInput
    data: XOR<test_resultsUpdateWithoutCollection_runInput, test_resultsUncheckedUpdateWithoutCollection_runInput>
  }

  export type test_resultsUpdateManyWithWhereWithoutCollection_runInput = {
    where: test_resultsScalarWhereInput
    data: XOR<test_resultsUpdateManyMutationInput, test_resultsUncheckedUpdateManyWithoutCollection_runInput>
  }

  export type api_testsCreateWithoutTest_resultsInput = {
    id?: string
    name: string
    method: string
    url: string
    headers: JsonNullValueInput | InputJsonValue
    body?: string | null
    response: JsonNullValueInput | InputJsonValue
    status_code: number
    User: UserCreateNestedOneWithoutApi_testsInput
    api_collection?: api_collectionsCreateNestedOneWithoutApi_testsInput
  }

  export type api_testsUncheckedCreateWithoutTest_resultsInput = {
    id?: string
    name: string
    method: string
    url: string
    headers: JsonNullValueInput | InputJsonValue
    body?: string | null
    response: JsonNullValueInput | InputJsonValue
    status_code: number
    user_id: string
    collection_id?: string | null
  }

  export type api_testsCreateOrConnectWithoutTest_resultsInput = {
    where: api_testsWhereUniqueInput
    create: XOR<api_testsCreateWithoutTest_resultsInput, api_testsUncheckedCreateWithoutTest_resultsInput>
  }

  export type collection_runsCreateWithoutTest_resultsInput = {
    id?: string
    status: string
    total_tests: number
    success_count: number
    failure_count: number
    total_duration: number
    user_id: string
    created_at?: Date | string
    completed_at?: Date | string
    test_schedules?: test_schedulesCreateNestedOneWithoutCollection_runsInput
    api_collection: api_collectionsCreateNestedOneWithoutCollection_runsInput
  }

  export type collection_runsUncheckedCreateWithoutTest_resultsInput = {
    id?: string
    collection_id: string
    status: string
    total_tests: number
    success_count: number
    failure_count: number
    total_duration: number
    user_id: string
    test_schedules_id?: string | null
    created_at?: Date | string
    completed_at?: Date | string
  }

  export type collection_runsCreateOrConnectWithoutTest_resultsInput = {
    where: collection_runsWhereUniqueInput
    create: XOR<collection_runsCreateWithoutTest_resultsInput, collection_runsUncheckedCreateWithoutTest_resultsInput>
  }

  export type api_testsUpsertWithoutTest_resultsInput = {
    update: XOR<api_testsUpdateWithoutTest_resultsInput, api_testsUncheckedUpdateWithoutTest_resultsInput>
    create: XOR<api_testsCreateWithoutTest_resultsInput, api_testsUncheckedCreateWithoutTest_resultsInput>
    where?: api_testsWhereInput
  }

  export type api_testsUpdateToOneWithWhereWithoutTest_resultsInput = {
    where?: api_testsWhereInput
    data: XOR<api_testsUpdateWithoutTest_resultsInput, api_testsUncheckedUpdateWithoutTest_resultsInput>
  }

  export type api_testsUpdateWithoutTest_resultsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    method?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    headers?: JsonNullValueInput | InputJsonValue
    body?: NullableStringFieldUpdateOperationsInput | string | null
    response?: JsonNullValueInput | InputJsonValue
    status_code?: IntFieldUpdateOperationsInput | number
    User?: UserUpdateOneRequiredWithoutApi_testsNestedInput
    api_collection?: api_collectionsUpdateOneWithoutApi_testsNestedInput
  }

  export type api_testsUncheckedUpdateWithoutTest_resultsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    method?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    headers?: JsonNullValueInput | InputJsonValue
    body?: NullableStringFieldUpdateOperationsInput | string | null
    response?: JsonNullValueInput | InputJsonValue
    status_code?: IntFieldUpdateOperationsInput | number
    user_id?: StringFieldUpdateOperationsInput | string
    collection_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type collection_runsUpsertWithoutTest_resultsInput = {
    update: XOR<collection_runsUpdateWithoutTest_resultsInput, collection_runsUncheckedUpdateWithoutTest_resultsInput>
    create: XOR<collection_runsCreateWithoutTest_resultsInput, collection_runsUncheckedCreateWithoutTest_resultsInput>
    where?: collection_runsWhereInput
  }

  export type collection_runsUpdateToOneWithWhereWithoutTest_resultsInput = {
    where?: collection_runsWhereInput
    data: XOR<collection_runsUpdateWithoutTest_resultsInput, collection_runsUncheckedUpdateWithoutTest_resultsInput>
  }

  export type collection_runsUpdateWithoutTest_resultsInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    total_tests?: IntFieldUpdateOperationsInput | number
    success_count?: IntFieldUpdateOperationsInput | number
    failure_count?: IntFieldUpdateOperationsInput | number
    total_duration?: IntFieldUpdateOperationsInput | number
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    completed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    test_schedules?: test_schedulesUpdateOneWithoutCollection_runsNestedInput
    api_collection?: api_collectionsUpdateOneRequiredWithoutCollection_runsNestedInput
  }

  export type collection_runsUncheckedUpdateWithoutTest_resultsInput = {
    id?: StringFieldUpdateOperationsInput | string
    collection_id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    total_tests?: IntFieldUpdateOperationsInput | number
    success_count?: IntFieldUpdateOperationsInput | number
    failure_count?: IntFieldUpdateOperationsInput | number
    total_duration?: IntFieldUpdateOperationsInput | number
    user_id?: StringFieldUpdateOperationsInput | string
    test_schedules_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    completed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type test_schedulesCreateManyUserInput = {
    id?: string
    name: string
    collection_id?: string | null
    active?: boolean
    frequency: string
    selected_days: JsonNullValueInput | InputJsonValue
    timer_type: string
    minute_interval: number
    hour_interval?: number | null
    day_time?: string | null
    week_day?: number | null
    week_time?: string | null
    send_email: boolean
    recipient_email: string
    created_at?: Date | string
  }

  export type api_testsCreateManyUserInput = {
    id?: string
    name: string
    method: string
    url: string
    headers: JsonNullValueInput | InputJsonValue
    body?: string | null
    response: JsonNullValueInput | InputJsonValue
    status_code: number
    collection_id?: string | null
  }

  export type api_collectionsCreateManyUserInput = {
    id?: string
    name: string
    description: string
  }

  export type test_schedulesUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    frequency?: StringFieldUpdateOperationsInput | string
    selected_days?: JsonNullValueInput | InputJsonValue
    timer_type?: StringFieldUpdateOperationsInput | string
    minute_interval?: IntFieldUpdateOperationsInput | number
    hour_interval?: NullableIntFieldUpdateOperationsInput | number | null
    day_time?: NullableStringFieldUpdateOperationsInput | string | null
    week_day?: NullableIntFieldUpdateOperationsInput | number | null
    week_time?: NullableStringFieldUpdateOperationsInput | string | null
    send_email?: BoolFieldUpdateOperationsInput | boolean
    recipient_email?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    collection_runs?: collection_runsUpdateManyWithoutTest_schedulesNestedInput
    api_collection?: api_collectionsUpdateOneWithoutTest_scheduleNestedInput
  }

  export type test_schedulesUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    collection_id?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    frequency?: StringFieldUpdateOperationsInput | string
    selected_days?: JsonNullValueInput | InputJsonValue
    timer_type?: StringFieldUpdateOperationsInput | string
    minute_interval?: IntFieldUpdateOperationsInput | number
    hour_interval?: NullableIntFieldUpdateOperationsInput | number | null
    day_time?: NullableStringFieldUpdateOperationsInput | string | null
    week_day?: NullableIntFieldUpdateOperationsInput | number | null
    week_time?: NullableStringFieldUpdateOperationsInput | string | null
    send_email?: BoolFieldUpdateOperationsInput | boolean
    recipient_email?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    collection_runs?: collection_runsUncheckedUpdateManyWithoutTest_schedulesNestedInput
  }

  export type test_schedulesUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    collection_id?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    frequency?: StringFieldUpdateOperationsInput | string
    selected_days?: JsonNullValueInput | InputJsonValue
    timer_type?: StringFieldUpdateOperationsInput | string
    minute_interval?: IntFieldUpdateOperationsInput | number
    hour_interval?: NullableIntFieldUpdateOperationsInput | number | null
    day_time?: NullableStringFieldUpdateOperationsInput | string | null
    week_day?: NullableIntFieldUpdateOperationsInput | number | null
    week_time?: NullableStringFieldUpdateOperationsInput | string | null
    send_email?: BoolFieldUpdateOperationsInput | boolean
    recipient_email?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type api_testsUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    method?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    headers?: JsonNullValueInput | InputJsonValue
    body?: NullableStringFieldUpdateOperationsInput | string | null
    response?: JsonNullValueInput | InputJsonValue
    status_code?: IntFieldUpdateOperationsInput | number
    api_collection?: api_collectionsUpdateOneWithoutApi_testsNestedInput
    test_results?: test_resultsUpdateManyWithoutApi_testNestedInput
  }

  export type api_testsUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    method?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    headers?: JsonNullValueInput | InputJsonValue
    body?: NullableStringFieldUpdateOperationsInput | string | null
    response?: JsonNullValueInput | InputJsonValue
    status_code?: IntFieldUpdateOperationsInput | number
    collection_id?: NullableStringFieldUpdateOperationsInput | string | null
    test_results?: test_resultsUncheckedUpdateManyWithoutApi_testNestedInput
  }

  export type api_testsUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    method?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    headers?: JsonNullValueInput | InputJsonValue
    body?: NullableStringFieldUpdateOperationsInput | string | null
    response?: JsonNullValueInput | InputJsonValue
    status_code?: IntFieldUpdateOperationsInput | number
    collection_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type api_collectionsUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    api_tests?: api_testsUpdateManyWithoutApi_collectionNestedInput
    collection_runs?: collection_runsUpdateManyWithoutApi_collectionNestedInput
    test_schedule?: test_schedulesUpdateOneWithoutApi_collectionNestedInput
  }

  export type api_collectionsUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    api_tests?: api_testsUncheckedUpdateManyWithoutApi_collectionNestedInput
    collection_runs?: collection_runsUncheckedUpdateManyWithoutApi_collectionNestedInput
    test_schedule?: test_schedulesUncheckedUpdateOneWithoutApi_collectionNestedInput
  }

  export type api_collectionsUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
  }

  export type collection_runsCreateManyTest_schedulesInput = {
    id?: string
    collection_id: string
    status: string
    total_tests: number
    success_count: number
    failure_count: number
    total_duration: number
    user_id: string
    created_at?: Date | string
    completed_at?: Date | string
  }

  export type collection_runsUpdateWithoutTest_schedulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    total_tests?: IntFieldUpdateOperationsInput | number
    success_count?: IntFieldUpdateOperationsInput | number
    failure_count?: IntFieldUpdateOperationsInput | number
    total_duration?: IntFieldUpdateOperationsInput | number
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    completed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    api_collection?: api_collectionsUpdateOneRequiredWithoutCollection_runsNestedInput
    test_results?: test_resultsUpdateManyWithoutCollection_runNestedInput
  }

  export type collection_runsUncheckedUpdateWithoutTest_schedulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    collection_id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    total_tests?: IntFieldUpdateOperationsInput | number
    success_count?: IntFieldUpdateOperationsInput | number
    failure_count?: IntFieldUpdateOperationsInput | number
    total_duration?: IntFieldUpdateOperationsInput | number
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    completed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    test_results?: test_resultsUncheckedUpdateManyWithoutCollection_runNestedInput
  }

  export type collection_runsUncheckedUpdateManyWithoutTest_schedulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    collection_id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    total_tests?: IntFieldUpdateOperationsInput | number
    success_count?: IntFieldUpdateOperationsInput | number
    failure_count?: IntFieldUpdateOperationsInput | number
    total_duration?: IntFieldUpdateOperationsInput | number
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    completed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type test_resultsCreateManyApi_testInput = {
    id?: string
    collection_run_id: string
    status_code: number
    duration: number
    error?: string | null
    response?: string | null
    created_at?: Date | string
  }

  export type test_resultsUpdateWithoutApi_testInput = {
    id?: StringFieldUpdateOperationsInput | string
    status_code?: IntFieldUpdateOperationsInput | number
    duration?: IntFieldUpdateOperationsInput | number
    error?: NullableStringFieldUpdateOperationsInput | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    collection_run?: collection_runsUpdateOneRequiredWithoutTest_resultsNestedInput
  }

  export type test_resultsUncheckedUpdateWithoutApi_testInput = {
    id?: StringFieldUpdateOperationsInput | string
    collection_run_id?: StringFieldUpdateOperationsInput | string
    status_code?: IntFieldUpdateOperationsInput | number
    duration?: IntFieldUpdateOperationsInput | number
    error?: NullableStringFieldUpdateOperationsInput | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type test_resultsUncheckedUpdateManyWithoutApi_testInput = {
    id?: StringFieldUpdateOperationsInput | string
    collection_run_id?: StringFieldUpdateOperationsInput | string
    status_code?: IntFieldUpdateOperationsInput | number
    duration?: IntFieldUpdateOperationsInput | number
    error?: NullableStringFieldUpdateOperationsInput | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type api_testsCreateManyApi_collectionInput = {
    id?: string
    name: string
    method: string
    url: string
    headers: JsonNullValueInput | InputJsonValue
    body?: string | null
    response: JsonNullValueInput | InputJsonValue
    status_code: number
    user_id: string
  }

  export type collection_runsCreateManyApi_collectionInput = {
    id?: string
    status: string
    total_tests: number
    success_count: number
    failure_count: number
    total_duration: number
    user_id: string
    test_schedules_id?: string | null
    created_at?: Date | string
    completed_at?: Date | string
  }

  export type api_testsUpdateWithoutApi_collectionInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    method?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    headers?: JsonNullValueInput | InputJsonValue
    body?: NullableStringFieldUpdateOperationsInput | string | null
    response?: JsonNullValueInput | InputJsonValue
    status_code?: IntFieldUpdateOperationsInput | number
    User?: UserUpdateOneRequiredWithoutApi_testsNestedInput
    test_results?: test_resultsUpdateManyWithoutApi_testNestedInput
  }

  export type api_testsUncheckedUpdateWithoutApi_collectionInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    method?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    headers?: JsonNullValueInput | InputJsonValue
    body?: NullableStringFieldUpdateOperationsInput | string | null
    response?: JsonNullValueInput | InputJsonValue
    status_code?: IntFieldUpdateOperationsInput | number
    user_id?: StringFieldUpdateOperationsInput | string
    test_results?: test_resultsUncheckedUpdateManyWithoutApi_testNestedInput
  }

  export type api_testsUncheckedUpdateManyWithoutApi_collectionInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    method?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    headers?: JsonNullValueInput | InputJsonValue
    body?: NullableStringFieldUpdateOperationsInput | string | null
    response?: JsonNullValueInput | InputJsonValue
    status_code?: IntFieldUpdateOperationsInput | number
    user_id?: StringFieldUpdateOperationsInput | string
  }

  export type collection_runsUpdateWithoutApi_collectionInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    total_tests?: IntFieldUpdateOperationsInput | number
    success_count?: IntFieldUpdateOperationsInput | number
    failure_count?: IntFieldUpdateOperationsInput | number
    total_duration?: IntFieldUpdateOperationsInput | number
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    completed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    test_schedules?: test_schedulesUpdateOneWithoutCollection_runsNestedInput
    test_results?: test_resultsUpdateManyWithoutCollection_runNestedInput
  }

  export type collection_runsUncheckedUpdateWithoutApi_collectionInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    total_tests?: IntFieldUpdateOperationsInput | number
    success_count?: IntFieldUpdateOperationsInput | number
    failure_count?: IntFieldUpdateOperationsInput | number
    total_duration?: IntFieldUpdateOperationsInput | number
    user_id?: StringFieldUpdateOperationsInput | string
    test_schedules_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    completed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    test_results?: test_resultsUncheckedUpdateManyWithoutCollection_runNestedInput
  }

  export type collection_runsUncheckedUpdateManyWithoutApi_collectionInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    total_tests?: IntFieldUpdateOperationsInput | number
    success_count?: IntFieldUpdateOperationsInput | number
    failure_count?: IntFieldUpdateOperationsInput | number
    total_duration?: IntFieldUpdateOperationsInput | number
    user_id?: StringFieldUpdateOperationsInput | string
    test_schedules_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    completed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type test_resultsCreateManyCollection_runInput = {
    id?: string
    test_id: string
    status_code: number
    duration: number
    error?: string | null
    response?: string | null
    created_at?: Date | string
  }

  export type test_resultsUpdateWithoutCollection_runInput = {
    id?: StringFieldUpdateOperationsInput | string
    status_code?: IntFieldUpdateOperationsInput | number
    duration?: IntFieldUpdateOperationsInput | number
    error?: NullableStringFieldUpdateOperationsInput | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    api_test?: api_testsUpdateOneRequiredWithoutTest_resultsNestedInput
  }

  export type test_resultsUncheckedUpdateWithoutCollection_runInput = {
    id?: StringFieldUpdateOperationsInput | string
    test_id?: StringFieldUpdateOperationsInput | string
    status_code?: IntFieldUpdateOperationsInput | number
    duration?: IntFieldUpdateOperationsInput | number
    error?: NullableStringFieldUpdateOperationsInput | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type test_resultsUncheckedUpdateManyWithoutCollection_runInput = {
    id?: StringFieldUpdateOperationsInput | string
    test_id?: StringFieldUpdateOperationsInput | string
    status_code?: IntFieldUpdateOperationsInput | number
    duration?: IntFieldUpdateOperationsInput | number
    error?: NullableStringFieldUpdateOperationsInput | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}